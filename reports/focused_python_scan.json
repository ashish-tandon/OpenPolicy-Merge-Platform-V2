[
  {
    "file": "services/api-gateway/run_tests.py",
    "variables": [
      "command",
      "marker_expr",
      "result",
      "args",
      "parser",
      "success"
    ],
    "functions": [
      "run_all_tests",
      "run_tests_with_markers",
      "run_security_checks",
      "run_coverage_report",
      "run_command",
      "run_unit_tests",
      "run_type_checking",
      "main",
      "run_integration_tests",
      "run_specific_test",
      "run_coverage_html",
      "run_linting"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/test_multi_level_api.py",
    "variables": [
      "data",
      "response",
      "client"
    ],
    "functions": [
      "test_multi_level_government_api"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/setup_federal_jurisdiction.py",
    "variables": [
      "DB_PARAMS",
      "federal_id",
      "votes_count",
      "cursor",
      "existing",
      "jurisdictions_count",
      "rep_count",
      "conn",
      "bills_count",
      "federal_jurisdiction_id"
    ],
    "functions": [
      "check_existing_data",
      "create_federal_jurisdiction"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/config.py",
    "variables": [
      "case_sensitive",
      "settings",
      "env_file"
    ],
    "functions": [],
    "classes": [
      "Config",
      "Settings"
    ]
  },
  {
    "file": "services/api-gateway/app/database.py",
    "variables": [
      "initial_sync",
      "initial_sources",
      "engine",
      "SessionLocal",
      "Base",
      "logger",
      "db"
    ],
    "functions": [
      "init_db",
      "get_db",
      "check_db_connection"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/__init__.py",
    "variables": [
      "__email__",
      "__author__",
      "__version__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/main.py",
    "variables": [
      "app",
      "logger"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/core/websocket_auth.py",
    "variables": [
      "idle_time",
      "user",
      "websocket_authenticator",
      "websocket_auth_middleware",
      "exp",
      "user_id",
      "logger",
      "auth_header",
      "default_auth_config",
      "expired_users",
      "token",
      "now",
      "payload"
    ],
    "functions": [
      "get_user_by_session",
      "require_websocket_role",
      "get_active_sessions_count",
      "require_websocket_permission",
      "remove_user_session",
      "require_websocket_auth",
      "get_user_by_id",
      "get_active_users",
      "update_user_activity",
      "validate_user_permission",
      "cleanup_expired_sessions",
      "get_websocket_user",
      "__init__",
      "validate_user_role"
    ],
    "classes": [
      "WebSocketAuthConfig",
      "WebSocketAuthMiddleware",
      "WebSocketUser",
      "WebSocketAuthenticator"
    ]
  },
  {
    "file": "services/api-gateway/app/core/metrics.py",
    "variables": [
      "duration",
      "REQUEST_DURATION",
      "DB_CONNECTION_GAUGE",
      "CACHE_HITS",
      "endpoint",
      "ENTITIES_DELETED",
      "start_time",
      "ENTITIES_CREATED",
      "CACHE_MISSES",
      "DB_QUERY_DURATION",
      "response",
      "REQUEST_COUNT",
      "ENTITIES_UPDATED"
    ],
    "functions": [
      "setup_metrics",
      "get_metrics"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/core/events.py",
    "variables": [
      "BILL_STATUS_CHANGE",
      "MEMBER_SPEAKING",
      "NORMAL",
      "event_class",
      "DEBATE_STATEMENT",
      "SYSTEM_ALERT",
      "VOTE_UPDATE",
      "PRESENCE_UPDATE",
      "COMMITTEE_MEETING_UPDATE",
      "NOTIFICATION",
      "DEBATE",
      "BILL_AMENDMENT",
      "COMMITTEE",
      "EVENT_REGISTRY",
      "MEMBER_PRESENCE",
      "LOW",
      "MEMBER",
      "PARLIAMENTARY",
      "USER",
      "use_enum_values",
      "DEBATE_END",
      "BILL_INTRODUCTION",
      "COMMITTEE_STUDY_UPDATE",
      "USER_LEAVE",
      "SYSTEM",
      "CRITICAL",
      "COMMITTEE_MEETING_END",
      "DEBATE_START",
      "HIGH",
      "HEARTBEAT",
      "USER_JOIN",
      "USER_TYPING",
      "COMMITTEE_MEETING_START"
    ],
    "functions": [
      "create_vote_update_event",
      "create_debate_statement_event",
      "create_event_from_data",
      "create_heartbeat_event",
      "create_committee_meeting_event",
      "create_notification_event",
      "get_event_class",
      "create_bill_status_change_event"
    ],
    "classes": [
      "BaseEvent",
      "DebateStatementData",
      "UserPresenceData",
      "VoteData",
      "NotificationData",
      "SystemAlertData",
      "MemberPresenceEvent",
      "SystemAlertEvent",
      "DebateStartEvent",
      "CommitteeStudyUpdateEvent",
      "UserTypingEvent",
      "CommitteeMeetingData",
      "DebateStatementEvent",
      "EventType",
      "Config",
      "BillStatusData",
      "NotificationEvent",
      "EventPriority",
      "CommitteeStudyData",
      "BillAmendmentData",
      "MemberSpeakingEvent",
      "UserTypingData",
      "DebateEndEvent",
      "UserPresenceEvent",
      "EventCategory",
      "BillAmendmentEvent",
      "CommitteeMeetingUpdateEvent",
      "BillStatusChangeEvent",
      "MemberPresenceData",
      "MemberSpeakingData",
      "HeartbeatEvent",
      "VoteUpdateEvent",
      "DebateSessionData"
    ]
  },
  {
    "file": "services/api-gateway/app/core/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/core/redis_service.py",
    "variables": [
      "event_data",
      "message",
      "subscribers",
      "patterns",
      "logger",
      "default_redis_config",
      "redis_service",
      "info",
      "data",
      "channel"
    ],
    "functions": [
      "__init__"
    ],
    "classes": [
      "RedisConfig",
      "RedisService"
    ]
  },
  {
    "file": "services/api-gateway/app/core/middleware.py",
    "variables": [
      "duration",
      "endpoint_type",
      "redis_key",
      "oldest_request",
      "pipe",
      "start_time",
      "cutoff",
      "results",
      "response",
      "logger",
      "retry_after",
      "current_count",
      "client_ip",
      "ttl",
      "current_time"
    ],
    "functions": [
      "_clean_old_requests",
      "__init__",
      "_get_endpoint_type"
    ],
    "classes": [
      "RedisRateLimitMiddleware",
      "RateLimitMiddleware",
      "RequestLoggingMiddleware"
    ]
  },
  {
    "file": "services/api-gateway/app/core/websocket.py",
    "variables": [
      "BILL_STATUS_CHANGE",
      "event",
      "connections",
      "is_healthy",
      "room_stats",
      "NORMAL",
      "last_heartbeat",
      "idle_connections",
      "time_since_heartbeat",
      "healthy_connections",
      "DEBATE_STATEMENT",
      "VOTE_UPDATE",
      "logger",
      "PRESENCE_UPDATE",
      "COMMITTEE_MEETING_UPDATE",
      "status",
      "NOTIFICATION",
      "LOW",
      "disconnected_connections",
      "disconnected",
      "total_connections",
      "CRITICAL",
      "total_rooms",
      "HIGH",
      "HEARTBEAT",
      "connection_manager"
    ],
    "functions": [
      "__init__",
      "get_connection_stats",
      "get_connection_health",
      "update_heartbeat",
      "check_connection_health",
      "leave_room",
      "join_room",
      "cleanup_idle_connections",
      "get_room_info",
      "get_connection_info",
      "get_stats",
      "disconnect"
    ],
    "classes": [
      "ConnectionManager",
      "WebSocketEvent",
      "EventType",
      "WebSocketService",
      "EventPriority"
    ]
  },
  {
    "file": "services/api-gateway/app/models/user_voting.py",
    "variables": [
      "vote_date",
      "bill_id",
      "location",
      "constituency",
      "reason",
      "session_id",
      "influence_factors",
      "__table_args__",
      "vote_choice",
      "public_visibility",
      "id",
      "user_id",
      "vote_weight",
      "related_issues",
      "party_preference",
      "device",
      "updated_at",
      "__tablename__",
      "confidence_level"
    ],
    "functions": [
      "to_dict",
      "__repr__"
    ],
    "classes": [
      "UserVote"
    ]
  },
  {
    "file": "services/api-gateway/app/models/rss_feeds.py",
    "variables": [
      "top_categories",
      "view_count",
      "subscription_date",
      "subscriber_ip",
      "last_accessed",
      "custom_styling",
      "feed_items",
      "item_summary",
      "item_content",
      "is_featured",
      "feed",
      "daily_views",
      "daily_unsubscribes",
      "access_count",
      "subscriber_count",
      "generation_time_ms",
      "expires_at",
      "feed_description",
      "feed_language",
      "last_generated",
      "__table_args__",
      "subscriber_countries",
      "item_guid",
      "rss_content",
      "subscriber_user_agent",
      "item_link",
      "item_metadata",
      "user_agents",
      "content_hash",
      "is_active",
      "item_description",
      "subscriber_email",
      "hits",
      "generation_count",
      "content_id",
      "content_type",
      "top_items",
      "last_hit",
      "feed_type",
      "subscriptions",
      "id",
      "item_author",
      "item_pub_date",
      "update_frequency_minutes",
      "feed_url",
      "referrers",
      "updated_at",
      "cache_key",
      "error_count",
      "feed_name",
      "last_error",
      "max_items",
      "analytics_date",
      "is_public",
      "subscription_source",
      "daily_subscribers",
      "item_title",
      "item_count",
      "created_at",
      "items_generated",
      "filter_criteria",
      "unsubscribe_token",
      "feed_title",
      "item_category",
      "__tablename__",
      "feed_id"
    ],
    "functions": [],
    "classes": [
      "RSSFeedItem",
      "RSSAnalytics",
      "RSSFeed",
      "RSSSubscription",
      "RSSCache"
    ]
  },
  {
    "file": "services/api-gateway/app/models/entity_audit_log.py",
    "variables": [
      "__table_args__",
      "__tablename__",
      "id",
      "user_id",
      "entity_id",
      "created_at",
      "action",
      "changes",
      "context_data",
      "entity_type"
    ],
    "functions": [
      "to_dict",
      "__repr__"
    ],
    "classes": [
      "EntityAuditLog"
    ]
  },
  {
    "file": "services/api-gateway/app/models/data_visualizations.py",
    "variables": [
      "axis_config",
      "category",
      "description",
      "view_count",
      "display_name",
      "chart_type",
      "title_override",
      "last_accessed",
      "data_hash",
      "data_query",
      "visualization_type",
      "daily_generations",
      "is_featured",
      "responsive_config",
      "data_source",
      "visualization_type_id",
      "visualizations",
      "created_by",
      "generation_time_ms",
      "generated_image",
      "expires_at",
      "daily_unique_users",
      "visualization",
      "last_generated",
      "__table_args__",
      "height",
      "type_name",
      "animation_config",
      "supported_data_types",
      "dashboard",
      "color_scheme",
      "dashboard_visualizations",
      "configuration",
      "accessibility_config",
      "is_active",
      "generated_data",
      "hits",
      "default_options",
      "template_name",
      "last_hit",
      "refresh_interval",
      "custom_config",
      "tooltip_config",
      "id",
      "position_x",
      "avg_generation_time",
      "tags",
      "dashboard_id",
      "layout_config",
      "default_configuration",
      "cache_key",
      "position_y",
      "theme",
      "error_count",
      "title",
      "data_size",
      "analytics_date",
      "usage_count",
      "is_public",
      "config_hash",
      "visualization_id",
      "is_visible",
      "created_at",
      "daily_cache_hits",
      "legend_config",
      "configuration_schema",
      "cache_expires",
      "avg_data_size",
      "user_engagement_score",
      "sample_data",
      "width",
      "updated_at",
      "__tablename__",
      "daily_views"
    ],
    "functions": [],
    "classes": [
      "VisualizationType",
      "DataVisualization",
      "DashboardVisualization",
      "VisualizationCache",
      "VisualizationAnalytics",
      "VisualizationTemplate",
      "Dashboard",
      "ChartConfiguration"
    ]
  },
  {
    "file": "services/api-gateway/app/models/government_levels_simple.py",
    "variables": [
      "vote_position",
      "vote_date",
      "bill_id",
      "records_processed",
      "jurisdiction_type",
      "description",
      "records_updated",
      "name",
      "level_order",
      "location",
      "error_message",
      "introduced_date",
      "started_at",
      "__table_args__",
      "website",
      "legacy_class",
      "jurisdiction_id",
      "status",
      "sponsor_id",
      "code",
      "last_updated",
      "source_type",
      "legacy_module",
      "ingestion_type",
      "phone",
      "province",
      "position",
      "bill_number",
      "id",
      "records_failed",
      "Base",
      "riding",
      "completed_at",
      "party",
      "records_created",
      "extras",
      "government_level_id",
      "title",
      "email",
      "url",
      "summary",
      "metadata_json",
      "created_at",
      "session",
      "data_source_id",
      "updated_at",
      "office_type",
      "__tablename__",
      "representative_id"
    ],
    "functions": [],
    "classes": [
      "Vote",
      "Bill",
      "IngestionLog",
      "GovernmentLevel",
      "Office",
      "Representative",
      "Jurisdiction",
      "DataSource"
    ]
  },
  {
    "file": "services/api-gateway/app/models/users.py",
    "variables": [
      "date_of_birth",
      "used_at",
      "last_activity",
      "full_name",
      "browser",
      "__table_args__",
      "font_size",
      "last_login",
      "notification_sms",
      "excluded_topics",
      "is_verified",
      "linkedin_url",
      "language_preference",
      "related_committees",
      "show_social_features",
      "favorite_topics",
      "created_at",
      "user",
      "refresh_token",
      "content_title",
      "favorite_parties",
      "actions_taken",
      "token",
      "activities",
      "notification_push",
      "high_contrast",
      "content_summary",
      "twitter_handle",
      "is_active",
      "content_difficulty",
      "sessions",
      "content_type",
      "keyboard_navigation",
      "related_bills",
      "user_id",
      "show_analytics",
      "password_reset_tokens",
      "ip_address",
      "profile_visibility",
      "screen_reader",
      "provider",
      "session_token",
      "updated_at",
      "privacy_level",
      "username",
      "location",
      "notification_email",
      "postal_code",
      "phone",
      "id",
      "scope",
      "activity_date",
      "facebook_url",
      "email",
      "avatar_url",
      "favorite_mps",
      "device",
      "__tablename__",
      "pages_viewed",
      "related_mps",
      "activity_sharing",
      "expires_at",
      "activity_type",
      "website",
      "bio",
      "data_collection",
      "theme_preference",
      "access_token",
      "oauth_accounts",
      "content_id",
      "third_party_sharing",
      "show_advanced_features",
      "preferences",
      "provider_account_id",
      "hashed_password",
      "timezone",
      "time_spent",
      "user_agent",
      "reduced_motion"
    ],
    "functions": [
      "to_dict",
      "__repr__",
      "is_valid"
    ],
    "classes": [
      "UserActivity",
      "PasswordResetToken",
      "UserSession",
      "UserPreferences",
      "OAuthAccount",
      "User"
    ]
  },
  {
    "file": "services/api-gateway/app/models/performance_optimization.py",
    "variables": [
      "calculation_method",
      "is_resolved",
      "alert_type",
      "alert_message",
      "report_period_start",
      "health_status",
      "health_check_name",
      "__table_args__",
      "avg_query_time",
      "report_type",
      "last_check",
      "report_period_end",
      "performance_improvement",
      "metric_category",
      "max_connections",
      "start_date",
      "strategy_description",
      "metric_type",
      "memory_limit",
      "baseline_unit",
      "created_at",
      "report_data",
      "metric_name",
      "summary_metrics",
      "implementation_notes",
      "implementations",
      "total_requests",
      "notification_channels",
      "query_count",
      "completion_date",
      "performance_impact",
      "baseline_name",
      "threshold_critical",
      "is_active",
      "is_automated",
      "last_updated",
      "hit_rate",
      "metric_unit",
      "ip_address",
      "buffer_hit_ratio",
      "check_interval",
      "last_error",
      "metric",
      "metric_value",
      "threshold_warning",
      "priority",
      "recommendations",
      "miss_count",
      "valid_until",
      "resolved_by",
      "updated_at",
      "health_check_type",
      "next_check",
      "strategy",
      "alert_severity",
      "implementation_name",
      "created_by",
      "index_size",
      "avg_response_time",
      "memory_usage",
      "collection_timestamp",
      "lock_wait_time",
      "rollback_plan",
      "valid_from",
      "resolution_notes",
      "strategy_id",
      "hit_count",
      "metric_id",
      "implementation_status",
      "cache_name",
      "table_size",
      "id",
      "database_name",
      "deadlock_count",
      "strategy_category",
      "confidence_interval",
      "target_metrics",
      "error_count",
      "resolved_at",
      "sample_size",
      "consecutive_failures",
      "baseline_value",
      "cache_type",
      "__tablename__",
      "implementation_type",
      "source_endpoint",
      "report_name",
      "estimated_effort",
      "strategy_name",
      "generated_by",
      "status",
      "response_time",
      "is_alert_enabled",
      "eviction_count",
      "slow_query_threshold",
      "alert_threshold",
      "alerts",
      "estimated_impact",
      "notification_sent",
      "connection_count",
      "slow_query_count",
      "user_agent",
      "session_id",
      "is_critical"
    ],
    "functions": [],
    "classes": [
      "OptimizationStrategy",
      "OptimizationImplementation",
      "PerformanceBaseline",
      "PerformanceReport",
      "PerformanceMetric",
      "DatabasePerformance",
      "SystemHealth",
      "PerformanceAlert",
      "CachePerformance"
    ]
  },
  {
    "file": "services/api-gateway/app/models/testing_qa.py",
    "variables": [
      "metadata",
      "calculation_method",
      "environment_variables",
      "database_url",
      "retry_count",
      "report_period_start",
      "quality_metrics",
      "__table_args__",
      "environment_id",
      "report_type",
      "metric_description",
      "report_period_end",
      "metric_category",
      "prerequisites",
      "covered_lines",
      "commit_hash",
      "start_time",
      "environment",
      "metric_type",
      "complexity",
      "unit",
      "max_parallel_tests",
      "branch_name",
      "test_cases",
      "created_at",
      "next_run",
      "supports_parallel",
      "schedule_name",
      "metric_name",
      "error_message",
      "end_time",
      "total_test_runs",
      "coverage_summary",
      "parallel_workers",
      "test_name",
      "notification_channels",
      "test_steps",
      "timeout_seconds",
      "skipped_tests",
      "parallel_execution",
      "suite_description",
      "total_tests_failed",
      "environment_name",
      "is_active",
      "is_automated",
      "environment_type",
      "last_updated",
      "test_case",
      "estimated_duration",
      "trigger_source",
      "total_tests_passed",
      "data_requirements",
      "screenshot_path",
      "overall_success_rate",
      "coverage_timestamp",
      "target_value",
      "priority",
      "recommendations",
      "test_description",
      "updated_at",
      "execution_frequency",
      "total_tests_executed",
      "suite_name",
      "failed_tests",
      "test_type",
      "created_by",
      "coverage_percentage",
      "total_tests",
      "test_case_id",
      "cron_expression",
      "uncovered_lines",
      "stack_trace",
      "max_retries",
      "log_output",
      "last_run",
      "id",
      "passed_tests",
      "execution_time",
      "is_data_dependent",
      "api_key",
      "__tablename__",
      "coverage_report_path",
      "report_name",
      "test_suite_id",
      "test_results",
      "test_run",
      "suite_category",
      "test_run_id",
      "run_type",
      "data_source",
      "base_url",
      "generated_by",
      "test_runs",
      "current_value",
      "trend_direction",
      "status",
      "test_suite",
      "test_framework",
      "expected_results",
      "coverage_type",
      "total_tests_skipped",
      "average_execution_time",
      "collection_frequency",
      "run_name",
      "timezone",
      "total_lines",
      "is_critical"
    ],
    "functions": [],
    "classes": [
      "TestSuite",
      "TestCoverage",
      "TestSchedule",
      "TestResult",
      "TestReport",
      "TestRun",
      "TestCase",
      "QualityMetric",
      "TestEnvironment"
    ]
  },
  {
    "file": "services/api-gateway/app/models/government_levels.py",
    "variables": [
      "vote_position",
      "vote_date",
      "bill_id",
      "records_processed",
      "records_updated",
      "description",
      "display_name",
      "name",
      "is_primary",
      "error_message",
      "first_name",
      "question",
      "introduced_date",
      "level_id",
      "personal_url",
      "started_at",
      "label",
      "district_id",
      "operation",
      "gender",
      "__table_args__",
      "note",
      "jurisdiction_id",
      "census_code",
      "status",
      "sponsor_id",
      "parliament",
      "end_date",
      "is_active",
      "passed_date",
      "vote_id",
      "last_updated",
      "province_territory",
      "start_date",
      "sponsor_name",
      "ocd_division_id",
      "bill_number",
      "id",
      "records_failed",
      "Base",
      "preferred_languages",
      "completed_at",
      "party",
      "last_name",
      "role",
      "bill_type",
      "records_created",
      "extras",
      "vote_number",
      "url",
      "title",
      "result",
      "duration_seconds",
      "short_title",
      "summary",
      "metadata_json",
      "photo_url",
      "created_at",
      "type",
      "short_name",
      "session",
      "data_source_id",
      "updated_at",
      "value",
      "district",
      "__tablename__",
      "representative_id"
    ],
    "functions": [],
    "classes": [
      "Vote",
      "Bill",
      "IngestionLog",
      "RepresentativeVote",
      "GovernmentLevel",
      "Office",
      "Representative",
      "Jurisdiction",
      "DataSource"
    ]
  },
  {
    "file": "services/api-gateway/app/models/__init__.py",
    "variables": [
      "__all__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/models/sync_status.py",
    "variables": [
      "records_processed",
      "records_updated",
      "__table_args__",
      "source_name",
      "id",
      "sync_details",
      "created_at",
      "status",
      "updated_at",
      "records_deleted",
      "error_message",
      "last_sync",
      "records_added",
      "__tablename__"
    ],
    "functions": [
      "to_dict",
      "__repr__"
    ],
    "classes": [
      "SyncStatus"
    ]
  },
  {
    "file": "services/api-gateway/app/models/language_support.py",
    "variables": [
      "context",
      "number_format",
      "user",
      "field_name",
      "translation_key",
      "daily_page_views",
      "currency_code",
      "is_primary",
      "daily_content_updated",
      "is_secondary",
      "domain",
      "last_used",
      "translated_value",
      "translations",
      "daily_content_created",
      "user_satisfaction_score",
      "translation_context",
      "reviewer_id",
      "translation_quality_score",
      "approved_by",
      "target_language_id",
      "source_language_id",
      "confidence_score",
      "__table_args__",
      "daily_active_users",
      "translation_notes",
      "language_id",
      "context_value",
      "is_approved",
      "source_language",
      "time_format",
      "is_active",
      "translation_status",
      "translator_id",
      "target_language",
      "review_notes",
      "content_id",
      "content_type",
      "translation_value",
      "target_text",
      "context_key",
      "date_format",
      "version",
      "proficiency_level",
      "id",
      "user_id",
      "language_name_native",
      "daily_translations_requested",
      "language_code",
      "analytics_date",
      "usage_count",
      "translation_quality",
      "direction",
      "source_text",
      "source_hash",
      "created_at",
      "language_name",
      "is_default",
      "user_preferences",
      "approved_at",
      "language",
      "updated_at",
      "__tablename__"
    ],
    "functions": [],
    "classes": [
      "UserLanguagePreference",
      "LanguageContext",
      "TranslationMemory",
      "Translation",
      "Language",
      "ContentTranslation",
      "LanguageAnalytics"
    ]
  },
  {
    "file": "services/api-gateway/app/models/house_status.py",
    "variables": [
      "related_vote_id",
      "sitting_status",
      "yeas",
      "sitting_date",
      "nays",
      "session_name",
      "event_description",
      "current_sitting_id",
      "related_debate_id",
      "quorum_met",
      "__table_args__",
      "duration_minutes",
      "current_amendment",
      "emergency_debate_requested",
      "house_status",
      "notes",
      "start_date",
      "government_party",
      "total_members",
      "speaker",
      "start_time",
      "riding",
      "motion_text",
      "house_vote_id",
      "session_number",
      "closure_motion_active",
      "vote_time",
      "event_title",
      "event_time",
      "current_debate",
      "created_at",
      "end_time",
      "debates",
      "update_source",
      "sitting_id",
      "paired_with",
      "voting_status",
      "current_time",
      "members_present",
      "house_vote",
      "event_metadata",
      "abstentions",
      "is_active",
      "last_updated",
      "time_allocation_minutes",
      "current_vote",
      "royal_assent_date",
      "opposition_leader",
      "current_session_id",
      "sitting_number",
      "related_debate",
      "vote_cast",
      "time_used_minutes",
      "current_debate_id",
      "vote_number",
      "current_sitting",
      "is_paired",
      "event_type",
      "priority",
      "closure_motion",
      "updated_at",
      "sittings",
      "question_period_status",
      "requires_notification",
      "vote_metadata",
      "next_event_time",
      "parliament_number",
      "end_date",
      "id",
      "related_vote",
      "debate_type",
      "speakers_list",
      "__tablename__",
      "total_votes_cast",
      "bill_id",
      "vote_type",
      "member_id",
      "subject",
      "current_session",
      "votes",
      "status",
      "next_scheduled_event",
      "related_bill_id",
      "whip_status",
      "current_speaker",
      "debate_status",
      "notification_sent",
      "quorum_present",
      "party",
      "sitting",
      "result",
      "individual_votes",
      "requires_royal_assent",
      "agenda_items",
      "session",
      "session_id",
      "current_vote_id",
      "member_name"
    ],
    "functions": [],
    "classes": [
      "HouseStatus",
      "HouseSitting",
      "HouseSession",
      "IndividualVote",
      "HouseEvent",
      "HouseDebate",
      "HouseVote"
    ]
  },
  {
    "file": "services/api-gateway/app/models/parliamentary_entities.py",
    "variables": [
      "__table_args__",
      "source",
      "id",
      "created_at",
      "type",
      "source_id",
      "data",
      "updated_at",
      "__tablename__"
    ],
    "functions": [
      "to_dict",
      "__repr__"
    ],
    "classes": [
      "ParliamentaryEntity"
    ]
  },
  {
    "file": "services/api-gateway/app/models/data_sources.py",
    "variables": [
      "last_sync",
      "__table_args__",
      "name",
      "id",
      "created_at",
      "type",
      "updated_at",
      "sync_frequency",
      "is_active",
      "__tablename__",
      "config"
    ],
    "functions": [
      "to_dict",
      "__repr__"
    ],
    "classes": [
      "DataSource"
    ]
  },
  {
    "file": "services/api-gateway/app/models/saved_items.py",
    "variables": [
      "item_id",
      "item_type",
      "item_url",
      "__table_args__",
      "item_title",
      "id",
      "user_id",
      "tags",
      "notes",
      "saved_at",
      "__tablename__"
    ],
    "functions": [
      "to_dict",
      "__repr__"
    ],
    "classes": [
      "SavedItem"
    ]
  },
  {
    "file": "services/api-gateway/app/models/openparliament.py",
    "variables": [
      "vote_date",
      "sponsors",
      "keywords",
      "bill_id",
      "vote_type",
      "party_id",
      "yeas",
      "name",
      "total_votes",
      "nays",
      "first_name",
      "introduced_date",
      "full_name",
      "session_id",
      "__table_args__",
      "website",
      "full_text",
      "slug",
      "jurisdiction_id",
      "status",
      "abstentions",
      "end_date",
      "passed_date",
      "start_date",
      "phone",
      "province",
      "royal_assent_date",
      "bill_number",
      "id",
      "absent",
      "last_name",
      "role",
      "title",
      "email",
      "result",
      "summary",
      "created_at",
      "color",
      "short_name",
      "updated_at",
      "district",
      "__tablename__"
    ],
    "functions": [
      "__repr__"
    ],
    "classes": [
      "Vote",
      "Bill",
      "Party",
      "Session",
      "Member",
      "Jurisdiction"
    ]
  },
  {
    "file": "services/api-gateway/app/models/email_alerts.py",
    "variables": [
      "total_recipients",
      "filters",
      "user",
      "description",
      "text_content",
      "used_at",
      "alert_type",
      "campaign_type",
      "subject",
      "started_at",
      "token",
      "expires_at",
      "last_sent",
      "text_template",
      "include_summary",
      "sent_count",
      "__table_args__",
      "include_links",
      "opened_count",
      "subject_template",
      "is_active",
      "html_content",
      "template_name",
      "variables",
      "scheduled_at",
      "bounced_count",
      "delivered_count",
      "id",
      "user_id",
      "completed_at",
      "frequency",
      "target_audience",
      "template_type",
      "email",
      "html_template",
      "created_at",
      "campaign_name",
      "include_analytics",
      "updated_at",
      "__tablename__",
      "clicked_count"
    ],
    "functions": [
      "to_dict",
      "__repr__"
    ],
    "classes": [
      "EmailCampaign",
      "EmailTemplate",
      "EmailAlert",
      "UnsubscribeToken"
    ]
  },
  {
    "file": "services/api-gateway/app/models/pwa_system.py",
    "variables": [
      "last_accessed",
      "auth_secret",
      "install_timestamp",
      "browser",
      "__table_args__",
      "is_enabled",
      "device_type",
      "cache_duration",
      "resource_url",
      "worker_script",
      "is_valid",
      "browser_support",
      "offline_usage_percentage",
      "cache_timestamp",
      "cache_entries",
      "offline_fallback",
      "analytics_date",
      "display_mode",
      "created_at",
      "orientation",
      "push_notification_sent",
      "background_sync_enabled",
      "daily_page_views",
      "lang",
      "app_name",
      "service_worker",
      "cache_hit_rate",
      "platform",
      "platform_support",
      "version_hash",
      "endpoint",
      "daily_active_users",
      "daily_uninstallations",
      "push_enabled",
      "is_active",
      "last_updated",
      "manifest_id",
      "categories",
      "feature_config",
      "cache_strategy",
      "manifest",
      "user_id",
      "push_notification_opened",
      "uninstall_timestamp",
      "background_color",
      "short_name",
      "usage_count",
      "updated_at",
      "install_method",
      "resource_category",
      "service_workers",
      "compression_enabled",
      "file_size",
      "created_by",
      "start_url",
      "theme_color",
      "screenshots",
      "daily_installations",
      "feature_name",
      "worker_url",
      "service_worker_id",
      "cache_name",
      "cache_hits",
      "related_applications",
      "id",
      "offline_resources",
      "scope",
      "cache_size",
      "feature_description",
      "is_offline_available",
      "manifest_name",
      "dir",
      "worker_name",
      "cache_expiry",
      "__tablename__",
      "shortcuts",
      "description",
      "worker_version",
      "subscription_data",
      "avg_session_duration",
      "last_used",
      "prefer_related_applications",
      "resource_type",
      "daily_sessions",
      "icons",
      "p256dh_key",
      "is_default",
      "worker_scope",
      "session_id"
    ],
    "functions": [],
    "classes": [
      "PWAPushSubscription",
      "PWAAnalytics",
      "PWAFeature",
      "ServiceWorker",
      "PWAManifest",
      "OfflineResource",
      "CacheEntry",
      "PWAInstallation"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/user_voting.py",
    "variables": [
      "json_encoders",
      "from_attributes"
    ],
    "functions": [],
    "classes": [
      "VotingRecommendationsResponse",
      "UserVoteUpdate",
      "BillVoteSummaryResponse",
      "Config",
      "VotingRecommendation",
      "UserVoteBase",
      "UserVoteListResponse",
      "UserVoteCreate",
      "VoteAnalytics",
      "UserVoteResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/rss_feeds.py",
    "variables": [
      "ALL",
      "VOTE",
      "model_config",
      "BILL",
      "BILLS",
      "v",
      "DEBATES",
      "ANNOUNCEMENT",
      "ENGLISH",
      "WIDGET",
      "DEBATE",
      "COMMITTEE",
      "API",
      "MEMBER",
      "EMAIL",
      "VOTES",
      "DIRECT",
      "COMMITTEES",
      "FRENCH",
      "MEMBERS"
    ],
    "functions": [
      "validate_feed_name",
      "validate_feed_url"
    ],
    "classes": [
      "RSSFeedResponse",
      "RSSItemInfo",
      "RSSSubscriptionCreateRequest",
      "ContentTypeEnum",
      "LanguageEnum",
      "RSSFeedItemCreateRequest",
      "RSSFeedListResponse",
      "RSSValidationResult",
      "RSSFeedStatistics",
      "RSSChannelInfo",
      "FeedTypeEnum",
      "RSSFeedItemResponse",
      "RSSSubscriptionBase",
      "RSSFeedContent",
      "RSSFeedBase",
      "RSSFeedItemBase",
      "RSSFeedItemListResponse",
      "RSSSubscriptionListResponse",
      "RSSAnalyticsResponse",
      "SubscriptionSourceEnum",
      "RSSAnalyticsListResponse",
      "RSSFeedPreview",
      "RSSAnalyticsBase",
      "RSSCacheStatus",
      "RSSFeedUpdateRequest",
      "RSSFeedGenerateRequest",
      "RSSFeedCreateRequest",
      "RSSSubscriptionResponse",
      "RSSSystemStatistics",
      "RSSFeedItemUpdateRequest"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/data_visualizations.py",
    "variables": [
      "LIGHT",
      "GAUGES",
      "ACCESSIBLE",
      "model_config",
      "WATERFALL",
      "BILLS",
      "LINE",
      "BAR",
      "SANKEY",
      "SCATTER",
      "HIGH_CONTRAST",
      "DEFAULT",
      "USER_VOTING",
      "DEBATES",
      "HEATMAP",
      "TIMELINES",
      "NETWORKS",
      "RADAR",
      "PIE",
      "TABLES",
      "DARK",
      "PARLIAMENTARY",
      "VOTES",
      "EMAIL_ALERTS",
      "CHARTS",
      "HISTOGRAM",
      "FLOWS",
      "AREA",
      "GOVERNMENT_LEVELS",
      "COMMITTEES",
      "TREE_MAP",
      "HOUSE_STATUS",
      "FUNNEL",
      "BOX_PLOT",
      "MAPS",
      "MEMBERS",
      "RSS_FEEDS",
      "HIERARCHIES",
      "CUSTOM",
      "LANGUAGE_SUPPORT"
    ],
    "functions": [],
    "classes": [
      "VisualizationTypeListResponse",
      "ThemeEnum",
      "VisualizationTypeCreateRequest",
      "VisualizationTypeUpdateRequest",
      "DashboardVisualizationResponse",
      "DataVisualizationResponse",
      "DashboardBase",
      "ChartConfigurationCreateRequest",
      "VisualizationStatistics",
      "SystemVisualizationOverview",
      "VisualizationExportRequest",
      "VisualizationPreviewRequest",
      "ChartDataResponse",
      "DataVisualizationUpdateRequest",
      "DataVisualizationListResponse",
      "DashboardResponse",
      "DashboardUpdateRequest",
      "VisualizationTypeBase",
      "VisualizationTemplateResponse",
      "DashboardLayoutRequest",
      "ChartConfigurationResponse",
      "VisualizationTemplateUpdateRequest",
      "VisualizationTemplateCreateRequest",
      "DashboardListResponse",
      "ChartTypeEnum",
      "VisualizationDataRequest",
      "VisualizationTemplateListResponse",
      "ColorSchemeEnum",
      "DashboardCreateRequest",
      "ChartConfigurationBase",
      "VisualizationCategoryEnum",
      "DataVisualizationCreateRequest",
      "DashboardVisualizationListResponse",
      "DashboardVisualizationUpdateRequest",
      "VisualizationTypeResponse",
      "DashboardVisualizationCreateRequest",
      "DashboardFullResponse",
      "DashboardVisualizationBase",
      "DataVisualizationBase",
      "DataSourceEnum",
      "VisualizationTemplateBase",
      "ChartConfigurationUpdateRequest"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/members.py",
    "variables": [
      "model_config"
    ],
    "functions": [],
    "classes": [
      "MemberDetail",
      "MemberListResponse",
      "MemberProfile",
      "MemberDetailResponse",
      "Pagination",
      "MemberProfileResponse",
      "MemberSummaryResponse",
      "MemberSuggestionsResponse",
      "MemberSummary"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/amendments.py",
    "variables": [
      "model_config"
    ],
    "functions": [],
    "classes": [
      "AmendmentBase",
      "AmendmentListResponse",
      "AmendmentStatsResponse",
      "AmendmentDetail",
      "AmendmentSummary",
      "AmendmentDetailResponse",
      "AmendmentCreate"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/committees.py",
    "variables": [
      "model_config"
    ],
    "functions": [
      "validate_date"
    ],
    "classes": [
      "MeetingSummary",
      "CommitteeDetail",
      "CommitteeSummaryResponse",
      "CommitteeDetailResponse",
      "MeetingDetail",
      "CommitteeListResponse",
      "Pagination",
      "CommitteeSummary",
      "MeetingDetailResponse",
      "MeetingListResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/performance_optimization.py",
    "variables": [
      "PLANNING",
      "DEGRADED",
      "WEEKLY",
      "INDEXING",
      "model_config",
      "APPLICATION",
      "IMPLEMENTING",
      "INFRASTRUCTURE",
      "DATABASE_OPTIMIZATION",
      "INFO",
      "HEALTHY",
      "DISK_USAGE",
      "RESPONSE_TIME",
      "DATABASE",
      "REAL_TIME",
      "ACTIVE",
      "MONTHLY",
      "CDN",
      "SECURITY",
      "UNKNOWN",
      "WARNING",
      "CODE_OPTIMIZATION",
      "MEMORY_USAGE",
      "EXTERNAL",
      "API",
      "ERROR_RATE",
      "SLOW_QUERIES",
      "LOW",
      "NETWORK_LATENCY",
      "SUCCESS",
      "TESTING",
      "EXTERNAL_SERVICE",
      "PROPOSED",
      "UNHEALTHY",
      "CACHE_HIT_RATE",
      "DATABASE_CONNECTIONS",
      "COMPRESSION",
      "CONNECTION_POOLING",
      "FILE",
      "THROUGHPUT",
      "CRITICAL",
      "FAILED",
      "CPU_USAGE",
      "HIGH",
      "DAILY",
      "CACHE",
      "MEDIUM",
      "CACHING",
      "QUERY_OPTIMIZATION",
      "REDIS",
      "MEMORY",
      "LOAD_BALANCING",
      "CUSTOM",
      "INACTIVE"
    ],
    "functions": [],
    "classes": [
      "CachePerformanceListResponse",
      "OptimizationImplementationCreateRequest",
      "HealthCheckTypeEnum",
      "SystemHealthUpdateRequest",
      "OptimizationStrategyResponse",
      "PerformanceTrend",
      "PerformanceAlertCreateRequest",
      "ReportTypeEnum",
      "PerformanceMetricUpdateRequest",
      "CachePerformanceResponse",
      "OptimizationRecommendation",
      "OptimizationStrategyBase",
      "MetricTypeEnum",
      "PerformanceAlertBase",
      "PerformanceBaselineBase",
      "PerformanceReportResponse",
      "OptimizationImplementationResponse",
      "HealthCheckRequest",
      "PriorityEnum",
      "SystemHealthBase",
      "CachePerformanceBase",
      "PerformanceReportBase",
      "OptimizationImplementationListResponse",
      "SystemHealthCreateRequest",
      "HealthStatusEnum",
      "PerformanceAnalysisRequest",
      "OptimizationStrategyCreateRequest",
      "PerformanceMetricListResponse",
      "SystemHealthListResponse",
      "PerformanceAlertListResponse",
      "DatabasePerformanceBase",
      "EffortLevelEnum",
      "SystemHealthResponse",
      "DatabasePerformanceListResponse",
      "PerformanceAlertResponse",
      "MetricCategoryEnum",
      "OptimizationStrategyUpdateRequest",
      "ImplementationStatusEnum",
      "DatabasePerformanceResponse",
      "PerformanceBaselineUpdateRequest",
      "PerformanceBaselineResponse",
      "PerformanceReportListResponse",
      "PerformanceBaselineCreateRequest",
      "OptimizationImplementationUpdateRequest",
      "StrategyCategoryEnum",
      "SystemOverview",
      "AlertSeverityEnum",
      "PerformanceMetricBase",
      "AlertTypeEnum",
      "PerformanceBaselineListResponse",
      "ImpactLevelEnum",
      "CacheTypeEnum",
      "PerformanceMetricCreateRequest",
      "PerformanceMetricResponse",
      "MetricCollectionRequest",
      "PerformanceAlertUpdateRequest",
      "OptimizationImplementationBase",
      "OptimizationStrategyListResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/testing_qa.py",
    "variables": [
      "ON_COMMIT",
      "WEEKLY",
      "CANCELLED",
      "SELENIUM",
      "model_config",
      "PATH",
      "SIMPLE",
      "CI_CD",
      "LOCALIZATION",
      "EXPLORATORY",
      "LINE",
      "CI",
      "E2E",
      "ON_DEMAND",
      "DEPLOYMENT",
      "PLAYWRIGHT",
      "RUNNING",
      "CONTINUOUS",
      "PASSED",
      "CONDITION",
      "TIMEOUT",
      "REAL_TIME",
      "BUSINESS",
      "JEST",
      "FUNCTIONAL",
      "WEBHOOK",
      "STAGING",
      "MONTHLY",
      "BRANCH",
      "SECURITY",
      "ACCESSIBILITY",
      "COVERAGE",
      "CODE",
      "TEST",
      "CYPRESS",
      "TECHNICAL",
      "API",
      "LOW",
      "USER",
      "MAINTAINABILITY",
      "USABILITY",
      "TESTING",
      "DEMO",
      "MANUAL",
      "COMPLEX",
      "UI",
      "MSTEST",
      "SKIPPED",
      "DEVELOPMENT",
      "INTEGRATION",
      "NUNIT",
      "UNIT",
      "ERROR",
      "PYTEST",
      "BLOCKED",
      "CRITICAL",
      "FAILED",
      "PERFORMANCE",
      "DAILY",
      "HIGH",
      "JUNIT",
      "MEDIUM",
      "RELIABILITY",
      "SCHEDULED",
      "COMPLETED",
      "FUNCTION",
      "TESTABILITY",
      "COMPATIBILITY",
      "TRIGGERED",
      "PRODUCTION",
      "STATEMENT",
      "CUSTOM"
    ],
    "functions": [],
    "classes": [
      "TestCoverageBase",
      "TestCaseBase",
      "TestRunListResponse",
      "TestReportBase",
      "ReportTypeEnum",
      "SuiteCategoryEnum",
      "QualityMetricCreateRequest",
      "SystemQualityOverview",
      "MetricTypeEnum",
      "TestCaseListResponse",
      "CoverageTypeEnum",
      "QualityMetricUpdateRequest",
      "QualityRecommendation",
      "TestScheduleBase",
      "TestRunCreateRequest",
      "RunTypeEnum",
      "PriorityEnum",
      "TestSuiteUpdateRequest",
      "TestResultCreateRequest",
      "QualityMetricListResponse",
      "QualityMetricResponse",
      "TestSuiteCreateRequest",
      "TestCoverageListResponse",
      "TestScheduleCreateRequest",
      "TestEnvironmentListResponse",
      "TestEnvironmentCreateRequest",
      "TestEnvironmentUpdateRequest",
      "TestSuiteListResponse",
      "TestFrameworkEnum",
      "TestRunResponse",
      "TestCaseResponse",
      "TestResultListResponse",
      "TestExecutionResponse",
      "QualityReportRequest",
      "MetricCategoryEnum",
      "TestStatusEnum",
      "ExecutionFrequencyEnum",
      "ComplexityEnum",
      "TestResultStatusEnum",
      "TestScheduleUpdateRequest",
      "TestEnvironmentResponse",
      "EnvironmentTypeEnum",
      "TestCoverageResponse",
      "TestScheduleResponse",
      "TestReportResponse",
      "TestScheduleListResponse",
      "TestReportListResponse",
      "TestTypeEnum",
      "TestEnvironmentBase",
      "TestResultUpdateRequest",
      "TestResultResponse",
      "TestTrend",
      "TestSuiteResponse",
      "TestSuiteBase",
      "TestCaseUpdateRequest",
      "QualityMetricBase",
      "TestCoverageRequest",
      "TestRunUpdateRequest",
      "TestExecutionRequest",
      "TestRunBase",
      "TestResultBase",
      "TestCaseCreateRequest"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/__init__.py",
    "variables": [
      "__version__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/schemas/votes.py",
    "variables": [
      "model_config"
    ],
    "functions": [],
    "classes": [
      "VoteAnalysisResponse",
      "VoteAnalysis",
      "VoteDetail",
      "VoteDetailResponse",
      "VoteBallotsResponse",
      "VoteSummaryResponse",
      "RealTimeVoteUpdate",
      "Pagination",
      "VoteListResponse",
      "MPVotePosition",
      "VoteBallot",
      "VoteSummary",
      "UserVoteResponse",
      "UserVoteCast"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/language_support.py",
    "variables": [
      "FLUENT",
      "DRAFT",
      "LEFT_TO_RIGHT",
      "TWELVE_HOUR",
      "ENGLISH",
      "model_config",
      "PUBLISHED",
      "GOOD",
      "FAIR",
      "FRENCH",
      "RIGHT_TO_LEFT",
      "INTERMEDIATE",
      "BASIC",
      "IN_REVIEW",
      "APPROVED",
      "TWENTY_FOUR_HOUR",
      "EXCELLENT",
      "POOR"
    ],
    "functions": [],
    "classes": [
      "UserLanguageProfile",
      "TranslationBulkRequest",
      "ContentTranslationCreateRequest",
      "ContentTranslationBase",
      "UserLanguagePreferenceListResponse",
      "TranslationResponse",
      "LanguageResponse",
      "LanguageContextListResponse",
      "LanguageCreateRequest",
      "SystemLanguageOverview",
      "TranslationMemoryResponse",
      "LanguageBase",
      "ContentTranslationListResponse",
      "TranslationQualityEnum",
      "LanguageAnalyticsResponse",
      "LanguageListResponse",
      "TranslationMemoryCreateRequest",
      "TranslationListResponse",
      "LanguageUpdateRequest",
      "UserLanguagePreferenceCreateRequest",
      "TranslationBase",
      "LanguageToggleRequest",
      "ProficiencyLevelEnum",
      "TimeFormatEnum",
      "TranslationUpdateRequest",
      "LanguageContextCreateRequest",
      "TranslationMemoryListResponse",
      "LanguageContextUpdateRequest",
      "LanguageStatistics",
      "LanguageCodeEnum",
      "LanguageAnalyticsBase",
      "UserLanguagePreferenceUpdateRequest",
      "TranslationMemoryBase",
      "LanguageAnalyticsListResponse",
      "TranslationContext",
      "ContentTranslationUpdateRequest",
      "DirectionEnum",
      "TranslationSearchRequest",
      "TranslationCreateRequest",
      "UserLanguagePreferenceResponse",
      "LanguageContextBase",
      "TranslationStatusEnum",
      "UserLanguagePreferenceBase",
      "TranslationMemoryUpdateRequest",
      "LanguageContextResponse",
      "ContentTranslationResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/house_status.py",
    "variables": [
      "CANCELLED",
      "model_config",
      "SUSPENDED",
      "GOVERNMENT_BUSINESS",
      "ADJOURNED",
      "NORMAL",
      "DEFEATED",
      "PROROGUED",
      "UNANIMOUS_CONSENT",
      "ABSENT",
      "OPPOSITION_DAY",
      "YEA",
      "NAY",
      "SITTING",
      "NONE",
      "LOW",
      "EMERGENCY_DEBATE",
      "DISSOLVED",
      "DIVISION",
      "IN_PROGRESS",
      "PRIVATE_MEMBERS",
      "CRITICAL",
      "HIGH",
      "SCHEDULED",
      "COMPLETED",
      "TIED",
      "ABSTAIN",
      "PASSED",
      "VOICE_VOTE"
    ],
    "functions": [],
    "classes": [
      "HouseEventListResponse",
      "HouseEventNotification",
      "IndividualVoteEnum",
      "HouseSessionCreateRequest",
      "IndividualVoteResponse",
      "EventPriorityEnum",
      "HouseVoteResponse",
      "HouseVoteListResponse",
      "HouseEventUpdateRequest",
      "HouseSessionBase",
      "HouseEventCreateRequest",
      "HouseDebateResponse",
      "HouseStatusResponse",
      "HouseStatusBase",
      "IndividualVoteBase",
      "HouseEventBase",
      "DebateTypeEnum",
      "VoteProgressUpdate",
      "VoteProgressWebSocketMessage",
      "SittingStatusEnum",
      "HouseDebateBase",
      "IndividualVoteUpdateRequest",
      "HouseStatusUpdateRequest",
      "IndividualVoteListResponse",
      "HouseSittingListResponse",
      "VotingStatusEnum",
      "QuestionPeriodStatusEnum",
      "HouseVoteBase",
      "HouseEventWebSocketMessage",
      "HouseDebateCreateRequest",
      "HouseSessionResponse",
      "HouseStatusEnum",
      "DebateProgressWebSocketMessage",
      "SessionAnalytics",
      "HouseSessionListResponse",
      "HouseSittingResponse",
      "DebateStatusEnum",
      "HouseStatusWebSocketMessage",
      "HouseStatusUpdate",
      "VoteResultEnum",
      "IndividualVoteCreateRequest",
      "HouseVoteUpdateRequest",
      "HouseSittingCreateRequest",
      "HouseSittingUpdateRequest",
      "DebateProgressUpdate",
      "VoteTypeEnum",
      "HouseDebateUpdateRequest",
      "HouseVoteCreateRequest",
      "HouseDebateListResponse",
      "HouseStatusStatistics",
      "HouseSittingBase",
      "WebSocketMessage",
      "HouseSessionUpdateRequest",
      "HouseEventResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/search.py",
    "variables": [
      "model_config"
    ],
    "functions": [
      "validate_date"
    ],
    "classes": [
      "PostcodeResponse",
      "SearchResult",
      "PostcodeResult",
      "SearchSuggestionsResponse",
      "SearchResponse",
      "SearchSuggestion"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/bills.py",
    "variables": [
      "model_config"
    ],
    "functions": [],
    "classes": [
      "BillStatus",
      "BillTimelineResponse",
      "BillDetail",
      "BillDetailResponse",
      "BillListResponse",
      "BillSummaryResponse",
      "BillSummary",
      "BillSuggestionsResponse",
      "BillStage",
      "BillTimeline",
      "Pagination",
      "BillStatusResponse",
      "VoteInfo"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/saved_items.py",
    "variables": [
      "json_encoders",
      "from_attributes"
    ],
    "functions": [],
    "classes": [
      "BulkActionRequest",
      "SavedItemResponse",
      "SavedItemListResponse",
      "Config",
      "SavedItemCreate",
      "SavedItemStats",
      "SavedItemBase",
      "SavedItemUpdate",
      "BulkActionResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/user_management.py",
    "variables": [
      "LIGHT",
      "PRIVATE",
      "WEEKLY",
      "DARK",
      "FRIENDS_ONLY",
      "BEGINNER",
      "DAILY",
      "PUBLIC",
      "NEVER",
      "AUTO",
      "INTERMEDIATE",
      "REALTIME",
      "ADVANCED",
      "schema_extra",
      "HOURLY"
    ],
    "functions": [
      "passwords_match"
    ],
    "classes": [
      "ThemeEnum",
      "NotificationFrequencyEnum",
      "PrivacyLevelEnum",
      "UserValidationResponse",
      "UserActivityCreateRequest",
      "PasswordChangeRequest",
      "UserSearchResponse",
      "UserProfileBase",
      "Config",
      "UserListResponse",
      "UserActivityResponse",
      "UserUpdateRequest",
      "NotificationSettings",
      "NotificationPreferencesResponse",
      "UserActivityBase",
      "UserPreferencesUpdateRequest",
      "UserCreateRequest",
      "UserPreferencesResponse",
      "ContentDifficultyEnum",
      "UserStatsResponse",
      "UserPreferencesBase",
      "UserImportResponse",
      "UserProfileResponse",
      "UserActivityListResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/email_alerts.py",
    "variables": [
      "WEEKLY",
      "DEBATE_HIGHLIGHTS",
      "HOURLY",
      "BOUNCED",
      "MONTHLY",
      "ONBOARDING",
      "REALTIME",
      "PENDING",
      "OPENED",
      "PARLIAMENTARY_SCHEDULE",
      "SENT",
      "VOTE_RESULTS",
      "BILL_UPDATES",
      "schema_extra",
      "DELIVERED",
      "MP_ACTIVITY",
      "FAILED",
      "DAILY",
      "CLICKED",
      "COMMITTEE_REPORTS",
      "CONSTITUENCY_UPDATES",
      "SCHEDULED",
      "WELCOME",
      "BULK",
      "TRIGGERED",
      "SYSTEM_NOTIFICATIONS"
    ],
    "functions": [],
    "classes": [
      "BulkEmailRequest",
      "SendTestEmailRequest",
      "EmailAlertResponse",
      "FrequencyEnum",
      "UnsubscribeTokenResponse",
      "EmailCampaignBase",
      "EmailCampaignListResponse",
      "EmailAlertStatsResponse",
      "EmailStatusEnum",
      "EmailTemplateBase",
      "EmailTemplateUpdateRequest",
      "EmailCampaignUpdateRequest",
      "Config",
      "EmailAnalyticsResponse",
      "EmailNotificationRequest",
      "EmailAlertCreateRequest",
      "EmailLogListResponse",
      "EmailTemplateCreateRequest",
      "EmailAlertUpdateRequest",
      "EmailTemplateListResponse",
      "EmailTemplateResponse",
      "EmailCampaignCreateRequest",
      "EmailAlertListResponse",
      "EmailCampaignResponse",
      "EmailAlertBase",
      "CampaignTypeEnum",
      "AlertTypeEnum",
      "EmailNotificationResponse",
      "NotificationContent",
      "EmailLogResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/multi_level_government.py",
    "variables": [
      "WITHDRAWN",
      "ROYAL_ASSENT",
      "CITY_HALL",
      "REGIONAL_COUNCIL",
      "YES",
      "DEFEATED",
      "ABSTAIN",
      "LEGISLATURE",
      "PAIRED",
      "MUNICIPAL",
      "THIRD_READING",
      "PROVINCIAL",
      "LEGISLATIVE",
      "INTRODUCED",
      "ENACTED",
      "NO",
      "TOWN_HALL",
      "FIRST_READING",
      "ABSENT",
      "COMMITTEE",
      "CITY_COUNCIL",
      "PARLIAMENTARY",
      "DEPUTY_MAYOR",
      "MP",
      "CONSTITUENCY",
      "TOWN_COUNCIL",
      "schema_extra",
      "COUNCILLOR",
      "REGIONAL_OFFICE",
      "PARLIAMENT",
      "MPP",
      "FEDERAL",
      "DEPUTY_CHAIR",
      "MLA",
      "FIRST_NATIONS",
      "SECOND_READING",
      "CHAIR",
      "MAYOR"
    ],
    "functions": [],
    "classes": [
      "BillSearchParams",
      "RepresentativeListResponse",
      "DataSourceListResponse",
      "PaginationInfo",
      "OfficeTypeEnum",
      "Config",
      "JurisdictionTypeEnum",
      "VoteResponse",
      "VoteListResponse",
      "RepresentativeSearchParams",
      "GovernmentLevelBase",
      "OfficeListResponse",
      "OfficeBase",
      "SystemStats",
      "BillBase",
      "RepresentativePositionEnum",
      "VoteBase",
      "RepresentativeResponse",
      "BillResponse",
      "VoteSearchParams",
      "JurisdictionStats",
      "JurisdictionResponse",
      "BillStatusEnum",
      "VotePositionEnum",
      "GovernmentLevelListResponse",
      "RepresentativeBase",
      "GovernmentLevelResponse",
      "GovernmentLevelStats",
      "GovernmentLevelEnum",
      "DataSourceResponse",
      "OfficeResponse",
      "DataSourceBase",
      "JurisdictionListResponse",
      "JurisdictionBase",
      "BillListResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/debates.py",
    "variables": [
      "model_config"
    ],
    "functions": [
      "validate_date",
      "validate_time"
    ],
    "classes": [
      "SpeechDetailResponse",
      "DebateSummaryResponse",
      "DebateListResponse",
      "DebateDetailResponse",
      "SpeechSummary",
      "DebateSummary",
      "SpeechDetail",
      "Pagination",
      "SpeechListResponse",
      "DebateDetail"
    ]
  },
  {
    "file": "services/api-gateway/app/schemas/pwa_system.py",
    "variables": [
      "IMAGE",
      "ANDROID",
      "model_config",
      "IMPORTANT",
      "NETWORK_ONLY",
      "CACHE_ONLY",
      "OPTIONAL",
      "ANY",
      "MEDIA",
      "WINDOWS",
      "TABLET",
      "LINUX",
      "DESKTOP",
      "BANNER",
      "MINIMAL_UI",
      "API",
      "MANUAL",
      "FULLSCREEN",
      "BROWSER",
      "PROMPT",
      "MACOS",
      "CSS",
      "CRITICAL",
      "HTML",
      "STALE_WHILE_REVALIDATE",
      "JS",
      "STANDALONE",
      "LANDSCAPE",
      "CACHE_FIRST",
      "IOS",
      "PORTRAIT",
      "AUTO",
      "DOCUMENT",
      "MOBILE",
      "NETWORK_FIRST",
      "FONT"
    ],
    "functions": [],
    "classes": [
      "PWAPushSubscriptionResponse",
      "ServiceWorkerListResponse",
      "OfflineResourceBase",
      "PWAInstallationTrackingRequest",
      "CacheEntryBase",
      "PWAHealthCheck",
      "PWAManifestListResponse",
      "CacheStrategyEnum",
      "ServiceWorkerUpdateRequest",
      "OrientationEnum",
      "DisplayModeEnum",
      "SystemPWAOverview",
      "DeviceTypeEnum",
      "CacheEntryResponse",
      "ServiceWorkerCreateRequest",
      "ServiceWorkerResponse",
      "ManifestGenerationRequest",
      "PWAInstallationBase",
      "PWAFeatureResponse",
      "PWAManifestResponse",
      "OfflineResourceCreateRequest",
      "PWAPushSubscriptionBase",
      "PWAPushSubscriptionUpdateRequest",
      "PWAAnalyticsBase",
      "PWAPushSubscriptionCreateRequest",
      "PWAManifestCreateRequest",
      "PWAManifestUpdateRequest",
      "PWAFeatureUpdateRequest",
      "ServiceWorkerGenerationRequest",
      "ResourceTypeEnum",
      "PWAAnalyticsResponse",
      "PlatformEnum",
      "PWAManifestBase",
      "PWAPushNotificationRequest",
      "PWAStatistics",
      "PWAInstallationUpdateRequest",
      "OfflineResourceUpdateRequest",
      "PWAFeatureBase",
      "PWAInstallationResponse",
      "CacheEntryListResponse",
      "ResourceCategoryEnum",
      "PWAInstallationCreateRequest",
      "OfflineResourceListResponse",
      "InstallMethodEnum",
      "ServiceWorkerBase",
      "OfflineResourceResponse",
      "PWAInstallationListResponse",
      "PWAFeatureListResponse",
      "PWAFeatureCreateRequest",
      "PWAAnalyticsListResponse",
      "PWAPushSubscriptionListResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/api/__init__.py",
    "variables": [
      "__version__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/bill_voting.py",
    "variables": [
      "offset",
      "required_fields",
      "vote_record",
      "paginated_votes",
      "vote_stats",
      "mock_voting_history",
      "user_stats",
      "filtered_history",
      "mock_user_votes",
      "mock_voting_summary",
      "mock_recommendations",
      "valid_choices",
      "bill",
      "total",
      "paginated_history",
      "router"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/issues.py",
    "variables": [
      "supporters",
      "required_fields",
      "updated_issue",
      "issue_record",
      "issues",
      "support_record",
      "issue",
      "allowed_fields",
      "community_issues",
      "mock_issues",
      "issue_detail",
      "router",
      "supporter",
      "invalid_fields"
    ],
    "functions": [
      "generate_mock_issue_supporters",
      "generate_mock_issue_detail",
      "generate_mock_user_issues",
      "generate_mock_community_issues"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/auth.py",
    "variables": [
      "token_data",
      "user_info",
      "user",
      "recent_requests",
      "family_name",
      "username",
      "jwt_token",
      "picture",
      "new_user",
      "reset_token",
      "token",
      "router",
      "client_ip",
      "expires_at",
      "token_response",
      "security",
      "SECRET_KEY",
      "auth_url",
      "encoded_jwt",
      "full_name",
      "google_user_id",
      "token_info",
      "logger",
      "original_username",
      "PASSWORD_RESET_TOKEN_EXPIRE_HOURS",
      "access_token",
      "given_name",
      "email_template",
      "counter",
      "credentials_exception",
      "access_token_expires",
      "one_hour_ago",
      "userinfo_response",
      "ACCESS_TOKEN_EXPIRE_MINUTES",
      "existing_email",
      "params",
      "expire",
      "headers",
      "reset_url",
      "existing_user",
      "email",
      "oauth2_scheme",
      "to_encode",
      "hashed_password",
      "oauth_account",
      "ALGORITHM",
      "session",
      "payload",
      "pwd_context",
      "PASSWORD_RESET_RATE_LIMIT"
    ],
    "functions": [
      "verify_token",
      "generate_reset_token",
      "send_password_reset_email",
      "check_rate_limit",
      "create_access_token",
      "hash_password",
      "verify_password"
    ],
    "classes": [
      "PasswordResetResponse",
      "PasswordResetRequest",
      "PasswordResetConfirm",
      "GoogleOAuthResponse",
      "UserLogin",
      "GoogleOAuthRequest",
      "Token",
      "UserRegister",
      "PasswordResetConfirmResponse",
      "UserProfile"
    ]
  },
  {
    "file": "services/api-gateway/app/api/v1/mobile_app.py",
    "variables": [
      "mock_representatives",
      "mock_summary",
      "required_fields",
      "mock_user",
      "mock_bills",
      "updated_profile",
      "mock_profile",
      "mock_representative",
      "mock_response",
      "mock_issue",
      "router",
      "mock_bill"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/rss_feeds.py",
    "variables": [
      "top_categories",
      "items",
      "last_24h_analytics",
      "member_data",
      "feed",
      "avg_items_per_feed",
      "members",
      "committee_name",
      "xml_str",
      "start_date",
      "feed_responses",
      "offset",
      "start_time",
      "avg_generation_time",
      "riding",
      "entities",
      "feed_name",
      "yesterday",
      "bill_data",
      "today",
      "error_rate",
      "total_views",
      "error_message",
      "cache_hit_rate",
      "languages",
      "total_feeds",
      "feed_types",
      "last_7d_views",
      "item",
      "language_distribution",
      "error_summary",
      "cached_content",
      "total",
      "content_hash",
      "bill_name",
      "last_24h_views",
      "total_subscribers",
      "total_pages",
      "existing_item",
      "top_feeds",
      "total_views_24h",
      "bill_number",
      "rss_xml",
      "vote_number",
      "analytics",
      "committees",
      "feeds",
      "committee_code",
      "existing_url",
      "subscriber_growth",
      "router",
      "top_performing_feeds",
      "generation_time",
      "last_7d_analytics",
      "rss",
      "update_data",
      "end_date",
      "cache_entry",
      "feed_type_distribution",
      "avg_subscribers_per_feed",
      "error_count",
      "search_term",
      "item_elem",
      "total_generations",
      "channel",
      "last_30d_analytics",
      "member_id",
      "expires_at",
      "total_items",
      "cache_performance",
      "votes",
      "logger",
      "active_feeds",
      "query",
      "existing_feed",
      "bills",
      "cache_key",
      "last_30d_views",
      "committee_data",
      "party",
      "vote_data",
      "member_name"
    ],
    "functions": [
      "_create_vote_item",
      "_create_committee_item",
      "_invalidate_feed_cache",
      "_track_feed_access",
      "_create_member_item",
      "_create_bill_item"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/data_visualizations.py",
    "variables": [
      "data_hash",
      "last_24h_analytics",
      "cache_hit_rate",
      "data_source",
      "router",
      "visualizations",
      "existing_type",
      "expires_at",
      "dashboards",
      "visualization",
      "generation_time",
      "last_7d_views",
      "dashboard",
      "last_7d_analytics",
      "logger",
      "total",
      "viz_type",
      "dashboard_responses",
      "query",
      "cache_entry",
      "generated_data",
      "last_24h_views",
      "total_pages",
      "offset",
      "start_time",
      "cached_data",
      "viz_responses",
      "avg_generation_time",
      "type_responses",
      "cache_key",
      "types",
      "existing_viz",
      "search_term",
      "config_hash",
      "dashboard_viz",
      "today",
      "total_generations",
      "analytics",
      "user_engagement_score",
      "total_views",
      "error_message",
      "statistics"
    ],
    "functions": [
      "_track_visualization_access"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/user-voting.py",
    "variables": [
      "date_str",
      "overall_stats",
      "vote_choices",
      "supporting_constituencies",
      "total_votes",
      "new_vote",
      "no_pct",
      "no_percentage",
      "router",
      "constituencies",
      "all_votes",
      "abstain_count",
      "constituency_breakdown",
      "yes_count",
      "results",
      "votes",
      "abstentions",
      "total",
      "query",
      "opposing_constituencies",
      "offset",
      "no_count",
      "party_preferences",
      "daily_voting",
      "yes_percentage",
      "constituency_stats",
      "voting_trends",
      "total_count",
      "existing_vote",
      "yes_votes",
      "no_votes",
      "user_votes",
      "recommendations",
      "yes_pct",
      "demographic_breakdown"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/saved-items.py",
    "variables": [
      "items",
      "router",
      "tags_to_remove",
      "results",
      "item",
      "all_tags",
      "query",
      "count",
      "existing_tags",
      "offset",
      "top_tags",
      "tag_counts",
      "existing_item",
      "updated_count",
      "total_count",
      "search_term",
      "tag_list",
      "saved_item",
      "type_counts",
      "recent_items",
      "new_tags"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/house_mentions.py",
    "variables": [
      "offset",
      "paginated_mentions",
      "paginated_votes",
      "mock_mentions",
      "filtered_votes",
      "mock_detailed_votes",
      "filtered_mentions",
      "bill",
      "total",
      "mock_committee_mentions",
      "router",
      "mock_debate_mentions"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/members.py",
    "variables": [
      "paginated_activity",
      "committee_memberships",
      "represent_api_url",
      "vote_results",
      "social_media",
      "data",
      "router",
      "members",
      "profession",
      "current_members",
      "top_sponsors",
      "activity_items",
      "offices",
      "website",
      "results",
      "party_counts",
      "formatted_postal_code",
      "votes",
      "response",
      "bio",
      "total",
      "suggestions_query",
      "query",
      "recent_votes",
      "province_counts",
      "sponsored_bills",
      "pagination",
      "total_pages",
      "offset",
      "total_members",
      "phone",
      "riding",
      "member",
      "municipal_reps",
      "education",
      "representatives",
      "postal_code_clean",
      "email",
      "paginated_committees",
      "federal_reps",
      "provincial_reps",
      "photo_url",
      "member_detail",
      "votes_query",
      "mock_committees",
      "suggestions",
      "search_query",
      "fax",
      "member_profile",
      "member_summaries"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/committees.py",
    "variables": [
      "total_pages",
      "offset",
      "committee_detail",
      "committee",
      "date_lte",
      "committees",
      "date_gte",
      "total",
      "query",
      "router",
      "meetings",
      "meeting_summaries",
      "pagination"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/performance_optimization.py",
    "variables": [
      "cache_metrics",
      "response_times",
      "healthy_checks",
      "total_requests",
      "recent_metrics",
      "trends",
      "alert_responses",
      "cache_hit_rate",
      "router",
      "avg_response_time",
      "health_score",
      "unhealthy_checks",
      "active_alerts",
      "trend_direction",
      "logger",
      "avg_cache_hit_rate",
      "total",
      "total_checks",
      "query",
      "error_requests",
      "response_time_metrics",
      "total_pages",
      "offset",
      "alerts",
      "degraded_checks",
      "change_percentage",
      "alert",
      "type_metrics",
      "last_value",
      "search_term",
      "metric",
      "critical_alerts",
      "health_checks",
      "overview",
      "recommendations",
      "error_rate",
      "first_value",
      "health_check",
      "metrics",
      "metric_responses"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/user_profiles.py",
    "variables": [
      "mock_constituency_data",
      "offset",
      "mock_analytics",
      "filtered_activities",
      "mock_preferences",
      "mock_activities",
      "total",
      "router",
      "paginated_activities",
      "mock_mp_data"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/represent.py",
    "variables": [
      "rate_limit_remaining",
      "REPRESENT_API_BASE",
      "response",
      "params",
      "postal_code",
      "RATE_LIMIT_PER_MINUTE",
      "data",
      "router"
    ],
    "functions": [],
    "classes": [
      "Boundary",
      "Representative",
      "BoundarySet",
      "PostalCodeLookup"
    ]
  },
  {
    "file": "services/api-gateway/app/api/v1/__init__.py",
    "variables": [
      "__version__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/multi_level_government_extended.py",
    "variables": [
      "office",
      "representative",
      "jurisdiction",
      "bill",
      "sponsor",
      "router",
      "jurisdiction_response",
      "offices",
      "votes",
      "vote_responses",
      "total",
      "query",
      "pagination",
      "total_pages",
      "offset",
      "data_sources",
      "bills",
      "sponsor_response",
      "gov_level",
      "bill_responses",
      "representative_response",
      "search_query",
      "gov_level_response",
      "bill_response",
      "data_source_responses",
      "office_responses"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/votes.py",
    "variables": [
      "vote_question",
      "government_position",
      "parties_n",
      "paired_votes",
      "total_votes",
      "voted_with_party",
      "new_vote",
      "opposition_yea",
      "government_support",
      "bill",
      "party_breakdown",
      "router",
      "type_mapping",
      "party_nay",
      "cross_party_supporters",
      "opposition_votes",
      "ballots",
      "ballot_list",
      "government_votes",
      "party_name",
      "party_total",
      "member_votes",
      "votes",
      "votes_cast",
      "unity_count",
      "nay_total",
      "parties_y",
      "party_dissents",
      "total",
      "voted_with_government",
      "opposition_support",
      "query",
      "vote",
      "result_counts",
      "yea_votes",
      "mp_position",
      "pagination",
      "total_pages",
      "offset",
      "yea_total",
      "total_members",
      "absent_votes",
      "latest_vote",
      "nay_votes",
      "analysis",
      "bill_info",
      "party_member_votes",
      "province",
      "party_unity_scores",
      "member",
      "opposition_parties",
      "party_votes",
      "vote_summaries",
      "regional_breakdown",
      "existing_vote",
      "party_position",
      "vote_detail",
      "session_counts",
      "mock_user_id",
      "search_query",
      "party_vote",
      "party_yea",
      "government_parties",
      "government_yea"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/language_support.py",
    "variables": [
      "default_language",
      "language_responses",
      "primary_preference",
      "languages",
      "translations",
      "existing_translation",
      "router",
      "coverage_percentage",
      "user_satisfaction",
      "translation_count",
      "existing_preference",
      "preference_responses",
      "logger",
      "total",
      "translation",
      "update_data",
      "query",
      "approved_count",
      "fallback_translation",
      "total_pages",
      "offset",
      "translation_responses",
      "existing_language",
      "preferences",
      "statistics",
      "search_term",
      "user_count",
      "preference",
      "quality_score",
      "today",
      "analytics",
      "fallback_language",
      "language",
      "new_preference"
    ],
    "functions": [
      "_track_language_usage"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/house_status.py",
    "variables": [
      "event",
      "active_debates",
      "sittings",
      "existing_session",
      "total_votes",
      "quorum_met_percentage",
      "average_vote_duration",
      "initial_message",
      "router",
      "update_message",
      "quorum_met_count",
      "total_sessions",
      "active_sittings",
      "votes",
      "house_vote",
      "vote_responses",
      "logger",
      "total_sittings",
      "status",
      "average_sitting_duration",
      "total",
      "update_data",
      "query",
      "vote",
      "total_debates",
      "total_duration",
      "sessions",
      "total_pages",
      "offset",
      "total_sittings_with_quorum",
      "session_responses",
      "active_sessions",
      "event_responses",
      "active_votes",
      "sitting",
      "sittings_with_duration",
      "sitting_responses",
      "existing_vote",
      "debate",
      "events",
      "votes_with_duration",
      "db",
      "session"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/api.py",
    "variables": [
      "api_router"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/chat.py",
    "variables": [
      "context",
      "base_suggestions",
      "required_fields",
      "instruction_lower",
      "ai_response",
      "summary",
      "conversation",
      "bill_data",
      "issue_data",
      "bill_number",
      "conversations",
      "issue_id",
      "suggestions",
      "instruction",
      "bill",
      "router",
      "mock_history"
    ],
    "functions": [
      "generate_general_chat_suggestions",
      "generate_issue_chat_suggestions",
      "generate_issue_chat_response",
      "classify_instruction",
      "generate_mock_chat_history",
      "generate_bill_chat_response",
      "generate_bill_chat_suggestions"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/search.py",
    "variables": [
      "represent_api_url",
      "snippet_end",
      "politicians",
      "stmt_query",
      "snippet_start",
      "pol_query",
      "representative_info",
      "data",
      "router",
      "results",
      "response",
      "bill_total",
      "total",
      "stmt_total",
      "statements",
      "offset",
      "bills",
      "date_gte",
      "snippet",
      "representatives",
      "bill_query",
      "date_lte",
      "search_query",
      "suggestions",
      "clean_postcode",
      "text"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/bills.py",
    "variables": [
      "bill_introduced",
      "amendments",
      "next_stage",
      "vote_results",
      "bill_status_code",
      "introduced_date",
      "bill",
      "status_desc",
      "router",
      "duration_days",
      "stage_order",
      "status_to_stage",
      "stage_progress",
      "status_descriptions",
      "stage_start_date",
      "party_name",
      "stages",
      "legislative_stages",
      "bill_status",
      "stage",
      "results",
      "total_bills",
      "votes",
      "status_counts",
      "stage_status",
      "riding_name",
      "status",
      "estimated_completion",
      "total",
      "suggestions_query",
      "mover_name",
      "query",
      "history_items",
      "vote_info",
      "bill_summaries",
      "total_pages",
      "offset",
      "sponsor_name",
      "total_legislative_days",
      "bill_detail",
      "history_events",
      "bills",
      "current_stage_order",
      "remaining_stages",
      "mover_party",
      "bill_number",
      "riding",
      "bill_id_str",
      "party",
      "sponsor_member",
      "mover_member",
      "paginated_history",
      "current_stage",
      "estimated_days",
      "title",
      "days_in_current_stage",
      "session_counts",
      "mover_politician",
      "amendment_summaries",
      "today",
      "paginated_events",
      "votes_query",
      "suggestions",
      "search_query",
      "institution",
      "last_activity_date",
      "timeline_events",
      "session_id",
      "short_title",
      "stage_end_date"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/saved_items.py",
    "variables": [
      "tag_list",
      "mock_saved_items",
      "offset",
      "required_fields",
      "mock_search_results",
      "saved_item",
      "mock_tags",
      "paginated_results",
      "filtered_items",
      "paginated_items",
      "allowed_fields",
      "filtered_results",
      "total",
      "router",
      "invalid_fields"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/user_management.py",
    "variables": [
      "user",
      "activity_responses",
      "favorite_parties",
      "user_responses",
      "last_activity",
      "router",
      "activities",
      "date_to_obj",
      "total_mps_researched",
      "total_bills_viewed",
      "logger",
      "total",
      "activity",
      "update_data",
      "query",
      "total_votes_analyzed",
      "date_from_obj",
      "total_pages",
      "offset",
      "users",
      "engagement_score",
      "preferences",
      "total_activities",
      "favorite_topics",
      "favorite_mps",
      "search_query"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/email_alerts.py",
    "variables": [
      "date_str",
      "user",
      "click_rate",
      "user_logs",
      "total_opened",
      "alert_responses",
      "template_responses",
      "existing_alert",
      "total_emails_received",
      "campaign_performance",
      "emails_clicked",
      "token",
      "router",
      "total_sent",
      "total_delivered",
      "clicks_by_day",
      "date_to_obj",
      "open_rate",
      "bounce_rate",
      "logger",
      "engagement_rate",
      "total",
      "update_data",
      "query",
      "total_failed",
      "user_alerts",
      "email_log",
      "emails_opened",
      "total_pages",
      "offset",
      "alerts",
      "date_from_obj",
      "delivery_rate",
      "total_clicked",
      "alerts_by_type",
      "alert",
      "campaigns",
      "emails_by_day",
      "campaign_logs",
      "templates",
      "current_date",
      "total_alerts",
      "campaign_responses",
      "template",
      "last_alert_sent",
      "alerts_by_frequency",
      "total_bounced",
      "unsubscribe_token",
      "unsubscribe_url",
      "campaign",
      "opens_by_day"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/multi_level_government.py",
    "variables": [
      "representative",
      "jurisdiction",
      "total_votes",
      "level_responses",
      "router",
      "jurisdiction_response",
      "total_jurisdictions",
      "total_data_sources",
      "total_bills",
      "levels",
      "total_offices",
      "total",
      "representative_responses",
      "query",
      "pagination",
      "total_pages",
      "offset",
      "total_government_levels",
      "level",
      "total_representatives",
      "representatives",
      "jurisdictions",
      "gov_level",
      "jurisdiction_responses",
      "search_query",
      "gov_level_response"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/debates.py",
    "variables": [
      "statement",
      "debate_date",
      "speech_detail",
      "router",
      "votes",
      "total",
      "statements",
      "query",
      "bill_count",
      "total_debates",
      "content",
      "pagination",
      "total_pages",
      "offset",
      "latest_statement",
      "date_gte",
      "vote_summaries",
      "speeches",
      "debate_dates",
      "text_preview",
      "total_speakers",
      "date_lte",
      "vote_count",
      "total_speeches",
      "debate_summaries"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/pwa_system.py",
    "variables": [
      "resource",
      "avg_session_duration",
      "total_opened",
      "resources",
      "cache_hit_rate",
      "total_installations",
      "router",
      "manifest_responses",
      "total_sent",
      "manifest_json",
      "push_notification_rate",
      "daily_active_users",
      "total_users",
      "logger",
      "total",
      "query",
      "worker_responses",
      "existing_manifest",
      "total_pages",
      "offset",
      "existing_resource",
      "manifest",
      "offline_usage_percentage",
      "manifests",
      "resource_responses",
      "installation",
      "search_term",
      "existing_worker",
      "workers",
      "worker",
      "installations",
      "today",
      "active_installations",
      "analytics",
      "statistics"
    ],
    "functions": [
      "_update_pwa_analytics"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/websocket.py",
    "variables": [
      "event",
      "bill_id",
      "message",
      "info",
      "redis_info",
      "data",
      "router",
      "rooms",
      "stats",
      "logger",
      "committee_id",
      "health_info",
      "message_type",
      "cleaned_count",
      "date",
      "connection_id",
      "message_text",
      "priority",
      "room"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/endpoints/users.py",
    "variables": [
      "existing_user",
      "router",
      "mock_users"
    ],
    "functions": [],
    "classes": [
      "UserListResponse",
      "UserUpdate",
      "UserCreate",
      "UserResponse"
    ]
  },
  {
    "file": "services/api-gateway/app/api/v1/endpoints/health.py",
    "variables": [
      "router",
      "db_status"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/endpoints/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/app/api/v1/endpoints/entities.py",
    "variables": [
      "router",
      "offset",
      "entity_uuid",
      "mock_entities",
      "entity_responses",
      "total",
      "query",
      "entities",
      "entity"
    ],
    "functions": [],
    "classes": [
      "EntityListResponse",
      "EntityCreate",
      "EntityResponse"
    ]
  },
  {
    "file": "services/api-gateway/tests/test_email_alerts.py",
    "variables": [
      "user",
      "campaign_data",
      "data",
      "token",
      "template_names",
      "log2",
      "campaign_names",
      "alert2",
      "response",
      "log",
      "update_data",
      "email_log",
      "alert",
      "notification_data",
      "log1",
      "alert_data",
      "client",
      "template",
      "deleted_alert",
      "alert1",
      "campaign"
    ],
    "functions": [
      "test_list_user_alerts",
      "test_get_user_alert_stats",
      "test_db",
      "test_update_email_alert",
      "test_delete_email_alert",
      "test_unsubscribe_user_invalid_token",
      "test_unsubscribe_user_expired_token",
      "test_get_email_template_not_found",
      "test_email_template",
      "test_list_email_templates",
      "test_list_email_campaigns",
      "test_send_email_notification_no_active_alert",
      "test_create_email_alert_success",
      "test_generate_unsubscribe_token",
      "test_get_email_template",
      "test_user_token",
      "test_user",
      "test_list_user_alerts_with_filters",
      "test_send_email_notification_success",
      "test_get_email_alert_not_found",
      "test_get_email_alert",
      "test_send_email_notification_user_not_found",
      "test_unsubscribe_user_success",
      "test_list_email_templates_with_filters",
      "test_complete_email_alert_workflow",
      "test_email_campaign",
      "test_create_email_alert_duplicate",
      "test_create_email_campaign",
      "test_get_email_analytics_with_date_range",
      "test_get_email_analytics_invalid_date_format",
      "test_get_email_analytics",
      "test_generate_unsubscribe_token_all_alerts",
      "test_email_alert_pagination"
    ],
    "classes": [
      "TestEmailAlertSystemIntegration",
      "TestEmailNotifications",
      "TestUnsubscribeManagement",
      "TestEmailAnalytics",
      "TestEmailCampaigns",
      "TestEmailAlerts",
      "TestEmailTemplates"
    ]
  },
  {
    "file": "services/api-gateway/tests/conftest.py",
    "variables": [
      "loop",
      "mock_result",
      "func_mock",
      "mock_session",
      "chain_mock",
      "mock_bill"
    ],
    "functions": [
      "mock_group_by",
      "mock_order_by",
      "test_bill_data",
      "mock_first",
      "mock_filter",
      "mock_func",
      "mock_db",
      "test_committee_data",
      "_override_get_db",
      "mock_settings",
      "event_loop",
      "create_chain_mock",
      "test_debate_data",
      "test_client",
      "override_get_db",
      "mock_websocket",
      "mock_all",
      "test_vote_data",
      "client",
      "mock_count",
      "mock_redis",
      "mock_limit",
      "mock_offset",
      "test_statement_data",
      "test_member_data"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/tests/test_comprehensive_api.py",
    "variables": [
      "router_paths",
      "expected_main_endpoints",
      "expected_api_prefixes",
      "auth_routes",
      "response",
      "debate_routes",
      "member_routes",
      "app_routes",
      "data",
      "client"
    ],
    "functions": [
      "test_bill_amendments_not_found",
      "test_debate_statements_endpoint",
      "test_debate_statements_schemas_import",
      "test_search_schemas_import",
      "test_votes_schemas_import",
      "test_postal_code_search_endpoint",
      "test_pydantic_v2_compatibility",
      "test_debate_statements_with_filters",
      "test_debate_statements_invalid_date",
      "test_amendments_schemas_import",
      "test_committee_meetings_with_filters",
      "test_votes_router_included",
      "test_all_routers_loaded",
      "test_user_models_import",
      "test_health_endpoints_working",
      "test_members_schemas_import",
      "test_parliamentary_models_import",
      "test_auth_router_included",
      "test_debates_topic_extraction",
      "test_search_router_included",
      "test_search_content_endpoint",
      "test_auth_endpoints_exist",
      "test_bill_amendments_with_filters",
      "test_committees_router_included",
      "test_debates_schemas_import",
      "test_bill_amendments_endpoint",
      "test_committee_meetings_not_found",
      "test_bill_amendments_pagination",
      "test_bill_history_endpoint",
      "test_search_suggestions_endpoint",
      "test_bills_schemas_import",
      "test_bill_history_not_found",
      "test_bills_router_included",
      "test_api_documentation_accessible",
      "test_debate_statements_pagination",
      "test_members_router_included",
      "test_debates_router_included",
      "test_committees_schemas_import",
      "test_committee_meetings_schemas_import",
      "test_committee_meetings_endpoint",
      "test_bill_history_pagination",
      "test_committee_meetings_pagination"
    ],
    "classes": [
      "TestSearchAPI",
      "TestDebateStatementsAPI",
      "TestVotesAPI",
      "TestBillsAPI",
      "TestMembersAPI",
      "TestDataValidation",
      "TestAmendmentsAPI",
      "TestCommitteeMeetingsAPI",
      "TestDebatesAPI",
      "TestAuthAPI",
      "TestAPIIntegration",
      "TestDatabaseModels",
      "TestCommitteesAPI"
    ]
  },
  {
    "file": "services/api-gateway/tests/test_bills.py",
    "variables": [
      "data",
      "response",
      "client"
    ],
    "functions": [
      "test_get_bill_detail_not_found",
      "test_filter_bills_by_status",
      "test_bills_database_error",
      "test_list_bills_invalid_pagination",
      "test_search_bills_no_query",
      "test_list_bills_empty",
      "test_filter_bills_by_parliament",
      "test_bills_page_validation",
      "test_bills_summary_empty",
      "test_bills_page_size_validation",
      "test_bill_suggestions_empty",
      "test_list_bills_with_pagination",
      "test_filter_bills_by_session",
      "test_bills_invalid_bill_id",
      "mock_bill_data",
      "test_bill_suggestions_invalid_query",
      "mock_pagination_data",
      "test_search_bills_with_query"
    ],
    "classes": [
      "TestBillsSearch",
      "TestBillsAPI",
      "TestBillsValidation",
      "TestBillsErrorHandling"
    ]
  },
  {
    "file": "services/api-gateway/tests/test_websocket.py",
    "variables": [
      "expected_types",
      "expected_priorities",
      "response",
      "message_data",
      "notification_data",
      "data",
      "mock_publish",
      "expected_categories"
    ],
    "functions": [
      "test_websocket_schemas_import",
      "test_websocket_room_info_endpoint",
      "test_websocket_service_methods",
      "test_websocket_router_included",
      "test_websocket_connection_info_endpoint",
      "test_event_types",
      "test_broadcast_message_endpoint",
      "test_websocket_status_endpoint",
      "test_event_priorities",
      "test_websocket_service_import",
      "test_event_categories",
      "test_send_notification_endpoint",
      "test_connection_manager_initialization",
      "client",
      "test_redis_service_import"
    ],
    "classes": [
      "TestWebSocketService",
      "TestWebSocketEndpoints",
      "TestEventSystem"
    ]
  },
  {
    "file": "services/api-gateway/tests/test_config.py",
    "variables": [
      "TEST_BILL_ID",
      "TEST_MEMBER_ID",
      "required_keys",
      "test_data_factory",
      "TEST_RATE_LIMIT_REQUESTS",
      "TEST_WEBSOCKET_TIMEOUT",
      "TEST_DATABASE_ECHO",
      "TEST_COMMITTEE_ID",
      "TEST_JWT_EXPIRY",
      "TEST_REDIS_DB",
      "TEST_API_PREFIX",
      "TEST_WEBSOCKET_MAX_CONNECTIONS",
      "TEST_USERNAME",
      "test_config",
      "mock_session",
      "pytestmark",
      "TEST_VOTE_SESSION",
      "TEST_REDIS_HOST",
      "TEST_TIMEOUT",
      "mock_query",
      "TEST_VOTE_NUMBER",
      "TEST_JWT_ALGORITHM",
      "TEST_USER_ID",
      "TEST_REDIS_PORT",
      "mock_redis",
      "mock_ws",
      "TEST_MAX_PAGE_SIZE",
      "TEST_DATABASE_URL",
      "test_utilities",
      "TEST_JWT_SECRET",
      "TEST_EMAIL",
      "TEST_PAGE_SIZE",
      "TEST_RATE_LIMIT_WINDOW",
      "TEST_PASSWORD"
    ],
    "functions": [
      "test_app",
      "test_bill_data",
      "create_test_statement",
      "create_test_member",
      "mock_db",
      "test_committee_data",
      "create_test_vote",
      "assert_error_response",
      "create_test_committee",
      "assert_response_structure",
      "test_debate_data",
      "test_client",
      "mock_websocket",
      "test_vote_data",
      "create_mock_db_session",
      "create_mock_redis_client",
      "assert_pagination_structure",
      "create_mock_websocket",
      "mock_redis",
      "create_test_debate",
      "test_statement_data",
      "test_member_data",
      "create_test_bill"
    ],
    "classes": [
      "TestUtilities",
      "TestDataFactory",
      "TestConfig"
    ]
  },
  {
    "file": "services/api-gateway/tests/test_health.py",
    "variables": [
      "required_fields",
      "timestamp",
      "response",
      "build_date",
      "data",
      "client"
    ],
    "functions": [
      "test_healthz",
      "test_version",
      "test_root",
      "test_healthz_response_structure",
      "test_version_response_structure"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/tests/fixtures/test_database.py",
    "variables": [
      "user",
      "engine",
      "TEST_MEMBERS_COUNT",
      "committee",
      "vote_results",
      "committee_names",
      "committee_types",
      "party_names",
      "bill",
      "TEST_VOTES_COUNT",
      "members",
      "TEST_DATABASE_ECHO",
      "TEST_BILLS_COUNT",
      "TEST_RIDINGS_COUNT",
      "parties",
      "votes",
      "data_list",
      "provinces",
      "TEST_USERS_COUNT",
      "member_names",
      "status",
      "test_db_manager",
      "TEST_PARTIES_COUNT",
      "vote",
      "meetings",
      "users",
      "bills",
      "province",
      "riding",
      "member",
      "party",
      "user_data",
      "ridings",
      "result",
      "TEST_DATABASE_URL",
      "committees",
      "bill_statuses",
      "meeting",
      "TEST_COMMITTEES_COUNT",
      "session"
    ],
    "functions": [
      "test_users",
      "create_test_engine",
      "create_session_factory",
      "get_test_session",
      "override_get_db_test",
      "_create_test_parties",
      "_create_test_committees",
      "_create_test_votes",
      "_override_get_db",
      "test_db_session",
      "test_database",
      "get_test_data_by_id",
      "drop_tables",
      "test_parties",
      "setup_test_data",
      "test_committee_meetings",
      "test_committees",
      "test_bills",
      "_create_test_bills",
      "test_votes",
      "get_test_data",
      "_create_test_members",
      "test_ridings",
      "_create_test_committee_meetings",
      "__init__",
      "create_tables",
      "_create_test_users",
      "test_members",
      "cleanup_test_data",
      "_create_test_ridings"
    ],
    "classes": [
      "TestDatabaseManager",
      "TestDatabaseConfig"
    ]
  },
  {
    "file": "services/api-gateway/tests/fixtures/database.py",
    "variables": [
      "mock_party",
      "mock_riding",
      "database_fixtures",
      "mock_user",
      "mock_session",
      "mock_member",
      "mock_query",
      "mock_result",
      "mock_politician",
      "func_mock",
      "mock_token",
      "mock_vote",
      "mock_meeting",
      "mock_committee",
      "id_value",
      "mock_bill"
    ],
    "functions": [
      "mock_user_session",
      "create_mock_riding",
      "create_mock_user",
      "create_mock_elected_member",
      "create_mock_bill",
      "mock_filter",
      "mock_bill",
      "mock_party",
      "mock_riding",
      "create_mock_committee_meeting",
      "mock_func",
      "_override_get_db",
      "create_mock_user_session",
      "query",
      "create_mock_vote_question",
      "override_get_db",
      "create_mock_committee",
      "create_mock_password_reset_token",
      "mock_password_reset_token",
      "mock_vote",
      "__init__",
      "mock_committee",
      "execute",
      "mock_user",
      "mock_member",
      "create_mock_party",
      "commit",
      "mock_db_session",
      "rollback",
      "close",
      "_setup_default_mocks"
    ],
    "classes": [
      "MockDatabaseSession",
      "DatabaseTestFixtures"
    ]
  },
  {
    "file": "services/api-gateway/tests/fixtures/test_utilities.py",
    "variables": [
      "test_response_helpers",
      "test_data_helpers",
      "test_assertions",
      "pagination_keys",
      "mock_bill",
      "error_keys",
      "mock_party",
      "mock_riding",
      "has_error_key",
      "response",
      "test_mock_helpers",
      "mock_session",
      "mock_query",
      "mock_execute",
      "mock_vote",
      "request_method",
      "method_map",
      "mock_committee",
      "mock_redis",
      "mock_user",
      "mock_ws",
      "mock_cm",
      "mock_member",
      "committee_keys",
      "member_keys",
      "bill_keys"
    ],
    "functions": [
      "create_mock_riding",
      "create_mock_user",
      "assert_response_contains",
      "create_mock_bill",
      "assert_committee_structure",
      "assert_status_code",
      "make_request",
      "assert_error_response",
      "assert_response_structure",
      "create_mock_committee",
      "assert_list_response_structure",
      "create_mock_db_session",
      "create_mock_redis_client",
      "create_mock_connection_manager",
      "assert_pagination_structure",
      "create_mock_websocket",
      "create_mock_vote",
      "create_mock_party",
      "assert_bill_structure",
      "assert_member_structure",
      "create_mock_member"
    ],
    "classes": [
      "TestDataHelpers",
      "TestResponseHelpers",
      "TestMockHelpers",
      "TestAssertions"
    ]
  },
  {
    "file": "services/api-gateway/tests/fixtures/__init__.py",
    "variables": [
      "__all__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/api-gateway/scripts/backup.py",
    "variables": [
      "backup_files",
      "env",
      "backup_system",
      "backup_results",
      "cmd",
      "file_size",
      "files_to_remove",
      "backup_filename",
      "backup_path",
      "file_path",
      "logger",
      "existing_dirs",
      "db_backup",
      "data_dirs",
      "file_backup",
      "parts",
      "timestamp",
      "parser",
      "result",
      "args"
    ],
    "functions": [
      "_parse_database_url",
      "main",
      "create_database_backup",
      "cleanup_old_backups",
      "create_file_backup",
      "verify_backup",
      "create_full_backup",
      "__init__"
    ],
    "classes": [
      "DatabaseBackup"
    ]
  },
  {
    "file": "services/api-gateway/alembic/env.py",
    "variables": [
      "url",
      "configuration",
      "target_metadata",
      "config",
      "connectable"
    ],
    "functions": [
      "run_migrations_offline",
      "get_url",
      "run_migrations_online"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/alembic/versions/003_add_municipal_tables.py",
    "variables": [
      "revision",
      "down_revision",
      "branch_labels",
      "depends_on"
    ],
    "functions": [
      "downgrade",
      "upgrade"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/alembic/versions/004_add_multi_level_government_schema.py",
    "variables": [
      "revision",
      "down_revision",
      "branch_labels",
      "depends_on"
    ],
    "functions": [
      "downgrade",
      "upgrade"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/alembic/versions/002_represent_integration_schema.py",
    "variables": [
      "revision",
      "down_revision",
      "branch_labels",
      "depends_on"
    ],
    "functions": [
      "downgrade",
      "upgrade"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/alembic/versions/001_initial_schema.py",
    "variables": [
      "revision",
      "down_revision",
      "branch_labels",
      "depends_on"
    ],
    "functions": [
      "downgrade",
      "upgrade"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/alembic/versions/004_create_email_alerts.py",
    "variables": [
      "revision",
      "down_revision",
      "branch_labels",
      "depends_on"
    ],
    "functions": [
      "downgrade",
      "upgrade"
    ],
    "classes": []
  },
  {
    "file": "services/api-gateway/src/core/versioning.py",
    "variables": [
      "v2_part",
      "version_manager",
      "v1_part",
      "version",
      "deprecation_headers",
      "response",
      "headers",
      "v1_router",
      "path_match",
      "api_version",
      "v2_parts",
      "v1_parts"
    ],
    "functions": [
      "get_deprecation_headers",
      "create_versioned_app",
      "register_version",
      "set_deprecation",
      "get_version_router",
      "__init__",
      "_compare_versions"
    ],
    "classes": [
      "APIVersionManager",
      "APIVersion"
    ]
  },
  {
    "file": "services/api-gateway/src/core/middleware/rate_limiting.py",
    "variables": [
      "endpoint_type",
      "oldest_request",
      "ip",
      "cutoff",
      "response",
      "retry_after",
      "current_count",
      "rate_limiter"
    ],
    "functions": [
      "_clean_old_requests",
      "__init__",
      "check_rate_limit"
    ],
    "classes": [
      "RateLimiter"
    ]
  },
  {
    "file": "services/api-gateway/src/api/v1/feeds.py",
    "variables": [
      "debates",
      "rough_string",
      "bills",
      "votes",
      "item_elem",
      "reparsed",
      "rss",
      "statements",
      "feed",
      "channel",
      "router",
      "mp",
      "activities"
    ],
    "functions": [
      "add_item",
      "__init__",
      "generate_rss"
    ],
    "classes": [
      "FeedGenerator"
    ]
  },
  {
    "file": "services/api-gateway/src/api/v1/export.py",
    "variables": [
      "members_data",
      "nested_elem",
      "debates_response",
      "router",
      "rough_string",
      "xml_content",
      "csv_content",
      "output",
      "debates_data",
      "parts",
      "child_elem",
      "reparsed",
      "writer",
      "flat_item",
      "elem",
      "bills_data",
      "fields",
      "item_elem",
      "members_response",
      "root",
      "value",
      "bills_response"
    ],
    "functions": [
      "serialize_to_csv",
      "serialize_to_xml"
    ],
    "classes": []
  },
  {
    "file": "services/etl/ingest_municipal_data.py",
    "variables": [
      "municipalities",
      "ingester",
      "stats",
      "logger",
      "database_url"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/test_csv_ingestion.py",
    "variables": [
      "councillor",
      "municipalities",
      "municipality_data",
      "test_municipality",
      "ingester",
      "logger",
      "database_url"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/test_multi_level_government.py",
    "variables": [
      "pipeline_success",
      "legacy_scrapers",
      "summary",
      "municipal_jurisdictions",
      "province",
      "report",
      "report_path",
      "provincial_jurisdictions",
      "report_success",
      "logger",
      "provincial_stats",
      "municipal_stats",
      "federal_stats",
      "database_url",
      "db_success",
      "by_province",
      "federal_jurisdictions",
      "lines"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/test_comprehensive_integration.py",
    "variables": [
      "legacy_dir",
      "municipal",
      "summary",
      "legacy_sources",
      "report",
      "provincial",
      "scheduler",
      "logger",
      "provincial_stats",
      "status",
      "federal",
      "municipal_stats",
      "examined_sources",
      "tester",
      "report_path",
      "federal_stats"
    ],
    "functions": [
      "__init__"
    ],
    "classes": [
      "ComprehensiveIntegrationTester"
    ]
  },
  {
    "file": "services/etl/ingest_legacy_data.py",
    "variables": [
      "exit_code",
      "json_file",
      "ingester",
      "args",
      "parser",
      "stats",
      "logger",
      "json_files",
      "database_url",
      "data_dir"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/test_municipal_ingestion.py",
    "variables": [
      "metadata",
      "municipalities",
      "municipality_data",
      "test_municipality",
      "councillor",
      "ingester",
      "logger",
      "database_url",
      "test_municipalities"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/load_all_committees.py",
    "variables": [
      "active",
      "all_committees",
      "engine",
      "committee",
      "committees_with_parents",
      "short_name_en",
      "evidence_url",
      "session_id",
      "__table_args__",
      "slug",
      "number",
      "Session",
      "active_committees",
      "statement_count",
      "name_en",
      "logger",
      "committee_id",
      "duplicates",
      "parent_id",
      "LEGACY_COMMITTEES",
      "date",
      "has_evidence",
      "skipped_count",
      "name_fr",
      "id",
      "Base",
      "existing",
      "existing_committees",
      "short_name_fr",
      "committees_missing_names",
      "created_at",
      "witness_count",
      "success",
      "loaded_count",
      "DATABASE_URL",
      "updated_at",
      "session",
      "__tablename__",
      "total_committees"
    ],
    "functions": [
      "run_data_integrity_checks",
      "main",
      "query_existing_committees",
      "create_database_connection",
      "__repr__",
      "verify_committee_hierarchy",
      "load_committee_data"
    ],
    "classes": [
      "Committee",
      "CommitteeMeeting"
    ]
  },
  {
    "file": "services/etl/collect_data.py",
    "variables": [
      "logger",
      "task"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/app/config.py",
    "variables": [
      "LOG_LEVEL",
      "ETL_ENV",
      "DEBUG"
    ],
    "functions": [
      "get_database_url",
      "get_etl_config"
    ],
    "classes": []
  },
  {
    "file": "services/etl/app/__init__.py",
    "variables": [
      "__author__",
      "__version__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/app/data_mapping_library.py",
    "variables": [
      "quebec_municipalities",
      "PUPA_SCRAPER",
      "report",
      "API_SCRAPER",
      "by_province",
      "federal_jurisdictions",
      "MUNICIPAL",
      "PROVINCIAL",
      "ab_municipalities",
      "logger",
      "provinces",
      "bc_municipalities",
      "data_sources",
      "municipal_jurisdictions",
      "province",
      "ontario_municipalities",
      "provincial_jurisdictions",
      "data_mapping_library",
      "sources",
      "other_municipalities",
      "summary",
      "CSV_SCRAPER",
      "FEDERAL",
      "MANUAL_SCRAPER"
    ],
    "functions": [
      "get_csv_scrapers",
      "_initialize_provincial_mappings",
      "export_mapping_report",
      "_initialize_municipal_mappings",
      "_initialize_federal_mappings",
      "get_jurisdiction_by_name",
      "get_legacy_scrapers",
      "get_jurisdictions_by_level",
      "get_jurisdiction_summary",
      "__init__",
      "_initialize_mappings",
      "get_data_sources_by_jurisdiction"
    ],
    "classes": [
      "ScraperType",
      "JurisdictionMapping",
      "DataMappingLibrary",
      "GovernmentLevel",
      "DataSourceMapping"
    ]
  },
  {
    "file": "services/etl/app/main.py",
    "variables": [
      "app",
      "logger"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/app/ingestion/simple_csv_municipal_ingester.py",
    "error": "expected an indented block after 'if' statement on line 141 (<unknown>, line 142)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/app/ingestion/__init__.py",
    "variables": [
      "__all__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/app/ingestion/municipal_data_ingester.py",
    "variables": [
      "office_data",
      "metadata",
      "councillor_id",
      "batch",
      "people",
      "municipality_name",
      "conn",
      "item_path",
      "councillor_data",
      "municipality_data",
      "logger",
      "scraper_class",
      "query",
      "module",
      "MunicipalIngestionStats",
      "batch_size",
      "attr",
      "result",
      "municipalities",
      "councillors",
      "scraper"
    ],
    "functions": [
      "__init__",
      "__post_init__",
      "get_municipality_metadata",
      "get_available_municipalities"
    ],
    "classes": [
      "MunicipalIngestionStats",
      "MunicipalDataIngester"
    ]
  },
  {
    "file": "services/etl/app/ingestion/pupa_scraper_wrapper.py",
    "variables": [
      "context",
      "jurisdiction_id",
      "datadir",
      "scraper",
      "province_map"
    ],
    "functions": [
      "__post_init__",
      "__enter__",
      "__exit__",
      "cleanup_all",
      "create_context",
      "run_scraper",
      "__init__",
      "cleanup"
    ],
    "classes": [
      "PupaScraperWrapper",
      "ScraperContext"
    ]
  },
  {
    "file": "services/etl/app/ingestion/legacy_data_ingester.py",
    "variables": [
      "bill_id",
      "mps_count",
      "mp_row",
      "conn",
      "bills_count",
      "data",
      "database_url",
      "stats",
      "logger",
      "error_msg",
      "vote_id",
      "votes_count",
      "existing_bill",
      "ingester",
      "existing_vote",
      "mp_id",
      "existing_mp",
      "json_files",
      "latest_file",
      "run_id",
      "data_dir"
    ],
    "functions": [
      "__init__",
      "__post_init__"
    ],
    "classes": [
      "IngestionStats",
      "LegacyDataIngester"
    ]
  },
  {
    "file": "services/etl/app/ingestion/pupa_compatibility.py",
    "error": "invalid syntax (<unknown>, line 27)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/app/ingestion/multi_level_government_ingester.py",
    "variables": [
      "source_stats",
      "federal_sources",
      "jurisdiction_type",
      "new_id",
      "report",
      "batch",
      "provincial_sources",
      "jurisdiction_id",
      "levels",
      "stats",
      "logger",
      "provincial_stats",
      "scraper_class",
      "error_msg",
      "LEGACY_SCRAPERS_PATH",
      "code",
      "module",
      "total_stats",
      "jurisdictions_data",
      "start_time",
      "batch_size",
      "municipal_stats",
      "spec",
      "result",
      "summary",
      "municipal_sources",
      "data_sources_data",
      "module_path",
      "federal_stats",
      "existing_id"
    ],
    "functions": [
      "__init__",
      "get_ingestion_summary"
    ],
    "classes": [
      "MultiLevelGovernmentIngester"
    ]
  },
  {
    "file": "services/etl/app/scheduling/etl_scheduler.py",
    "variables": [
      "duration",
      "start_time",
      "scheduler",
      "stats",
      "logger",
      "job_name",
      "job_record"
    ],
    "functions": [
      "run_scheduler",
      "get_job_status",
      "_log_job_completion",
      "schedule_all_jobs",
      "__init__"
    ],
    "classes": [
      "ETLScheduler"
    ]
  },
  {
    "file": "services/etl/app/extractors/__init__.py",
    "variables": [
      "__all__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/app/extractors/legacy_adapters.py",
    "error": "invalid syntax (<unknown>, line 95)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-scrapers-ca/patch.py",
    "variables": [
      "social_re",
      "linkedin_re",
      "person_contact_details",
      "organization_links",
      "name_fragment",
      "membership_links",
      "matchers",
      "membership_contact_details",
      "value",
      "count",
      "instagram_re",
      "person_links",
      "facebook_re",
      "youtube_re",
      "organization_contact_details",
      "twitter_re"
    ],
    "functions": [
      "validate_conditionalPattern",
      "validate_maxMatchingItems"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-scrapers-ca/tasks.py",
    "variables": [
      "province_or_territory_abbreviation_memo",
      "class_name",
      "metadata",
      "jurisdiction_ids",
      "name",
      "leader_styles",
      "name_infix",
      "sgc_to_id",
      "jurisdiction_id",
      "response",
      "path",
      "division",
      "module",
      "content",
      "division_id",
      "ocd_division_csv",
      "ocd_type_id",
      "request_count",
      "keys",
      "parsed",
      "classification",
      "pattern",
      "key",
      "reader",
      "identifier",
      "expected",
      "vowels",
      "ocdid_to_type_name_map",
      "url",
      "document",
      "census_subdivision_type_names",
      "census_division_type_names",
      "source_count",
      "extra_keys",
      "member_styles",
      "class_name_parts",
      "division_name",
      "division_ids"
    ],
    "functions": [
      "tidy",
      "module_name_to_metadata",
      "get_definition",
      "council_pages",
      "module_names",
      "slug",
      "sources_and_assertions",
      "modules_and_module_names_and_classes",
      "csv_error",
      "csv_list",
      "validate_spreadsheet",
      "csv_dict_reader",
      "province_or_territory_abbreviation",
      "csv_stale",
      "type_id"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-scrapers-ca/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-scrapers-ca/utils.py",
    "variables": [
      "children",
      "binary",
      "organization_classification",
      "data",
      "header",
      "lines",
      "label",
      "valid_through",
      "basename",
      "honorific_suffix_re",
      "use_type_id",
      "encoding",
      "parts",
      "SCRAPER",
      "skip_rows",
      "province_or_territory_abbreviation_memo",
      "class_name",
      "splits",
      "match",
      "CONTACT_DETAIL_NOTE_MAP",
      "note",
      "SSL_VERIFY",
      "column_headers",
      "leader_role",
      "district_name_to_boundary_url",
      "decoded_email",
      "digits",
      "extension",
      "district_name_format_callback",
      "role",
      "meta",
      "whitespace_and_newline_re",
      "identifier",
      "whitespace_re",
      "url",
      "DEFAULT_USER_AGENT",
      "district",
      "skip_null_valid_from",
      "area_codes",
      "email_re",
      "CUSTOM_USER_AGENT",
      "many_posts_per_area",
      "response",
      "ftp",
      "valid_from",
      "delimiter",
      "post",
      "other_names",
      "reader",
      "exclude_types",
      "type",
      "value",
      "page",
      "abbreviation",
      "name",
      "p",
      "seat_numbers",
      "table",
      "honorific_prefix_re",
      "district_name_format_string",
      "matches",
      "member_role",
      "empty",
      "parent",
      "organization",
      "province",
      "CONTACT_DETAIL_TYPE_MAP",
      "corrections",
      "styles_of_address",
      "unique_roles",
      "key",
      "hex_email",
      "fallbacks",
      "s",
      "result",
      "filename",
      "text",
      "type_id"
    ],
    "functions": [
      "add_contact",
      "get_phone",
      "get",
      "__setattr__",
      "scrape",
      "is_valid_row",
      "header_converter",
      "clean_telephone_number",
      "clean_french_prepositions",
      "get_email",
      "lxmlize",
      "clean_address",
      "post",
      "_cloudflare_decode",
      "__init__",
      "clean_type_id",
      "clean_string",
      "clean_name",
      "cloudscrape",
      "get_link",
      "add_link",
      "csv_reader",
      "province_or_territory_abbreviations",
      "get_organizations"
    ],
    "classes": [
      "CSVScraper",
      "CanadianScraper",
      "CanadianJurisdiction",
      "CanadianPerson"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/pupa_settings.py",
    "variables": [
      "CACHE_DIR",
      "SCRAPED_DATA_DIR",
      "DATABASE_URL",
      "LOGGING"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_pointe_claire/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "PointeClaire"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_pointe_claire/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "name",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "PointeClairePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_ottawa/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Ottawa"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_ottawa/people.py",
    "variables": [
      "fallbacks",
      "extension",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "OttawaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_burlington/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Burlington"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_burlington/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "contact_node",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "p",
      "MAYOR_PAGE",
      "info",
      "role",
      "image",
      "district"
    ],
    "functions": [
      "scrape",
      "scrape_person"
    ],
    "classes": [
      "BurlingtonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_st_catharines/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "StCatharines"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_st_catharines/people.py",
    "variables": [
      "many_posts_per_area",
      "csv_url"
    ],
    "functions": [
      "district_name_format_callback"
    ],
    "classes": [
      "StCatharinesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_sherbrooke/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Sherbrooke"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_sherbrooke/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "district",
      "p",
      "borough",
      "script",
      "districts",
      "data",
      "role",
      "image",
      "content"
    ],
    "functions": [
      "scrape",
      "get_content"
    ],
    "classes": [
      "SherbrookePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_coquitlam/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Coquitlam"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_coquitlam/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "councillor_seat_number",
      "email_script",
      "name",
      "councillors",
      "phone",
      "w",
      "p",
      "x",
      "role",
      "image",
      "district"
    ],
    "functions": [
      "scrape",
      "build_email"
    ],
    "classes": [
      "CoquitlamPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_dollard_des_ormeaux/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "DollardDesOrmeaux"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_dollard_des_ormeaux/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "name",
      "councillors",
      "general_contacts",
      "p",
      "general_fax",
      "role",
      "general_phone",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "DollardDesOrmeauxPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_woolwich/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Woolwich"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_woolwich/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "office",
      "name",
      "councillors",
      "area",
      "p",
      "info",
      "voice",
      "seat_numbers",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "WoolwichPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_welland/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Welland"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_welland/people.py",
    "variables": [
      "encoding",
      "many_posts_per_area",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "WellandPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_lincoln/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Lincoln"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_lincoln/people.py",
    "variables": [
      "many_posts_per_area",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "LincolnPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_terrebonne/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Terrebonne"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_terrebonne/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "photo_url",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "TerrebonnePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_vaughan/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Vaughan"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_vaughan/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "title",
      "email",
      "phone",
      "name",
      "regional_councillor_seat_number",
      "councillors",
      "email_node",
      "phone_node",
      "contact_info",
      "p",
      "fax_node",
      "role",
      "fax",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "VaughanPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_guelph/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Guelph"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_guelph/people.py",
    "variables": [
      "many_posts_per_area",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "GuelphPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_brossard/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Brossard"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_brossard/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "secteurs_to_districts",
      "phone",
      "names",
      "councillors",
      "name",
      "email_node",
      "p",
      "info_div",
      "photo",
      "mayor_div",
      "role",
      "secteur",
      "image",
      "district"
    ],
    "functions": [
      "scrape",
      "scrape_mayor"
    ],
    "classes": [
      "BrossardPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_north_dumfries/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NorthDumfries"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_north_dumfries/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "name",
      "councillors",
      "match",
      "p",
      "node",
      "role",
      "value",
      "district",
      "word_to_number"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NorthDumfriesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_london/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "London"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_london/people.py",
    "variables": [
      "encoding",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "LondonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_caledon/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Caledon"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_caledon/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "name",
      "councillors",
      "contact_data",
      "p",
      "contact_num",
      "voice",
      "role",
      "wards",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "CaledonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_calgary/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Calgary"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_calgary/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "photo_style",
      "name",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "CalgaryPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_sault_ste_marie/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "SaultSteMarie"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_sault_ste_marie/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "title",
      "page",
      "email",
      "contact_node",
      "phone",
      "name",
      "councillors",
      "phone_numbers",
      "p",
      "role",
      "seat_numbers",
      "fax",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SaultSteMariePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_levis/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Levis"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_levis/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "email",
      "arrondissements_page",
      "person",
      "ARRONDISSEMENTS_PAGE",
      "name",
      "council_page",
      "councillors",
      "photo_url",
      "p",
      "role",
      "district",
      "presidents",
      "arrondissement"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "LevisPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_lethbridge/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Lethbridge"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_lethbridge/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "paragraph",
      "name",
      "councillors",
      "p",
      "MAYOR_PAGE"
    ],
    "functions": [
      "scrape",
      "scrape_person",
      "scrape_mayor"
    ],
    "classes": [
      "LethbridgePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_richmond/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Richmond"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_richmond/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "councillor_seat_number",
      "phone",
      "photo_url",
      "p",
      "district",
      "urls"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "RichmondPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_thunder_bay/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "ThunderBay"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_thunder_bay/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "councillor_page",
      "email",
      "phone",
      "name",
      "councillors",
      "p",
      "photo",
      "info",
      "role",
      "district",
      "seat_number"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "ThunderBayPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_langley_city/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Langley"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_langley_city/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "councillor_seat_number",
      "phone",
      "mayor_page",
      "councillors",
      "phone_div",
      "p",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "LangleyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_kirkland/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Kirkland"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_kirkland/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "p",
      "role",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "KirklandPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb_saint_john/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "SaintJohn"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb_saint_john/people.py",
    "variables": [
      "corrections",
      "many_posts_per_area",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "SaintJohnPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_oshawa/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Oshawa"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_oshawa/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "links",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "photo_url",
      "p",
      "info",
      "role",
      "data",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "OshawaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_wellesley/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Wellesley"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_wellesley/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "srch",
      "page",
      "email",
      "phone",
      "position",
      "name",
      "p",
      "district",
      "members"
    ],
    "functions": [
      "scrape",
      "post_number"
    ],
    "classes": [
      "WellesleyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_newmarket/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Newmarket"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_newmarket/people.py",
    "variables": [
      "corrections",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "NewmarketPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_grande_prairie_county_no_1/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "GrandePrairieCountyNo1"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_grande_prairie_county_no_1/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "name",
      "councillors",
      "p",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "GrandePrairieCountyNo1PersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_strathcona_county/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "StrathconaCounty"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_strathcona_county/people.py",
    "variables": [
      "corrections",
      "s",
      "csv_url"
    ],
    "functions": [
      "header_converter"
    ],
    "classes": [
      "StrathconaCountyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_markham/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Markham"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_markham/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "links",
      "page",
      "contact_node",
      "email",
      "url",
      "phone",
      "name",
      "links_r",
      "regional_councillor_seat_number",
      "councillors",
      "p",
      "MAYOR_PAGE",
      "role",
      "image",
      "district",
      "link",
      "address"
    ],
    "functions": [
      "scrape",
      "get_links",
      "get_contact",
      "scrape_mayor"
    ],
    "classes": [
      "MarkhamPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_fort_erie/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "FortErie"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_fort_erie/people.py",
    "variables": [
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "FortEriePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_kitchener/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Kitchener"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_kitchener/people.py",
    "variables": [
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "KitchenerPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nt/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NorthwestTerritories"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nt/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "first_phone_added",
      "email",
      "name",
      "address_lines",
      "email_elements",
      "number",
      "phone_type",
      "p",
      "address_section",
      "contact_lines",
      "contact",
      "po_box_line",
      "district",
      "members"
    ],
    "functions": [
      "scrape",
      "handle_phone",
      "handle_address"
    ],
    "classes": [
      "NorthwestTerritoriesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ns/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NovaScotia"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ns/people.py",
    "variables": [
      "page",
      "civic_address",
      "name",
      "p",
      "mailing_address",
      "members",
      "business_address",
      "civic_address_alt",
      "detail",
      "detail_url",
      "roles",
      "COUNCIL_PAGE",
      "party",
      "email",
      "PARTIES",
      "address_root",
      "linked_roles",
      "contact",
      "district",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NovaScotiaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_victoria/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Victoria"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_victoria/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "phone",
      "councillors",
      "p",
      "photo",
      "mayor_url",
      "district",
      "seat_number"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "VictoriaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_abbotsford/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Abbotsford"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_abbotsford/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "contact_page",
      "email",
      "fax_div",
      "councillor_seat_number",
      "phone",
      "name",
      "coun_page",
      "councillors",
      "contact_data",
      "p",
      "CONTACT_PAGE",
      "role",
      "fax",
      "image",
      "district",
      "text",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "AbbotsfordPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_uxbridge/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Uxbridge"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_uxbridge/people.py",
    "variables": [
      "updated_at",
      "contact_person",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "UxbridgePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "valid_from",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "BritishColumbia"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "name",
      "response",
      "p",
      "party",
      "data",
      "image",
      "district",
      "members"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "BritishColumbiaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_milton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Milton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_milton/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "phone",
      "email_node",
      "councillors",
      "p",
      "MAYOR_PAGE",
      "info",
      "role",
      "wards",
      "district"
    ],
    "functions": [
      "scrape",
      "scrape_person"
    ],
    "classes": [
      "MiltonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_clarington/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Clarington"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_clarington/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "content_node",
      "page",
      "email",
      "name",
      "councillors",
      "photo_url",
      "p",
      "MAYOR_PAGE"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "ClaringtonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nl_st_john_s/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "StJohns"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nl_st_john_s/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "councillor_seat_number",
      "description",
      "phone",
      "name",
      "councillors",
      "p",
      "photo",
      "index",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "StJohnsPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_lasalle/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "LaSalle"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_lasalle/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "councillor_seat_number",
      "cell",
      "councillors",
      "p",
      "voice",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "LaSallePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_hamilton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Hamilton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_hamilton/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "info_node",
      "photo_url",
      "p",
      "MAYOR_PAGE",
      "district"
    ],
    "functions": [
      "scrape",
      "councillor_data",
      "mayor_data"
    ],
    "classes": [
      "HamiltonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "valid_from",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Alberta"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab/people.py",
    "variables": [
      "name",
      "OFFICE_FIELDS",
      "p",
      "ADDRESS_FIELDS",
      "roles",
      "index",
      "addresses",
      "COUNCIL_PAGE",
      "row_xpath",
      "members_page",
      "csv_text",
      "name_without_status",
      "MEMBER_INDEX_URL",
      "party",
      "reader",
      "field_names",
      "PARTIES",
      "rows",
      "value",
      "district",
      "address"
    ],
    "functions": [
      "scrape",
      "get_party"
    ],
    "classes": [
      "AlbertaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_wilmot/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Wilmot"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_wilmot/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "WilmotPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_mb_winnipeg/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Winnipeg"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_mb_winnipeg/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "phone",
      "name",
      "councillors",
      "p",
      "api_url",
      "role",
      "fax",
      "data",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "WinnipegPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_niagara/__init__.py",
    "variables": [
      "url",
      "divisions",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Niagara"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_niagara/people.py",
    "variables": [
      "corrections",
      "many_posts_per_area",
      "s",
      "csv_url"
    ],
    "functions": [
      "header_converter"
    ],
    "classes": [
      "NiagaraPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_saanich/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Saanich"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_saanich/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "councillor_seat_number",
      "main",
      "name",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SaanichPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_cote_saint_luc/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "CoteSaintLuc"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_cote_saint_luc/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "blog",
      "councillors",
      "web",
      "p",
      "role",
      "image",
      "district",
      "twitter",
      "facebook"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "CoteSaintLucPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca/__init__.py",
    "variables": [
      "url",
      "valid_through",
      "classification",
      "name",
      "parties",
      "upper",
      "parliament",
      "lower",
      "valid_from",
      "now",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Canada"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca/people.py",
    "variables": [
      "page",
      "name",
      "phone_and_fax",
      "personal_url",
      "constituency",
      "voice",
      "phone_and_fax_el",
      "note",
      "roles",
      "photo",
      "CORRECTIONS",
      "TRANSLATION_TABLE",
      "roles_node",
      "COUNCIL_PAGE",
      "genders",
      "COUNCIL_PAGE_FEMALE",
      "mp_page",
      "fax_el",
      "province",
      "photo_response",
      "phone",
      "m",
      "preferred_languages",
      "party",
      "COUNCIL_PAGE_MALE",
      "phone_el",
      "CONSECUTIVE_WHITESPACE_REGEX",
      "url",
      "IMAGE_PLACEHOLDER_SHA1",
      "email",
      "rows",
      "fax",
      "normalized_names",
      "district",
      "address"
    ],
    "functions": [
      "scrape",
      "scrape_people",
      "normalize_district",
      "is_valid_telephone_number"
    ],
    "classes": [
      "CanadaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nu/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Nunavut"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nu/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "website",
      "name",
      "address_lines",
      "number",
      "p",
      "contact",
      "party",
      "district",
      "members"
    ],
    "functions": [
      "scrape",
      "handle_phone",
      "handle_address"
    ],
    "classes": [
      "NunavutPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_laval/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Laval"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_laval/people.py",
    "variables": [
      "s",
      "locale",
      "csv_url",
      "corrections",
      "encoding"
    ],
    "functions": [
      "is_valid_row",
      "header_converter"
    ],
    "classes": [
      "LavalPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_haldimand_county/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "HaldimandCounty"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_haldimand_county/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "councillors",
      "p",
      "role",
      "district",
      "info_section"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "HaldimandCountyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_cambridge/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Cambridge"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_cambridge/people.py",
    "variables": [
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "CambridgePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_kawartha_lakes/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "KawarthaLakes"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_kawartha_lakes/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "info_node",
      "p",
      "role",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "KawarthaLakesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "PrinceEdwardIsland"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "title",
      "page",
      "url",
      "email",
      "phone",
      "roles",
      "p",
      "party",
      "info",
      "details",
      "district",
      "members",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "PrinceEdwardIslandPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_mississauga/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Mississauga"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_mississauga/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "name",
      "councillors",
      "name_district",
      "p",
      "photo",
      "CONTACT_PAGE",
      "mayor_url"
    ],
    "functions": [
      "scrape",
      "councillor_data",
      "mayor_data"
    ],
    "classes": [
      "MississaugaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_waterloo_region/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Waterloo"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_waterloo_region/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "links",
      "municipalities",
      "phone",
      "name",
      "councillors",
      "area",
      "p",
      "role",
      "seat_numbers",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "WaterlooPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_surrey/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Surrey"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_surrey/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "ext_infos",
      "email",
      "phone",
      "photo_url",
      "p",
      "mayor_url",
      "root",
      "district",
      "members",
      "seat_number"
    ],
    "functions": [
      "scrape",
      "scrape_extended_info"
    ],
    "classes": [
      "SurreyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_whitby/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Whitby"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_whitby/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "name",
      "regional_councillor_seat_number",
      "councillors",
      "p",
      "district",
      "role",
      "image",
      "node"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "WhitbyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_sk_regina/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Regina"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_sk_regina/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "photo_url_rel",
      "name",
      "councillors",
      "photo_url",
      "m",
      "MAYOR_CONTACT_URL",
      "mayor_link",
      "mayor_url",
      "root",
      "text"
    ],
    "functions": [
      "scrape",
      "councillor_data",
      "mayor_data"
    ],
    "classes": [
      "ReginaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe_summerside/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Summerside"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe_summerside/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "decoded_email",
      "phone",
      "councillors",
      "p",
      "photo",
      "key",
      "hex_email",
      "role_name",
      "district"
    ],
    "functions": [
      "scrape",
      "decode_email"
    ],
    "classes": [
      "SummersidePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_saint_jerome/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "SaintJerome"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_saint_jerome/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "phone",
      "name",
      "councillors",
      "district_node",
      "p",
      "role",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SaintJeromePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_sk/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Saskatchewan"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_sk/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "websites",
      "name",
      "address_lines",
      "matches",
      "p",
      "party",
      "address_type",
      "lines",
      "district",
      "members"
    ],
    "functions": [
      "scrape",
      "handle_phone",
      "handle_address"
    ],
    "classes": [
      "SaskatchewanPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_trois_rivieres/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "TroisRivieres"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_trois_rivieres/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "photo_url",
      "p",
      "role",
      "district",
      "members"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "TroisRivieresPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_montreal/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "organization",
      "borough_id",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Montreal"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_montreal/people.py",
    "variables": [
      "s",
      "locale",
      "csv_url",
      "fallbacks",
      "corrections",
      "encoding"
    ],
    "functions": [
      "is_valid_row",
      "header_converter"
    ],
    "classes": [
      "MontrealPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_montreal_est/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "MontrealEst"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_montreal_est/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "MontrealEstPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_sk_saskatoon/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Saskatoon"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_sk_saskatoon/people.py",
    "variables": [
      "contact_node",
      "page",
      "phone",
      "MAYOR_URL",
      "councillors",
      "name",
      "p",
      "district",
      "info",
      "image",
      "content",
      "COUNCIL_URL"
    ],
    "functions": [
      "scrape",
      "scrape_mayor"
    ],
    "classes": [
      "SaskatoonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ns_halifax/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Halifax"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ns_halifax/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "councillor_page",
      "email",
      "phone",
      "name",
      "councillors",
      "info_div",
      "photo",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "HalifaxPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_westmount/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Westmount"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_westmount/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "name",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "WestmountPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_burnaby/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Burnaby"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_burnaby/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "contact_node",
      "page",
      "email",
      "councillor_seat_number",
      "phone",
      "councillors",
      "photo_url",
      "p",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "BurnabyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_gatineau/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Gatineau"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_gatineau/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "names",
      "councillors",
      "profile_page",
      "roles",
      "profile_url",
      "photo_url",
      "p",
      "districts",
      "role",
      "js",
      "district",
      "urls"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "GatineauPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "valid_from",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Quebec"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc/people.py",
    "variables": [
      "contact_page",
      "page",
      "office",
      "contact_url",
      "name",
      "headings",
      "p",
      "detail_page",
      "members",
      "office_items",
      "detail_url",
      "roles",
      "SOCIAL_MEDIA_DATA",
      "division",
      "COUNCIL_PAGE",
      "phone",
      "en_detail_page",
      "party",
      "identifier",
      "office_info",
      "email",
      "regex",
      "photo_url",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "QuebecPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_georgina/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Georgina"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_georgina/people.py",
    "variables": [
      "csv_url",
      "many_posts_per_area",
      "contact_person",
      "unique_roles",
      "updated_at"
    ],
    "functions": [],
    "classes": [
      "GeorginaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_peel/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Peel"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_peel/people.py",
    "variables": [
      "many_posts_per_area",
      "district_name_to_boundary_url",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "PeelPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_brantford/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Brantford"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_brantford/people.py",
    "variables": [
      "encoding",
      "many_posts_per_area",
      "csv_url",
      "corrections"
    ],
    "functions": [
      "header_converter"
    ],
    "classes": [
      "BrantfordPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_grande_prairie/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "GrandePrairie"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_grande_prairie/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "email",
      "page",
      "phone",
      "councillors",
      "p",
      "image",
      "district",
      "seat_number"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "GrandePrairiePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb_moncton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Moncton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb_moncton/people.py",
    "variables": [
      "email",
      "councillor",
      "API_URL",
      "phone",
      "name",
      "p",
      "ward",
      "role",
      "seat_numbers",
      "data",
      "fax",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "MonctonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ns_cape_breton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "CapeBreton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ns_cape_breton/people.py",
    "variables": [
      "page",
      "raw_address",
      "email_script",
      "name",
      "p",
      "MAYOR_PAGE",
      "info",
      "contact_nodes",
      "escaped_name",
      "COUNCIL_PAGE",
      "mayorpage",
      "phone",
      "local_part",
      "email",
      "councillor_url",
      "clean_name",
      "councillors",
      "photo_url",
      "fax",
      "image",
      "district",
      "address"
    ],
    "functions": [
      "scrape",
      "decode_email"
    ],
    "classes": [
      "CapeBretonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_longueuil/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "exclude_types",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Longueuil"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_longueuil/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "trs",
      "name",
      "detail_url",
      "p",
      "detail_page",
      "img",
      "photo",
      "MAYOR_PAGE",
      "district",
      "seat_number"
    ],
    "functions": [
      "scrape",
      "scrape_mayor"
    ],
    "classes": [
      "LongueuilPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_oakville/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Oakville"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_oakville/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "p",
      "role",
      "district",
      "district_role"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "OakvillePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_dorval/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Dorval"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_dorval/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "name",
      "councillors",
      "p",
      "info",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "DorvalPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_ajax/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Ajax"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_ajax/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "cell",
      "name",
      "alt",
      "councillors",
      "p",
      "voice",
      "role",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "AjaxPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_waterloo/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Waterloo"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_waterloo/people.py",
    "variables": [
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "WaterlooPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb_fredericton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Fredericton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb_fredericton/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "name",
      "councillors",
      "p",
      "ward",
      "role",
      "district",
      "text"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "FrederictonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_niagara_on_the_lake/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "NiagaraOnTheLake"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_niagara_on_the_lake/people.py",
    "variables": [
      "unique_roles",
      "many_posts_per_area",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "NiagaraOnTheLakePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_king/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "King"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_king/people.py",
    "variables": [
      "updated_at",
      "contact_person",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "KingPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_beaconsfield/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Beaconsfield"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_beaconsfield/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "name",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "BeaconsfieldPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_kelowna/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Kelowna"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_kelowna/people.py",
    "variables": [
      "many_posts_per_area",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "KelownaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_greater_sudbury/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "GreaterSudbury"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_greater_sudbury/people.py",
    "variables": [
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "GreaterSudburyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe_stratford/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Stratford"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe_stratford/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "area",
      "p",
      "role",
      "seat_numbers",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "StratfordPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_whitchurch_stouffville/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "WhitchurchStouffville"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_whitchurch_stouffville/people.py",
    "variables": [
      "updated_at",
      "contact_person",
      "csv_url",
      "many_posts_per_area"
    ],
    "functions": [],
    "classes": [
      "WhitchurchStouffvillePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_chatham_kent/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "ChathamKent"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_chatham_kent/people.py",
    "variables": [
      "contact_page",
      "page",
      "name",
      "p",
      "MAYOR_CONTACT_PAGE",
      "COUNCIL_DATA_URL",
      "seat_numbers",
      "response",
      "body",
      "COUNCIL_PAGE",
      "phone",
      "headers",
      "title",
      "email",
      "url",
      "namespace",
      "councillors",
      "mayor_url",
      "image",
      "district",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "ChathamKentPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_yt_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "YukonMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_yt_municipalities/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "email",
      "councillor_or_mayor",
      "councillor",
      "organization",
      "phone",
      "website",
      "membership",
      "response",
      "district",
      "p",
      "col2end",
      "fax",
      "role",
      "data",
      "col1end",
      "lines",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "YukonMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_nb_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "NewBrunswickMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_nb_municipalities/people.py",
    "variables": [
      "seen",
      "page",
      "list_links",
      "p",
      "organization_name",
      "detail_urls",
      "classifications",
      "unknown_names",
      "birth_date",
      "division_id",
      "COUNCIL_PAGE",
      "contacts",
      "organization",
      "phone",
      "corrections",
      "expected_roles",
      "unique_roles",
      "role",
      "names_to_ids",
      "email",
      "url",
      "exclude_divisions",
      "councillors",
      "duplicate_names",
      "district",
      "fax",
      "address",
      "groups",
      "type_id",
      "division_name"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NewBrunswickMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_sk_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "SaskatchewanMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_sk_municipalities/people.py",
    "variables": [
      "page",
      "councillor",
      "p",
      "districts",
      "data",
      "district_name",
      "response",
      "index",
      "COUNCIL_PAGE",
      "contacts",
      "phone",
      "membership",
      "org",
      "role",
      "email",
      "dist2",
      "pages",
      "councillors",
      "dist1",
      "fax",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SaskatchewanMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_nl_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NewfoundlandAndLabradorMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_nl_municipalities/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "column_index",
      "email",
      "pages",
      "phone",
      "name",
      "membership",
      "response",
      "org",
      "p",
      "data",
      "district",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NewfoundlandAndLabradorMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "CanadaMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_municipalities/people.py",
    "variables": [
      "csv_url",
      "organization",
      "name",
      "post",
      "organization_key",
      "organization_classification",
      "p",
      "organizations",
      "reader",
      "role",
      "seat_numbers",
      "encoding",
      "organization_name",
      "district"
    ],
    "functions": [
      "scrape",
      "is_valid_row"
    ],
    "classes": [
      "CanadaMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_nt_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NorthwestTerritoriesMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_nt_municipalities/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "name",
      "councillors",
      "membership",
      "org",
      "p",
      "contact",
      "info",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NorthwestTerritoriesMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_ab_candidates/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "valid_from",
      "member_role",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "AlbertaCandidates"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_ab_candidates/people.py",
    "variables": [
      "csv_url",
      "contact_person",
      "corrections",
      "encoding",
      "updated_at"
    ],
    "functions": [
      "is_valid_row"
    ],
    "classes": [
      "AlbertaCandidatesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_bc_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "BritishColumbiaMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_bc_municipalities/people.py",
    "variables": [
      "representative_email",
      "representative_name",
      "p",
      "LIST_PAGE",
      "councillor_reps",
      "number_of_records_text",
      "email_corrections",
      "organization_name",
      "additional_councillor_reps",
      "number_of_records",
      "municipality_text",
      "record_url",
      "municipal_page",
      "birth_date",
      "processed_ids",
      "division",
      "list_page",
      "division_corrections",
      "division_id",
      "number_of_pages",
      "additional_leader_reps",
      "leader_reps",
      "organization",
      "infixes",
      "municipal_type",
      "email_scrape",
      "names_to_ids",
      "name_corrections",
      "municipal_id",
      "exclude_divisions",
      "municipalities",
      "representative_phone",
      "excluded_district_types",
      "duplicate_names",
      "processed_divisions",
      "organizations",
      "exclude_districts",
      "type_id",
      "division_name"
    ],
    "functions": [
      "scrape",
      "person_data"
    ],
    "classes": [
      "BritishColumbiaMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_pe_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "PrinceEdwardIslandMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_pe_municipalities/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "site",
      "phone",
      "name",
      "councillors",
      "membership",
      "org",
      "p",
      "contact_type",
      "contact",
      "info",
      "districts",
      "role",
      "fax",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "PrinceEdwardIslandMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_ns_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NovaScotiaMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_ns_municipalities/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "emails",
      "name",
      "membership",
      "phone",
      "regex",
      "response",
      "org",
      "district",
      "p",
      "matches",
      "fax",
      "data",
      "lines",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NovaScotiaMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_bc_municipalities_candidates/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "BritishColumbiaMunicipalitiesCandidates"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_bc_municipalities_candidates/people.py",
    "variables": [
      "seen",
      "name",
      "p",
      "organization_name",
      "district_name",
      "contact_person",
      "birth_date",
      "division",
      "division_id",
      "COUNCIL_PAGE",
      "organization",
      "expected_roles",
      "infixes",
      "role",
      "reader",
      "names_to_ids",
      "exclude_divisions",
      "duplicate_names",
      "organizations",
      "rows",
      "exclude_districts",
      "updated_at",
      "district",
      "type_id",
      "division_name"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "BritishColumbiaMunicipalitiesCandidatesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_mb_candidates/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "organization",
      "valid_from",
      "member_role",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "ManitobaCandidates"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_mb_candidates/people.py",
    "variables": [
      "encoding",
      "updated_at",
      "contact_person",
      "csv_url"
    ],
    "functions": [
      "is_valid_row"
    ],
    "classes": [
      "ManitobaCandidatesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_mb_municipalities/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "ManitobaMunicipalities"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_mb_municipalities/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "title",
      "page",
      "email",
      "organization",
      "phone",
      "councillors",
      "membership",
      "p",
      "contact",
      "districts",
      "fax",
      "positions",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "ManitobaMunicipalitiesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_candidates/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "valid_from",
      "member_role",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "CanadaCandidates"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/disabled/ca_candidates/people.py",
    "variables": [
      "csv_url",
      "contact_person",
      "corrections",
      "encoding",
      "updated_at"
    ],
    "functions": [
      "is_valid_row"
    ],
    "classes": [
      "CanadaCandidatesPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "exclude_types",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Ontario"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on/people.py",
    "variables": [
      "page",
      "office",
      "name",
      "headings",
      "p",
      "node",
      "members",
      "office_items",
      "roles",
      "phone_index",
      "nodes",
      "COUNCIL_PAGE",
      "phone",
      "party",
      "office_info",
      "url",
      "emails",
      "regex",
      "fax",
      "image",
      "district",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "OntarioPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_belleville/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Belleville"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_belleville/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "ward_name",
      "phone",
      "name",
      "councillors",
      "p",
      "district",
      "MAYOR_PAGE",
      "role",
      "seat_numbers",
      "wards",
      "image",
      "node"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "BellevillePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_richmond_hill/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "RichmondHill"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_richmond_hill/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "name",
      "councillors",
      "div",
      "p",
      "urls"
    ],
    "functions": [
      "scrape",
      "process"
    ],
    "classes": [
      "RichmondHillPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_toronto/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "skip_null_valid_from",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Toronto"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_toronto/people.py",
    "variables": [
      "corrections",
      "csv_url"
    ],
    "functions": [
      "is_valid_row"
    ],
    "classes": [
      "TorontoPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_vancouver/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Vancouver"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_vancouver/people.py",
    "variables": [
      "corrections",
      "many_posts_per_area",
      "delimiter",
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "VancouverPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nl/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NewfoundlandAndLabrador"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nl/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "PARTIES",
      "name",
      "phone",
      "HEADING_TYPE",
      "p",
      "district",
      "members",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NewfoundlandAndLabradorPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NewBrunswick"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_nb/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "photo_url",
      "roles",
      "district",
      "p",
      "district_corrections",
      "fax",
      "hrefs",
      "node",
      "members",
      "address"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NewBrunswickPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_kingston/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Kingston"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_kingston/people.py",
    "variables": [
      "csv_url"
    ],
    "functions": [],
    "classes": [
      "KingstonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_lambton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Lambton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_lambton/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "councillor_seat_number",
      "name",
      "councillors",
      "p",
      "role",
      "district",
      "text"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "LambtonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_new_westminster/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "NewWestminster"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_new_westminster/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "p",
      "photo",
      "MAYOR_PAGE",
      "email_parts",
      "district",
      "seat_number"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "NewWestminsterPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_windsor/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Windsor"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_windsor/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "DATA_URL",
      "phone",
      "name",
      "item",
      "p",
      "BASE_URL",
      "role",
      "data_request",
      "data",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "WindsorPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_quebec/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Quebec"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_quebec/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "name",
      "councillors",
      "sections",
      "district",
      "p",
      "borough",
      "borough_strings",
      "districts",
      "role",
      "header"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "QuebecPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_mb/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "skip_null_valid_from",
      "valid_from",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Manitoba"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_mb/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "member_page",
      "url",
      "page",
      "email",
      "name",
      "district",
      "p",
      "rows",
      "party",
      "image",
      "table",
      "full_name"
    ],
    "functions": [
      "scrape",
      "get_party"
    ],
    "classes": [
      "ManitobaPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_saguenay/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Saguenay"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_saguenay/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "contact_page",
      "page",
      "borough_node",
      "name",
      "councillors",
      "p",
      "district",
      "CONTACT_PAGE",
      "MAYOR_PAGE",
      "borough",
      "mayor_page",
      "node",
      "text"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SaguenayPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_senneville/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Senneville"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_senneville/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "councillors",
      "p",
      "role",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SennevillePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe_charlottetown/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "use_type_id",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Charlottetown"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_pe_charlottetown/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "para",
      "name",
      "match",
      "p",
      "district",
      "contact_type",
      "nodes",
      "role",
      "image",
      "groups",
      "text"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "CharlottetownPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_langley/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Langley"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_bc_langley/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "line1",
      "page",
      "email",
      "line2",
      "phone",
      "name",
      "councillors",
      "p",
      "address_block",
      "MAYOR_PAGE",
      "address",
      "district",
      "seat_number"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "LangleyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_edmonton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Edmonton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_edmonton/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "contact_page",
      "page",
      "contacts",
      "district_name",
      "name",
      "councillors",
      "image",
      "p",
      "MAYOR_CONTACT_PAGE",
      "contact_type",
      "district",
      "MAYOR_PAGE",
      "value",
      "page_url",
      "address"
    ],
    "functions": [
      "scrape",
      "scrape_mayor",
      "get_contact_info"
    ],
    "classes": [
      "EdmontonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_brampton/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Brampton"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_brampton/people.py",
    "variables": [
      "encoding",
      "csv_url",
      "corrections"
    ],
    "functions": [],
    "classes": [
      "BramptonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_huron/__init__.py",
    "variables": [
      "url",
      "divisions",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Huron"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_huron/people.py",
    "variables": [
      "encoding",
      "many_posts_per_area",
      "csv_url",
      "corrections"
    ],
    "functions": [],
    "classes": [
      "HuronPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_mercier/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Mercier"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_mercier/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "councillors",
      "p",
      "mayor_node",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "MercierPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_grimsby/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Grimsby"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_grimsby/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "phone",
      "name",
      "councillors_node",
      "name_node",
      "area",
      "p",
      "MAYOR_PAGE",
      "wards",
      "image",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "GrimsbyPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_pickering/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "Pickering"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_on_pickering/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "links",
      "page",
      "councillors",
      "number",
      "p",
      "mayor",
      "text"
    ],
    "functions": [
      "scrape",
      "_create_person"
    ],
    "classes": [
      "PickeringPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_saint_jean_sur_richelieu/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "SaintJeanSurRichelieu"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_saint_jean_sur_richelieu/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "photo_url_rel",
      "name",
      "councillors",
      "photo_url",
      "p",
      "district",
      "voice",
      "role",
      "node"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SaintJeanSurRichelieuPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_sainte_anne_de_bellevue/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "SainteAnneDeBellevue"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_qc_sainte_anne_de_bellevue/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "name",
      "councillors",
      "p",
      "role",
      "district"
    ],
    "functions": [
      "scrape"
    ],
    "classes": [
      "SainteAnneDeBellevuePersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_wood_buffalo/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "organization",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "WoodBuffalo"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_ab_wood_buffalo/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "page",
      "email",
      "paragraph",
      "name",
      "councillors",
      "email_node",
      "area",
      "p",
      "MAYOR_PAGE",
      "seat_numbers",
      "wards",
      "image",
      "district"
    ],
    "functions": [
      "scrape",
      "scrape_mayor"
    ],
    "classes": [
      "WoodBuffaloPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_yt/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "division_id",
      "division_name"
    ],
    "functions": [],
    "classes": [
      "Yukon"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_yt/people.py",
    "variables": [
      "COUNCIL_PAGE",
      "url",
      "page",
      "email",
      "next_line",
      "image_from_src",
      "image_from_cf",
      "name",
      "website",
      "address_lines",
      "number",
      "p",
      "contact_lines",
      "contact",
      "party",
      "district",
      "members"
    ],
    "functions": [
      "scrape",
      "handle_phone",
      "handle_address"
    ],
    "classes": [
      "YukonPersonScraper"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_candidates/__init__.py",
    "variables": [
      "url",
      "classification",
      "name",
      "parties",
      "upper",
      "parliament",
      "lower",
      "division_id",
      "division_name"
    ],
    "functions": [
      "get_organizations"
    ],
    "classes": [
      "CanadaCandidates"
    ]
  },
  {
    "file": "services/etl/legacy-scrapers-ca/ca_candidates/people.py",
    "error": "invalid syntax (<unknown>, line 327)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/setup.py",
    "variables": [
      "file_path",
      "now",
      "this_dir",
      "_super_value"
    ],
    "functions": [
      "local_version",
      "version_scheme",
      "read"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/civic_clerk_site.py",
    "variables": [
      "scraper",
      "data",
      "civic_clerk_sites"
    ],
    "functions": [
      "civic_clerk_integration"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/conftest.py",
    "variables": [
      "path",
      "mod_name"
    ],
    "functions": [
      "csv_rows",
      "read_fixture",
      "file_lines",
      "one_site_url",
      "create_scraper_dir",
      "civic_scraper_dir",
      "asset_inputs",
      "path_to_test_dir_file",
      "list_dir",
      "file_contents",
      "vcr_cassette_dir",
      "search_results_html",
      "set_default_env",
      "two_site_urls"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_cache_env_setting.py",
    "variables": [
      "cache"
    ],
    "functions": [
      "test_env_configured_default"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/primegov_test.py",
    "variables": [
      "scraper",
      "data",
      "primegov_sites"
    ],
    "functions": [
      "primegov_integration"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_civic_plus_parser.py",
    "variables": [
      "html",
      "subset",
      "expected_types",
      "parser",
      "asset_types",
      "data",
      "first"
    ],
    "functions": [
      "test_parse_alameda",
      "test_parse_all",
      "test_extract_all_asset_types_for_meeting"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_base_site.py",
    "variables": [
      "site"
    ],
    "functions": [
      "test_site_with_parser",
      "test_site_default"
    ],
    "classes": [
      "Example",
      "Parser"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_civic_plus_site.py",
    "variables": [
      "site2",
      "target_dir",
      "artifacts_path",
      "actual_asset_types",
      "cp",
      "expected_meeting_dates",
      "scrape_date",
      "site_url",
      "end_date",
      "contents",
      "expected_asset_types",
      "start_date",
      "actual_files",
      "inpath",
      "assets",
      "expected",
      "url",
      "agenda",
      "site"
    ],
    "functions": [
      "test_scrape_download_true",
      "test_scrape_cache_true",
      "test_scrape_download_filter_size",
      "test_place_name_arg",
      "test_scrape_download_filter_type",
      "test_scrape_download_default",
      "test_scrape_current_day_by_default",
      "test_scrape_cache_false_default",
      "test_scrape_place_state",
      "test_scrape_defaults",
      "test_scrape_no_meetings_for_date",
      "test_scrape_download_filter_both"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/granicus_site.py",
    "variables": [
      "scraper",
      "data",
      "granicus_sites"
    ],
    "functions": [
      "granicus_integration"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_runner.py",
    "variables": [
      "site_class",
      "url",
      "site_instance",
      "ac_instance",
      "r",
      "cache_instance",
      "asset_instance",
      "end_date",
      "assets_dir",
      "to_patch",
      "start_date"
    ],
    "functions": [
      "test_runner_downloads_assets",
      "test_runner_no_download_via_site",
      "test_runner_site_scrape",
      "test_runner_site_cache"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_asset.py",
    "variables": [
      "url",
      "extended",
      "expected_file_names",
      "kwargs",
      "response",
      "pattern",
      "actual_file_names",
      "appended",
      "indexed",
      "outfile",
      "asset",
      "contents",
      "to_patch",
      "asset_objs"
    ],
    "functions": [
      "asset_collection",
      "test_asset_download",
      "test_asset_args",
      "test_asset_methods",
      "test_csv_export"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/legistar_site.py",
    "variables": [
      "kwargs",
      "legistar_sites",
      "scraper",
      "data",
      "PROJECT_ROOT"
    ],
    "functions": [
      "legistar_integration"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_cli.py",
    "variables": [
      "runner",
      "meta_files",
      "assets_dir",
      "meta_dir",
      "kwargs",
      "runner_instance",
      "pattern",
      "fname",
      "artifacts_dir",
      "cli_runner",
      "data",
      "full_path"
    ],
    "functions": [
      "test_cli_scrape_simple",
      "test_cli_store_assets_and_artifacts",
      "test_cli_store_csv_urls"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_cache.py",
    "variables": [
      "files",
      "file_path",
      "actual_contents",
      "outfile",
      "cache",
      "target",
      "scrape_dir",
      "content"
    ],
    "functions": [
      "test_default_cache_dir",
      "test_write",
      "test_custom_cache_path"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/tests/test_legistar_site.py",
    "variables": [
      "actual_files",
      "url",
      "agenda",
      "site",
      "expected_dtz",
      "scrape_date",
      "expected",
      "doc_types",
      "target_dir",
      "end_date",
      "assets",
      "config",
      "start_date"
    ],
    "functions": [
      "test_scrape_download_true",
      "test_scrape_download_filter_size",
      "test_multiyear_scrape",
      "test_scrape_download_filter_type",
      "test_scrape_download_default",
      "test_scrape_current_day_by_default",
      "test_scrape_defaults",
      "test_scrape_no_meetings_for_date"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/docs/conf.py",
    "variables": [
      "project",
      "pygments_style",
      "master_doc",
      "html_theme",
      "templates_path",
      "extensions",
      "exclude_patterns",
      "copyright",
      "source_suffix",
      "year"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/scripts/run_scraper.py",
    "variables": [
      "asset_collection",
      "site",
      "asset_list",
      "args",
      "parser",
      "scraper",
      "scraper_args"
    ],
    "functions": [
      "run_scraper"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/scripts/generate_civicplus_sites.py",
    "variables": [
      "meeting_bodies",
      "years_list",
      "name",
      "raw_list",
      "country",
      "MUNICIPALITY",
      "num_years",
      "format_url",
      "meeting_bodies_list",
      "soup",
      "response",
      "years",
      "state",
      "dict_writer",
      "name_list",
      "CANADA",
      "year",
      "clean_dict",
      "govt_level",
      "parser",
      "site_civicplus",
      "whitelisted",
      "smallest",
      "clean_list",
      "link",
      "USA",
      "args",
      "raw_url",
      "largest"
    ],
    "functions": [
      "generate_site_csv"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/runner.py",
    "variables": [
      "asset_collection",
      "target_module",
      "class_name",
      "site",
      "mod",
      "kwargs",
      "logger",
      "SiteClass",
      "metadata_file",
      "download_counter",
      "cache_obj",
      "_collection"
    ],
    "functions": [
      "scrape",
      "_get_site_class",
      "__init__",
      "_get_site_class_name"
    ],
    "classes": [
      "Runner",
      "ScraperError"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/__init__.py",
    "variables": [
      "__version__"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/cli.py",
    "variables": [
      "runner",
      "DEFAULT_USER_HOME",
      "TODAY",
      "kwargs",
      "console",
      "reader",
      "cache_path"
    ],
    "functions": [
      "scrape",
      "cli"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/utils.py",
    "variables": [],
    "functions": [
      "today_local_str",
      "default_user_home",
      "parse_date",
      "mb_to_bytes",
      "dtz_to_dt"
    ],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/civic_plus/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/civic_plus/parser.py",
    "variables": [
      "header_node",
      "asset_type",
      "links",
      "divs",
      "metadata",
      "meeting_title",
      "meeting_id",
      "cmte_name",
      "msg",
      "bookkeeping"
    ],
    "functions": [
      "_get_divs_by_board",
      "parse",
      "_committee_name",
      "_previous_version_link",
      "file_links_with_no_title",
      "_mtg_id",
      "_mtg_title",
      "_mtg_date",
      "_extract_asset_data",
      "_asset_type",
      "__init__"
    ],
    "classes": [
      "ParsingError",
      "Parser"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/civic_plus/site.py",
    "variables": [
      "search_url",
      "url",
      "end",
      "base_url",
      "today",
      "start",
      "response",
      "params",
      "file_metadata",
      "logger",
      "asset_dir",
      "asset_args",
      "max_bytes",
      "headers",
      "assets",
      "cache_path"
    ],
    "functions": [
      "_search",
      "_get_asset_metadata",
      "_mb_to_bytes",
      "scrape",
      "place",
      "_state_or_province",
      "_build_asset_collection",
      "_skippable",
      "_convert_date",
      "_mk_url",
      "_mk_mtg_id",
      "__init__",
      "_cache_page_name"
    ],
    "classes": [
      "Site"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/granicus/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/granicus/site.py",
    "variables": [
      "meeting_datetime",
      "ac",
      "parsed_rss",
      "meeting_id",
      "response",
      "dir_str",
      "asset_dir",
      "query_dict",
      "session",
      "assets",
      "asset_name",
      "meeting_url",
      "e"
    ],
    "functions": [
      "create_asset",
      "scrape",
      "__init__"
    ],
    "classes": [
      "GranicusSite"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/civic_clerk/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/civic_clerk/site.py",
    "variables": [
      "ac",
      "callback_id",
      "tree",
      "match",
      "dir_str",
      "event_frame_url",
      "str_datetime",
      "data",
      "assets_list",
      "callback_state",
      "table_tree",
      "committee_name",
      "no_agenda_str",
      "data_str",
      "event_response",
      "response",
      "link_tr_text",
      "previous_item_keys",
      "item_keys",
      "meeting_datetime",
      "frame_tree",
      "event_frame",
      "pattern",
      "event_url",
      "assets",
      "frame_response",
      "link",
      "asset_name",
      "e",
      "href",
      "asset_url",
      "asset_type",
      "events",
      "asset_dir",
      "agenda_items",
      "payload",
      "event_tree",
      "frame_has_table"
    ],
    "functions": [
      "_future_events",
      "_past_events",
      "scrape",
      "events",
      "create_asset",
      "get_agenda_items",
      "_paginate",
      "__init__",
      "get_meeting_id"
    ],
    "classes": [
      "CivicClerkSite"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/primegov/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/primegov/site.py",
    "variables": [
      "meeting_datetime",
      "url",
      "ac",
      "meeting_id",
      "match",
      "pattern",
      "response",
      "end_date",
      "e",
      "start_date"
    ],
    "functions": [
      "_get_agenda_url",
      "_get_meeting_id",
      "scrape",
      "create_asset",
      "__init__"
    ],
    "classes": [
      "PrimeGovSite"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/legistar/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/platforms/legistar/site.py",
    "error": "invalid syntax (<unknown>, line 159)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/base/asset.py",
    "variables": [
      "writer",
      "file_name",
      "response",
      "headers",
      "path",
      "rows",
      "tstamp",
      "full_path",
      "file_extension"
    ],
    "functions": [
      "download",
      "__init__",
      "to_csv",
      "__repr__"
    ],
    "classes": [
      "AssetCollection",
      "Asset"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/base/constants.py",
    "variables": [
      "SUPPORTED_ASSET_TYPES"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/base/cache.py",
    "variables": [
      "out"
    ],
    "functions": [
      "metadata_files_path",
      "_path_from_env",
      "write",
      "artifacts_path",
      "__init__",
      "_path_default",
      "assets_path"
    ],
    "classes": [
      "Cache"
    ]
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/base/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/etl/legacy-civic-scraper/civic_scraper/base/site.py",
    "variables": [],
    "functions": [
      "scrape",
      "__init__"
    ],
    "classes": [
      "Site"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/frequencymodel.py",
    "variables": [
      "it",
      "counts",
      "r_punctuation",
      "r",
      "STOPWORDS",
      "r_whitespace",
      "total_count",
      "__slots__",
      "text",
      "sub_iterators"
    ],
    "functions": [
      "most_common",
      "__setitem__",
      "add",
      "__missing__",
      "statements_token_iterator",
      "item_count",
      "ngram_iterator",
      "winning_attribute",
      "diff",
      "from_statement_qs",
      "__init__",
      "text_token_iterator"
    ],
    "classes": [
      "FrequencyDiffResult",
      "WordAndAttributeCounter",
      "FrequencyModel",
      "WordAttributeCount",
      "WordCounter"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/models.py",
    "variables": [
      "verbose_name_plural",
      "d",
      "analysis",
      "objects",
      "key",
      "lang",
      "updated",
      "unique_together",
      "cache_key",
      "data",
      "js",
      "probability_data_json",
      "onegrams",
      "expires"
    ],
    "functions": [
      "create_from_statements",
      "probability_data",
      "get_wordcloud_js",
      "expired",
      "top_word",
      "__str__",
      "get_or_create_from_statements"
    ],
    "classes": [
      "TextAnalysis",
      "TextAnalysisManager",
      "Meta"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/admin.py",
    "variables": [
      "search_fields",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "TextAnalysisOptions"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/corpora.py",
    "variables": [
      "qs",
      "corpus_name",
      "document_ids",
      "bg",
      "since"
    ],
    "functions": [
      "generate_for_debates",
      "_get_background_model_path",
      "load_background_model",
      "generate_background_models",
      "generate_for_old_debates",
      "generate_all",
      "generate_for_committees"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/analyze.py",
    "variables": [
      "seen",
      "words",
      "model",
      "results",
      "top",
      "bg",
      "ngram_lengths",
      "count"
    ],
    "functions": [
      "analyze_statements"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/views.py",
    "variables": [
      "expiry_days",
      "analysis",
      "corpus_name"
    ],
    "functions": [
      "get_key",
      "get",
      "get_corpus_name",
      "get_analysis",
      "get_qs"
    ],
    "classes": [
      "TextAnalysisView"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/text-analysis/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/models.py",
    "variables": [
      "resp",
      "POL_PERSON_ID_LOOKUP_URL",
      "members",
      "PROVINCE_LOOKUP",
      "sessnum",
      "slug",
      "headshot_thumbnail",
      "mpid_info",
      "statements",
      "start_date",
      "GENDER_CHOICES",
      "polname",
      "url_match",
      "profile_url",
      "name_family",
      "edid",
      "riding",
      "POL_AFFIL_ID_LOOKUP_URL",
      "short_name_fr",
      "lastname",
      "xml_doc",
      "source",
      "match",
      "schema",
      "short_name_en",
      "parliamentnum",
      "parl_mp_id",
      "sessions",
      "FIX_RIDING",
      "timestamp",
      "name_fr",
      "member",
      "xml_url",
      "end",
      "ordering",
      "short_name",
      "name_given",
      "poss",
      "public",
      "name_en",
      "objects",
      "xml_resp",
      "end_date",
      "verbose_name_plural",
      "date",
      "id",
      "POLITICIAN_INFO_SCHEMAS",
      "qs",
      "provcode",
      "start",
      "polriding",
      "created",
      "value",
      "active",
      "file",
      "abstract",
      "name",
      "PROVINCE_CHOICES",
      "info",
      "headshot",
      "d",
      "gender",
      "postcode",
      "bio",
      "logger",
      "parlid",
      "profile_link",
      "sr_objects",
      "pol",
      "province",
      "pk",
      "current",
      "party",
      "pols",
      "title",
      "result",
      "politician",
      "pil_img",
      "root",
      "normname",
      "text"
    ],
    "functions": [
      "download_headshot",
      "dashed_name",
      "parlpage",
      "get_contact_url",
      "get_by_parl_mp_id",
      "info",
      "has_votes",
      "get_by_pol",
      "get_text_analysis_qs",
      "save",
      "save_headshot_thumbnail",
      "set_info_multivalued",
      "set_info",
      "__str__",
      "province_from_edid",
      "elected_but_not_current",
      "get_by_parl_affil_id",
      "_get_pol_from_ourcommons_profile_url",
      "to_api_dict",
      "search_dict",
      "alternate_names",
      "filter_by_name",
      "search_get_qs",
      "never_elected",
      "current",
      "on_date",
      "identifier",
      "search_should_index",
      "with_bills",
      "get_by_slug_or_id",
      "elected",
      "get_absolute_url",
      "html",
      "former",
      "int_value",
      "add_alternate_name",
      "current_member",
      "del_info",
      "get_queryset",
      "latest_member",
      "get_from_string",
      "info_multivalued",
      "add_slug",
      "get_by_name",
      "latest_candidate",
      "get_by_date"
    ],
    "classes": [
      "Riding",
      "RidingManager",
      "ElectedMember",
      "RidingPostcodeCache",
      "SessionManager",
      "Party",
      "Session",
      "Politician",
      "ElectedMemberManager",
      "PartyAlternateName",
      "PoliticianInfo",
      "Person",
      "Meta",
      "PartyManager",
      "PoliticianManager",
      "SiteNews",
      "PoliticianInfoManager"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/sitemap.py",
    "variables": [
      "sitemaps"
    ],
    "functions": [
      "lastmod",
      "items"
    ],
    "classes": [
      "VoteQuestionSitemap",
      "PoliticianSitemap",
      "HansardSitemap",
      "BillSitemap"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/forms.py",
    "variables": [
      "required_css_class"
    ],
    "functions": [
      "__init__",
      "_html_output"
    ],
    "classes": [
      "Form"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/api.py",
    "error": "invalid syntax (<unknown>, line 117)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/admin.py",
    "variables": [
      "inlines",
      "model",
      "list_display",
      "search_fields",
      "list_filter"
    ],
    "functions": [
      "formfield_for_foreignkey"
    ],
    "classes": [
      "ElectedMemberOptions",
      "SessionOptions",
      "PoliticianOptions",
      "RidingPostcodeCacheOptions",
      "PoliticianInfoInline",
      "RidingOptions",
      "SiteNewsOptions",
      "PartyOptions",
      "PoliticianInfoOptions"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/utils.py",
    "variables": [
      "options",
      "message",
      "longurl",
      "description",
      "ALPHABET_REVERSE",
      "shorturl",
      "fieldname",
      "SIGN_CHARACTER",
      "command",
      "ALPHABET",
      "ip",
      "logger",
      "BASE",
      "shorten_resp",
      "cacheattr",
      "n",
      "shorten_resp_raw",
      "feed_instance",
      "PLUG",
      "s",
      "storage"
    ],
    "functions": [
      "feed_wrapper",
      "memoize_property",
      "settings_context",
      "get_client_ip",
      "call_feed",
      "int64_decode",
      "int64_encode",
      "is_ajax",
      "get_twitter_share_url",
      "wrapped",
      "get_queryset",
      "redir_view",
      "language_property"
    ],
    "classes": [
      "AutoprefixerFilter",
      "ListingCompressorFinder",
      "ActiveManager"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/maint.py",
    "variables": [
      "line",
      "host",
      "stats",
      "m",
      "value"
    ],
    "functions": [
      "memcached_status"
    ],
    "classes": [
      "Stats"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/parsetools.py",
    "error": "invalid syntax (<unknown>, line 77)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/errors.py",
    "variables": [
      "t"
    ],
    "functions": [
      "server_error"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/views.py",
    "variables": [
      "title",
      "resp",
      "c",
      "message",
      "description",
      "t",
      "latest_hansard",
      "recently_debated_bills",
      "link"
    ],
    "functions": [
      "disable_on_readonly_db",
      "items",
      "closed",
      "item_title",
      "item_guid",
      "db_readonly",
      "flatpage_response",
      "item_link",
      "home",
      "item_description"
    ],
    "classes": [
      "SiteNewsFeed"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/datautil.py",
    "variables": [
      "words",
      "name",
      "alt",
      "match",
      "twit",
      "bads",
      "img",
      "bucketidx",
      "tokens",
      "em",
      "current_members",
      "soup",
      "states",
      "bucketcount",
      "surname",
      "slug",
      "gender",
      "response",
      "yn",
      "index",
      "goodid",
      "x",
      "wiki_id",
      "query",
      "pi_seen",
      "content",
      "val",
      "sessions",
      "ids",
      "pol",
      "cur",
      "prev_members",
      "fail",
      "province",
      "bad",
      "member",
      "reader",
      "queryset",
      "pols",
      "test",
      "qs",
      "result",
      "dupelist",
      "good",
      "site",
      "r_splitter",
      "fields",
      "badid",
      "candidate",
      "events",
      "freebase_id",
      "nforig",
      "imgurl",
      "session"
    ],
    "functions": [
      "fix_mac",
      "spark_index",
      "_printout",
      "export_words",
      "twitter_from_csv",
      "twitter_to_list",
      "wikipedia_from_freebase",
      "merge_pols",
      "pol_urls_to_ids",
      "load_pol_pic",
      "replace_links",
      "slugs_for_pols",
      "populate_members_by",
      "print_changed_mps",
      "mac_replace",
      "delete_invalid_pol_pics",
      "add_missing_genders",
      "export_statements",
      "delete_invalid_pol_urls",
      "merge_polnames",
      "populate_parlid",
      "merge_by_party",
      "check_for_feeds",
      "export_tokenized_words",
      "corpus_for_pol",
      "_merge_pols",
      "populate_members",
      "copy_members",
      "freebase_id_from_parl_id"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/templatetags/ours.py",
    "variables": [
      "register",
      "hours",
      "today",
      "days_since",
      "value",
      "text"
    ],
    "functions": [
      "list_prefix",
      "mrms",
      "time_since",
      "english_list",
      "month_num",
      "roundfilter",
      "friendly_minutes",
      "himher",
      "strip_act",
      "markdown_links",
      "expand_province",
      "heshe",
      "list_filter"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/templatetags/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/templatetags/markup.py",
    "variables": [
      "register"
    ],
    "functions": [
      "markdown"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/templatetags/pagination.py",
    "variables": [
      "page",
      "ADJACENT_PAGES",
      "pages_outside_leading_range",
      "TRAILING_PAGE_RANGE",
      "NUM_PAGES_OUTSIDE_RANGE",
      "ctx",
      "get_params",
      "pages_outside_trailing_range",
      "LEADING_PAGE_RANGE",
      "in_leading_range",
      "in_trailing_range",
      "params",
      "request",
      "register",
      "page_range",
      "page_obj",
      "pages",
      "TRAILING_PAGE_RANGE_DISPLAYED",
      "LEADING_PAGE_RANGE_DISPLAYED",
      "paginator"
    ],
    "functions": [
      "_get_pagination_context",
      "foundation_paginator"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/templatetags/json.py",
    "variables": [
      "register"
    ],
    "functions": [
      "jsonfilter"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0009_remove_politician_dob.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0005_politician_headshot_thumbnail.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0004_polinfo_created_default.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0008_delete_internalxref.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0006_add_party_names_and_postcode_cache.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0007_migrate_party_names.py",
    "variables": [
      "dependencies",
      "Party",
      "operations",
      "InternalXref",
      "PartyAlternateName"
    ],
    "functions": [
      "move_party_names"
    ],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0003_polinfo_created.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/migrations/0002_some_fr_fields.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/management/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/management/commands/job.py",
    "variables": [
      "help",
      "args",
      "tb"
    ],
    "functions": [
      "handle",
      "add_arguments"
    ],
    "classes": [
      "Command"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/core/management/commands/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/config/default_settings.py",
    "variables": [
      "MIDDLEWARE",
      "USE_L10N",
      "COMPRESS_FILTERS",
      "SECURE_CROSS_ORIGIN_OPENER_POLICY",
      "MANAGERS",
      "TIME_ZONE",
      "MEDIA_ROOT",
      "COMPRESS_PRECOMPILERS",
      "USE_I18N",
      "USE_TZ",
      "SESSION_COOKIE_HTTPONLY",
      "PARLIAMENT_GENERATE_TEXT_ANALYSIS",
      "SESSION_COOKIE_SECURE",
      "INSTALLED_APPS",
      "STATIC_URL",
      "STATIC_ROOT",
      "PARLIAMENT_DB_READONLY",
      "PROJ_ROOT",
      "PARLIAMENT_LANGUAGE_MODEL_PATH",
      "APPEND_SLASH",
      "DEFAULT_AUTO_FIELD",
      "COMPRESS_OFFLINE",
      "PARLIAMENT_ROBOTS_TXT",
      "SESSION_COOKIE_AGE",
      "WSGI_APPLICATION",
      "ADMINS",
      "DEBUG",
      "COMPRESS_ROOT",
      "LANGUAGE_CODE",
      "LOCALE_PATHS",
      "STATICFILES_FINDERS",
      "PARLIAMENT_API_HOST",
      "COMPRESS_ENABLED",
      "MEDIA_URL",
      "SECURE_REFERRER_POLICY",
      "CACHE_MIDDLEWARE_KEY_PREFIX",
      "SITE_ID",
      "STATICFILES_DIRS",
      "TEMPLATES",
      "ROOT_URLCONF",
      "LOGGING"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/config/jobs.py",
    "variables": [
      "logger",
      "sess",
      "mps",
      "hansard"
    ],
    "functions": [
      "corpus_for_committees",
      "bills",
      "prune_activities",
      "reimport",
      "votes",
      "hansards_load",
      "hansards_parse",
      "summaries",
      "committees",
      "corpus_for_debates",
      "committee_evidence",
      "hansards",
      "committees_full"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/config/urls.py",
    "variables": [
      "urlpatterns",
      "handler500"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/activity/models.py",
    "variables": [
      "date",
      "active",
      "ordering",
      "guid",
      "politician",
      "objects",
      "public",
      "variety",
      "verbose_name_plural",
      "payload"
    ],
    "functions": [
      "save",
      "payload_wrapped"
    ],
    "classes": [
      "Meta",
      "Activity"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/activity/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/activity/admin.py",
    "variables": [
      "list_filter",
      "search_fields",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "ActivityOptions"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/activity/utils.py",
    "variables": [
      "c",
      "t",
      "today",
      "guid",
      "ACTIVITY_MAX",
      "activity_counts",
      "variety"
    ],
    "functions": [
      "save_activity",
      "prune",
      "iter_recent"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/activity/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/activity/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/models.py",
    "variables": [
      "study",
      "evidence",
      "presented_date",
      "name",
      "committee",
      "domain",
      "government_response",
      "short_name_en",
      "webcast",
      "activities",
      "d",
      "slug",
      "number",
      "notice",
      "display",
      "name_en",
      "objects",
      "acro",
      "activity",
      "joint",
      "in_camera",
      "verbose_name_plural",
      "parent",
      "adopted_date",
      "sessions",
      "date",
      "start_time",
      "minutes",
      "name_fr",
      "televised",
      "acronym",
      "unique_together",
      "source_id",
      "short_name_fr",
      "ordering",
      "travel",
      "short_name",
      "session",
      "end_time"
    ],
    "functions": [
      "get_by_acronym",
      "latest_session",
      "notice_url",
      "get_acronym",
      "evidence_url",
      "save",
      "future",
      "datetime",
      "webcast_url",
      "__str__",
      "to_api_dict",
      "get_source_url",
      "get_ourcommons_doc_url",
      "title",
      "activities_list",
      "type",
      "minutes_url",
      "activities_summary",
      "get_absolute_url"
    ],
    "classes": [
      "CommitteeInSession",
      "CommitteeMeeting",
      "CommitteeActivity",
      "CommitteeReport",
      "CommitteeActivityInSession",
      "Meta",
      "CommitteeManager",
      "Committee"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/admin.py",
    "variables": [
      "raw_id_fields",
      "list_filter",
      "search_fields",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "CommitteeAdmin",
      "ActivityAdmin",
      "CommitteeInSessionAdmin",
      "ReportAdmin",
      "MeetingAdmin"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/views.py",
    "variables": [
      "recent_studies",
      "filters",
      "cmte",
      "statement",
      "t",
      "committee",
      "resource_name",
      "meeting_years",
      "committee_list",
      "evidence_analysis",
      "recent_meetings",
      "studies",
      "activity",
      "doc",
      "meetings",
      "year",
      "analysis",
      "word",
      "committee_meeting_statement",
      "m",
      "expiry_days",
      "title",
      "qs",
      "c",
      "document",
      "committee_meeting",
      "newest_year",
      "oldest_year",
      "committees",
      "meeting",
      "session"
    ],
    "functions": [
      "committee_activity",
      "evidence_permalink",
      "get_object",
      "get_corpus_name",
      "committee_id_redirect",
      "get_analysis",
      "get_html",
      "committee_year_archive",
      "get_related_resources",
      "evidence_ourcommons_redirect",
      "_get_meeting",
      "get_qs"
    ],
    "classes": [
      "CommitteeView",
      "EvidenceAnalysisView",
      "CommitteeMeetingStatementView",
      "CommitteeMeetingListView",
      "CommitteeListView",
      "CommitteeMeetingView",
      "CommitteeAnalysisView"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/migrations/0002_committee_joint.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/committees/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/utils/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/utils/views.py",
    "variables": [
      "allow_jsonp",
      "resp",
      "wrap",
      "result",
      "callback",
      "indent_response"
    ],
    "functions": [
      "__init__",
      "redirect",
      "dispatch",
      "adaptive_redirect"
    ],
    "classes": [
      "JSONView",
      "AjaxRedirectResponse"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/election.py",
    "variables": [
      "PROVINCES_NORMALIZED",
      "validated_results",
      "party_name",
      "eldate",
      "line",
      "first_name",
      "riding",
      "edid",
      "votepercent",
      "party",
      "last_name",
      "result_type",
      "lines",
      "votetotal",
      "preliminary_results"
    ],
    "functions": [
      "import_ec_results",
      "load_byelection"
    ],
    "classes": [
      "PreliminaryResultsError"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/mps.py",
    "variables": [
      "riding_data",
      "resp",
      "name",
      "phone_and_fax",
      "pols_seen",
      "voice",
      "phone_and_fax_el",
      "data",
      "base_url",
      "OURCOMMONS_MPS_URL",
      "websites",
      "offices",
      "d",
      "warnings",
      "logger",
      "photo",
      "prov",
      "pol",
      "contact_urls",
      "missing_pols",
      "mp_page",
      "fax_el",
      "mp_data",
      "riding_list",
      "photo_response",
      "name_fr",
      "phone",
      "o",
      "riding",
      "edid",
      "errors",
      "phone_el",
      "screen_name",
      "url",
      "IMAGE_PLACEHOLDER_SHA1",
      "constituency_offices",
      "formatted",
      "emails",
      "riding_urls",
      "rows",
      "fax",
      "root",
      "value",
      "session",
      "address"
    ],
    "functions": [
      "_import_mps",
      "update_ridings_from_represent",
      "_scrape_ourcommons_row",
      "_update",
      "update_mps_from_represent",
      "is_photo_real",
      "update_mps_from_ourcommons",
      "scrape_mps_from_ourcommons",
      "_scrape_url"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/parlvotes.py",
    "variables": [
      "resp",
      "votelisturl_fr",
      "votequestion",
      "votelisturl_en",
      "detailroot",
      "root_fr",
      "votenumber",
      "billnumber",
      "VOTELIST_URL",
      "ballot",
      "logger",
      "decision",
      "detailurl",
      "date",
      "pol",
      "member",
      "VOTEDETAIL_URL",
      "votelist",
      "root",
      "session"
    ],
    "functions": [
      "import_votes"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/legisinfo.py",
    "variables": [
      "resp",
      "v",
      "LEGISINFO_JSON_LIST_URL",
      "bill",
      "bill_list",
      "rj",
      "billnumber",
      "detail_url",
      "logger",
      "similar_bill",
      "billstages_json",
      "LEGISINFO_DETAIL_URL",
      "url",
      "pol_id",
      "jd",
      "bd",
      "status_name",
      "status_code",
      "introduced",
      "value",
      "session"
    ],
    "functions": [
      "get",
      "_update",
      "detailed_json_url",
      "get_detailed",
      "_parse_date",
      "__repr__",
      "_import_bill",
      "is_detailed",
      "import_bill_by_id",
      "import_bills",
      "__getitem__",
      "__init__",
      "get_bill_list",
      "__str__"
    ],
    "classes": [
      "BillData",
      "OldBillException"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/alpheus.py",
    "variables": [
      "ampm",
      "handle_Responder",
      "p_attrs",
      "description",
      "_r_honorific",
      "handle_ThroneSpeechPara",
      "raw_stage_name",
      "match",
      "context_match",
      "lang",
      "PASSTHROUGH_TAGS",
      "hour",
      "TAG_CLOSE",
      "mytext",
      "txt",
      "attributes",
      "_r_bill_stage",
      "handler",
      "number",
      "metadata_rows",
      "NO_DESCEND",
      "el_handler",
      "logger",
      "procedural",
      "BILL_STAGES",
      "nxt",
      "__all__",
      "person_attribution",
      "_r_person_label",
      "content",
      "_r_housemet",
      "TAG_OPEN",
      "num",
      "stage_code",
      "_r_whitespace",
      "stage_match",
      "bill_number",
      "sub",
      "throne",
      "BASE_HTML",
      "IGNORE_TAGS",
      "qid",
      "_r_parens",
      "handle_Questioner",
      "attrs",
      "s",
      "stripped_description",
      "url",
      "document",
      "html",
      "title",
      "hoc_id",
      "EXCLUDE_TAGS",
      "affil",
      "_r_indeterminate",
      "minute",
      "tail",
      "hansard_tag"
    ],
    "functions": [
      "_letters_only",
      "_tame_whitespace",
      "_new_person",
      "get_final_statements",
      "close_statement",
      "handle_Division",
      "_get_meta",
      "__getattr__",
      "_is_person",
      "clean_up_content",
      "_get_housemet_time",
      "handle_ThroneSpeech",
      "_only_open",
      "handle_Intervention",
      "handle_Timestamp",
      "_initialize_statement",
      "_n2s",
      "_explore_element",
      "handle_Document",
      "escape",
      "handle_B",
      "handle_WrittenQuestionResponse",
      "handle_QuestionContent",
      "handle_SubjectOfBusinessQualifier",
      "handle_ProceduralText",
      "as_html",
      "parse_tree",
      "setval",
      "_add_text",
      "handle_ParaText",
      "_build_tag",
      "handle_SubjectOfBusiness",
      "handle_Affiliation",
      "_strip_person_name",
      "handle_SubjectOfBusinessTitle",
      "_add_tag_text",
      "handle_ResponseContent",
      "__init__",
      "handle_OrderOfBusinessTitle",
      "_smart_title",
      "inner",
      "handle_Verse",
      "_following_char",
      "handle_FloorLanguage",
      "handle_Line",
      "_time_to_datetime",
      "_add_code",
      "_text_content",
      "handle_PersonSpeaking",
      "_default_handler",
      "handle_OrderOfBusiness",
      "parse_bytes"
    ],
    "classes": [
      "ParseHandler",
      "Statement",
      "AlpheusError",
      "AlpheusDocument"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/parl_cmte.py",
    "variables": [
      "study",
      "resp",
      "notice_link",
      "activity_id",
      "cmte",
      "name",
      "xml_fr",
      "match",
      "COMMITTEE_MEETINGS_URL",
      "sub_names_fr",
      "xml_en",
      "mtg",
      "hour",
      "found",
      "root_fr",
      "number",
      "meeting",
      "logger",
      "activity",
      "cancelled",
      "com",
      "minutes_link",
      "date_string",
      "timestring",
      "evidence_viewer_url",
      "xml_button",
      "name_fr",
      "acronym",
      "source_id",
      "xml_url_fr",
      "url",
      "COMMITTEE_LIST_URL",
      "xml_url_en",
      "sub_names",
      "evidence_link",
      "root",
      "session"
    ],
    "functions": [
      "_12hr",
      "get_xml_url_from_documentviewer_url",
      "_parse_date",
      "import_committee_documents",
      "make_committee",
      "import_committee_meetings",
      "_download_evidence",
      "import_committee_list",
      "get_activity_by_url",
      "_docid_from_url"
    ],
    "classes": [
      "NoXMLError"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/parl_document.py",
    "variables": [
      "resp",
      "changed_slug_names",
      "sittings",
      "new_p_ids",
      "failures",
      "max_sitting",
      "_r_paragraphs",
      "xml_fr",
      "match",
      "was_multilingual",
      "fr_paragraphs",
      "new_slugs",
      "bill",
      "url_en",
      "xml_en",
      "docs",
      "pid",
      "slugmap",
      "INTERVALS",
      "pids_en",
      "logger",
      "new_xml",
      "statements",
      "old_statements",
      "doc",
      "vote",
      "doc_en",
      "pdoc_en",
      "HANSARD_URL",
      "initial_slug_substitutions",
      "paratext_with_id",
      "old_xml",
      "pol",
      "pids_fr",
      "old_slugs",
      "params",
      "xml_urls",
      "xml_bytes",
      "fr_statements",
      "url_fr",
      "source_id",
      "new_slug_names",
      "changed",
      "paratext",
      "attrs",
      "bills_debated",
      "s",
      "missing_id_count",
      "hocid",
      "doc_fr",
      "url",
      "result",
      "title",
      "reimport",
      "today",
      "target_dates",
      "fr_data",
      "diff",
      "_r_paragraph_id",
      "pdoc_fr",
      "session"
    ],
    "functions": [
      "reimport_documents",
      "_assign_slugs_on_reimport",
      "reimport_recent_documents",
      "import_document",
      "format_xml",
      "force_redownload",
      "_incorporate_french_document",
      "_substitute_french_content",
      "_get_paragraphs_and_ids",
      "_build_tag",
      "_process_related_link",
      "check_for_xml_updates",
      "_process_related_links",
      "_get_paragraph_id",
      "fetch_debate_for_sitting",
      "_test_has_paragraph_ids",
      "_remove_whitespace",
      "_map_changed_slugs",
      "fetch_latest_debates",
      "_get"
    ],
    "classes": [
      "NoDocumentFound",
      "ReimportException"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/__init__.py",
    "variables": [],
    "functions": [],
    "classes": [
      "CannotScrapeException"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/billtext.py",
    "variables": [
      "bill_el",
      "resp",
      "bill_or_url",
      "html_root",
      "resp2",
      "summary",
      "xml_button",
      "texts",
      "xml_url",
      "body"
    ],
    "functions": [
      "get_bill_summary",
      "_descend",
      "get_plain_bill_text",
      "get_bill_text_xml"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/tests/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/tests/test_alpheus.py",
    "variables": [
      "output_html",
      "html",
      "examples_dir",
      "example_html_path",
      "doc",
      "html_path"
    ],
    "functions": [
      "overwrite_all_example_html",
      "write_example_html",
      "alpheus_generate_html",
      "test_examples"
    ],
    "classes": [
      "AlpheusIntegrationTests"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/hans_old/old.py",
    "error": "invalid syntax (<unknown>, line 144)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/hans_old/current.py",
    "error": "invalid syntax. Perhaps you forgot a comma? (<unknown>, line 47)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/hans_old/old-init.py",
    "error": "invalid syntax. Perhaps you forgot a comma? (<unknown>, line 59)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/imports/hans_old/common.py",
    "error": "'(' was never closed (<unknown>, line 207)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/haiku/models.py",
    "variables": [
      "line1",
      "a",
      "attribution",
      "line2",
      "db_table",
      "line3",
      "attribution_url",
      "worthy"
    ],
    "functions": [
      "validate_line",
      "validate_last_line",
      "validate_first_line",
      "__str__",
      "set_statement"
    ],
    "classes": [
      "Meta",
      "Haiku"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/haiku/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/haiku/admin.py",
    "variables": [
      "list_editable",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "HaikuAdmin"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/haiku/utils.py",
    "variables": [
      "h"
    ],
    "functions": [
      "gen_haiku"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/haiku/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/haiku/views.py",
    "variables": [
      "t",
      "haikus",
      "c"
    ],
    "functions": [
      "haiku"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/models.py",
    "variables": [
      "content_type",
      "timestamp",
      "object_id",
      "content_object",
      "action",
      "identifier"
    ],
    "functions": [
      "__str__"
    ],
    "classes": [
      "IndexingTask"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/index.py",
    "variables": [
      "it",
      "d",
      "prepared_objs",
      "_search_model_registry",
      "batches"
    ],
    "functions": [
      "_enqueue",
      "index_qs",
      "register_search_model",
      "index_all",
      "get_identifier",
      "get_content_type",
      "get_search_dict",
      "index_model",
      "delete_handler",
      "index_objects",
      "save_handler"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/solr.py",
    "variables": [
      "filter_value",
      "match",
      "p",
      "counts",
      "filter_types",
      "end_date",
      "val",
      "start_date",
      "DATE_FILTER_RE",
      "datefacets",
      "searchparams",
      "r_hl",
      "filter_name",
      "g",
      "solr_filters",
      "ALLOWABLE_FILTERS",
      "filter_tag",
      "ALLOWABLE_OPTIONS",
      "solr_query"
    ],
    "functions": [
      "hits",
      "validated_user_params",
      "date_counts",
      "documents",
      "facet_fields",
      "get_pysolr_instance",
      "get_solr_query",
      "discontinuity",
      "solr_results",
      "autohighlight",
      "__init__"
    ],
    "classes": [
      "SearchQuery"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/admin.py",
    "variables": [
      "list_filter",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "IndexingTaskAdmin"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/utils.py",
    "variables": [
      "q",
      "_FakePaginator",
      "ALLOWABLE_FILTERS"
    ],
    "functions": [
      "has_previous",
      "previous_page_number",
      "normalized_query",
      "has_next",
      "extract_filter",
      "next_page_number",
      "__init__",
      "paginator"
    ],
    "classes": [
      "SearchPaginator",
      "BaseSearchQuery"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/views.py",
    "variables": [
      "resp",
      "t",
      "r_postcode",
      "match",
      "ctx",
      "postcode",
      "cached",
      "logger",
      "startfrom",
      "riding_name",
      "r_ec_edid",
      "query",
      "content",
      "pol",
      "query_obj",
      "riding",
      "edid",
      "redirect_url",
      "member",
      "PER_PAGE",
      "EC_POSTCODE_URL",
      "pagenum",
      "url",
      "ec_url"
    ],
    "functions": [
      "item_pubdate",
      "postcode_to_edid_ec",
      "title",
      "description",
      "search",
      "get_object",
      "items",
      "item_title",
      "postcode_to_edid_represent",
      "postcode_to_riding_ourcommons",
      "item_description",
      "item_link",
      "__init__",
      "try_politician_first",
      "link",
      "try_postcode_first",
      "postcode_to_riding"
    ],
    "classes": [
      "AmbiguousPostcodeException",
      "SearchFeed"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/management/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/management/commands/consume_indexing_queue.py",
    "variables": [
      "update_tasks",
      "help",
      "delete_tasks",
      "update_objs",
      "delete_ids",
      "logger",
      "solr"
    ],
    "functions": [
      "handle"
    ],
    "classes": [
      "Command"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/search/management/commands/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/models.py",
    "variables": [
      "active",
      "user",
      "items",
      "result_ids",
      "t",
      "match",
      "ctx",
      "last_sent",
      "new",
      "ids_seen",
      "objects",
      "logger",
      "rendered",
      "query",
      "item_id",
      "past",
      "topic",
      "timestamp",
      "query_obj",
      "last_found",
      "unique_together",
      "key",
      "msg",
      "ordering",
      "normalized_query",
      "today",
      "subj",
      "topics",
      "created",
      "text",
      "last_checked"
    ],
    "functions": [
      "politician_hansard_alert",
      "save",
      "get_new_items",
      "initialize_if_necessary",
      "send_email",
      "render_message",
      "get_subject_line",
      "_send",
      "person_name",
      "get_search_query",
      "get_unsubscribe_url",
      "get_or_create_by_query",
      "__str__"
    ],
    "classes": [
      "TopicManager",
      "SeenItem",
      "Meta",
      "SubscriptionManager",
      "Topic",
      "Subscription"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/webhook_urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/admin.py",
    "variables": [
      "ordering",
      "list_filter",
      "search_fields",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "SubscriptionAdmin",
      "TopicAdmin"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/utils.py",
    "variables": [
      "qs",
      "c",
      "new_politician",
      "t",
      "subj",
      "riding",
      "logger",
      "msg",
      "bad_alerts"
    ],
    "functions": [
      "clear_former_mp_alerts"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/views.py",
    "variables": [
      "resp",
      "user",
      "t",
      "initial",
      "activate_url",
      "modify_alert",
      "form",
      "subscription",
      "ctx",
      "user_email",
      "data",
      "politician_id",
      "signed_key",
      "query",
      "captcha",
      "pol",
      "sns_message_type",
      "ntype",
      "subscriptions",
      "key",
      "subscription_id",
      "email",
      "c",
      "activation_context",
      "postdict",
      "create_alert",
      "recipients",
      "politician",
      "success",
      "action"
    ],
    "functions": [
      "_generate_query_for_politician",
      "bounce_webhook",
      "post",
      "alerts_list",
      "politician_hansard_signup",
      "politician_hansard_subscribe",
      "unsubscribe"
    ],
    "classes": [
      "CreateAlertView",
      "PoliticianAlertForm",
      "ModifyAlertView"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/templatetags/alerts.py",
    "variables": [
      "s",
      "register"
    ],
    "functions": [
      "text_highlight"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/templatetags/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/migrations/0002_delete_politicianalert.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/management/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/management/commands/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/alerts/management/commands/send_email_alerts.py",
    "variables": [
      "help",
      "documents",
      "start_time",
      "subscriptions",
      "topics_sent",
      "logger",
      "by_topic",
      "messages_sent"
    ],
    "functions": [
      "handle"
    ],
    "classes": [
      "Command"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/politicians/googlenews.py",
    "variables": [
      "soup",
      "items",
      "names",
      "item",
      "q",
      "logger",
      "feed",
      "h",
      "title_elements",
      "GOOGLE_NEWS_URL"
    ],
    "functions": [
      "save_politician_news",
      "news_items_for_pol",
      "get_query_string",
      "get_feed"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/politicians/models.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/politicians/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/politicians/tests.py",
    "variables": [
      "fixtures",
      "rona"
    ],
    "functions": [
      "test_pages"
    ],
    "classes": [
      "SmokeTests"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/politicians/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/politicians/twit.py",
    "variables": [
      "date",
      "url",
      "resp",
      "auth",
      "text",
      "guid",
      "OLDEST",
      "logger",
      "new_name",
      "limit_expires",
      "twitter_id",
      "timeline",
      "pols"
    ],
    "functions": [
      "twitter_api_request",
      "save_tweets",
      "get_id_from_screen_name"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/politicians/views.py",
    "error": "invalid syntax (<unknown>, line 153)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/models.py",
    "variables": [
      "urlcache",
      "post_match",
      "politicians",
      "old_slug",
      "EVIDENCE",
      "counts",
      "paragraphs",
      "lang_matches",
      "slug",
      "who_context_fr",
      "statement_type",
      "statements",
      "DEBATE",
      "who_en",
      "most_frequent_word",
      "new_slug",
      "debates",
      "without_statements",
      "path_fr",
      "lang",
      "h2_fr",
      "idx",
      "path_en",
      "first_imported",
      "who_hocid",
      "skip_parsing",
      "skip_redownload",
      "member",
      "last_imported",
      "document",
      "ordering",
      "multilingual",
      "sequence",
      "topics",
      "evidence",
      "public",
      "mentioned_bills",
      "content_fr",
      "time",
      "last_topic",
      "bill_debate_stage",
      "evidence_page_url",
      "objects",
      "procedural",
      "who_context_en",
      "who",
      "content_en",
      "counter",
      "HANSARD_URL",
      "date",
      "r",
      "document_type",
      "h1_en",
      "source_id",
      "qs",
      "who_fr",
      "h2",
      "bill_debated",
      "downloaded",
      "who_context",
      "name",
      "info",
      "mentioned_politicians",
      "d",
      "ids_seen",
      "wordcount",
      "number",
      "h3_fr",
      "qp_seq",
      "logger",
      "xml_source_url",
      "written_question",
      "h3_en",
      "wordcount_en",
      "basepath",
      "wordcloud",
      "speakers",
      "unique_together",
      "h1",
      "h2_en",
      "html",
      "h1_fr",
      "xml_url_en",
      "politician",
      "h3",
      "session"
    ],
    "functions": [
      "committee_slug",
      "_generate_wordcounts",
      "headings",
      "get_xml_path",
      "_topics",
      "topics_with_qp",
      "save",
      "committee_name",
      "html_to_text",
      "text_html",
      "text_plain",
      "content_floor",
      "get_xml_url",
      "set_slugs",
      "save_activity",
      "get_cached_xml",
      "__str__",
      "content_floor_if_necessary",
      "date",
      "get_text_analysis_url",
      "source_url",
      "to_api_dict",
      "topic",
      "search_dict",
      "generate_url",
      "search_get_qs",
      "outside_speaker_summary",
      "mp_speaker_summary",
      "search_should_index",
      "speaker_summary",
      "url",
      "save_xml",
      "heading",
      "name_info",
      "get_queryset",
      "topics",
      "get_absolute_url"
    ],
    "classes": [
      "Document",
      "Statement",
      "EvidenceManager",
      "NoStatementManager",
      "DebateManager",
      "OldSlugMapping",
      "Meta",
      "OldSequenceMapping"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/redirect_views.py",
    "variables": [
      "url",
      "doc",
      "map",
      "sequence"
    ],
    "functions": [
      "hansard_redirect"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/admin.py",
    "variables": [
      "raw_id_fields",
      "list_filter",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "OldSlugMappingOptions",
      "StatementOptions",
      "DocumentOptions"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/utils.py",
    "variables": [
      "last",
      "all",
      "r",
      "st",
      "summary",
      "heading",
      "current",
      "statements",
      "grouped_statements"
    ],
    "functions": [
      "get_hansard_sections_or_summary",
      "display_heading",
      "bill_debate_stage",
      "num_segments",
      "slug",
      "wordcount",
      "__repr__",
      "to_json",
      "combine_key",
      "get_hansard_sections",
      "get_major_speeches",
      "minutes",
      "subheds",
      "should_include",
      "h1",
      "combine_with",
      "all_slugs",
      "__init__",
      "add_statement",
      "get_statements",
      "_save_current",
      "h2",
      "group_by_party",
      "h3",
      "bill_debated"
    ],
    "classes": [
      "HansardSection"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/views.py",
    "error": "invalid syntax (<unknown>, line 34)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/migrations/0005_add_bill_stage.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/migrations/0003_add_old_slug_mapping.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/migrations/0002_xml_source_url.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/debates/migrations/0004_add_reimport_fields.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/models.py",
    "variables": [
      "VOTE_CHOICES",
      "description_en",
      "description",
      "membervotes",
      "cmte",
      "name",
      "VOTE_CHOICES_PARTY",
      "paired_total",
      "votequestion",
      "CHAMBERS",
      "LEGISINFO_BILL_ID_URL",
      "bill",
      "similar_bills",
      "data",
      "sponsor_politician",
      "text_fr",
      "d",
      "dissent",
      "parties",
      "number",
      "text_en",
      "votes",
      "yn",
      "context_statement",
      "name_en",
      "logger",
      "objects",
      "nay_total",
      "disagreement",
      "partyvotes",
      "text_docid",
      "description_fr",
      "status_date",
      "vote",
      "STATUS_STRING_TO_STATUS_CODE",
      "billstages_json",
      "library_summary_available",
      "date",
      "added",
      "yea_total",
      "law",
      "r",
      "short_title_fr",
      "docid",
      "name_fr",
      "latest_debate_date",
      "VOTE_RESULT_CHOICES",
      "privatemember",
      "member",
      "unique_together",
      "acronym",
      "party",
      "sponsor_member",
      "STATUS_CODES",
      "legisinfo_url",
      "url",
      "LEGISINFO_BILL_URL",
      "created",
      "short_title_en",
      "short_title",
      "summary_en",
      "result",
      "ordering",
      "summary",
      "numbers",
      "PARLIAMENT_DOCVIEWER_URL",
      "number_only",
      "politician",
      "status_code",
      "institution",
      "legisinfo_id",
      "introduced",
      "session",
      "text"
    ],
    "functions": [
      "get_committee_meetings",
      "get_library_summary_url",
      "save",
      "get_legisinfo_url",
      "status",
      "save_activity",
      "get_billtext_url",
      "__str__",
      "get_by_legisinfo_id",
      "to_api_dict",
      "get_summary",
      "search_dict",
      "summary_html",
      "search_get_qs",
      "create_temporary_bill",
      "get_debate_at_stage",
      "search_should_index",
      "_get_house_bill_stages_json",
      "get_text_object",
      "label_absent_members",
      "latest_date",
      "dead",
      "save_sponsor_activity",
      "label_party_votes",
      "dormant",
      "recently_active",
      "get_text",
      "get_absolute_url"
    ],
    "classes": [
      "Bill",
      "BillText",
      "BillManager",
      "PartyVote",
      "Meta",
      "VoteQuestion",
      "MemberVote"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/vote_urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/admin.py",
    "variables": [
      "list_display",
      "ordering",
      "search_fields",
      "raw_id_fields",
      "list_filter"
    ],
    "functions": [],
    "classes": [
      "PartyVoteAdmin",
      "BillOptions",
      "BillTextOptions",
      "MemberVoteOptions",
      "VoteQuestionOptions"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/views.py",
    "error": "invalid syntax (<unknown>, line 58)",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0002_auto_20160121_1241.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0004_billtext_summary.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0010_bill_latest_debate_date.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0006_add_billinsession_fields_to_bill.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0003_add_billstage_json.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0009_bill_similar_bills.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0007_populate_moved_fields_on_bill.py",
    "variables": [
      "dependencies",
      "Bill",
      "operations",
      "bis",
      "BillInSession"
    ],
    "functions": [
      "populate_bill_fields"
    ],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0008_remove_billinsession.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/bills/migrations/0005_add_library_summary_bool.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/models.py",
    "variables": [
      "email",
      "login_url",
      "token",
      "used",
      "name",
      "email_bounce_reason",
      "t",
      "post_login_url",
      "MAX_TOKEN_AGE",
      "login_ip",
      "email_bouncing",
      "ctx",
      "created",
      "data",
      "last_login",
      "lt",
      "requesting_ip"
    ],
    "functions": [
      "_random_token",
      "__init__",
      "generate",
      "validate",
      "log_in",
      "__str__"
    ],
    "classes": [
      "TokenError",
      "LoginToken",
      "User"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/google.py",
    "variables": [
      "user",
      "idinfo"
    ],
    "functions": [
      "get_user_from_google_token",
      "post",
      "google_info_from_token"
    ],
    "classes": [
      "GoogleLoginEndpointView"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/admin.py",
    "variables": [
      "ordering",
      "list_filter",
      "search_fields",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "UserAdmin",
      "LoginTokenAdmin"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/middleware.py",
    "variables": [
      "EMAIL_COOKIE_NAME",
      "response",
      "user"
    ],
    "functions": [
      "__set__",
      "__init__",
      "__get__",
      "__call__"
    ],
    "classes": [
      "AuthenticatedEmailUserDescriptor",
      "AuthenticatedEmailDescriptor",
      "AuthenticatedEmailMiddleware"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/views.py",
    "variables": [
      "create_token",
      "email",
      "logout",
      "current_account",
      "redirect_url",
      "lt"
    ],
    "functions": [
      "post",
      "token_login",
      "get"
    ],
    "classes": [
      "LoginTokenCreateView",
      "LogoutView",
      "CurrentAccountView"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/migrations/0003_rename_data.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/migrations/0002_add_name_and_bouncedata.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/accounts/migrations/0004_login_token.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/models.py",
    "variables": [
      "verbose_name_plural",
      "user_agent",
      "metadata",
      "user_ip",
      "summary",
      "summary_type",
      "meta",
      "latest_statement_date",
      "summary_json",
      "public",
      "unique_together",
      "summarized_statement_count",
      "created",
      "vote",
      "summary_text",
      "identifier"
    ],
    "functions": [
      "total_tokens",
      "get_html",
      "__str__"
    ],
    "classes": [
      "Meta",
      "Summary",
      "SummaryPoll"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/llm.py",
    "variables": [
      "resp",
      "metadata",
      "response_json",
      "message",
      "current_time",
      "rj",
      "model",
      "response",
      "contents",
      "thought_tokens",
      "sleep_time",
      "oldest_timestamp",
      "url",
      "QUICK",
      "messages",
      "call_timestamps",
      "EXPERT",
      "THINKING",
      "api_key",
      "response_text",
      "req"
    ],
    "functions": [
      "decorator",
      "_get_llm_response_openrouter",
      "_get_llm_response_google",
      "wrapper",
      "get_llm_response",
      "rate_limit"
    ],
    "classes": [
      "LLMProviderError",
      "llms"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/admin.py",
    "variables": [
      "list_filter",
      "search_fields",
      "list_display"
    ],
    "functions": [
      "raw_summary_type"
    ],
    "classes": [
      "SummaryAdmin",
      "SummaryPollAdmin"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/views.py",
    "variables": [
      "ip",
      "summary",
      "summary_poll",
      "summary_id",
      "summary_feedback",
      "feedback",
      "vote"
    ],
    "functions": [
      "post"
    ],
    "classes": [
      "SummaryPollView",
      "SummaryFeedbackView"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/migrations/0003_summary_json.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "initial",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/migrations/0002_summary_poll.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/generation/hansard_topics.py",
    "variables": [
      "HANSARD_TOPIC_SUBHED_SCHEMA",
      "instructions",
      "metadata",
      "transcript",
      "summaries",
      "docs",
      "sections_obj",
      "party_wordcount",
      "prompt",
      "parties",
      "logger",
      "SCHEMA",
      "statements",
      "QP_INSTRUCTIONS",
      "num_words",
      "r",
      "request_internal_links",
      "json_resp",
      "HANSARD_TOPIC_INSTRUCTIONS_INTRO",
      "meta",
      "section_type",
      "summary_wordcount",
      "summary",
      "llm_metadata",
      "chunk_statements",
      "summ"
    ],
    "functions": [
      "_summarize_adjournment",
      "_summarize_subheds",
      "update_hansard_summaries",
      "create_hansard_topics_summary",
      "_summarize_hansard_section",
      "_summarize_qp"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/generation/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/generation/utils.py",
    "variables": [
      "metadata",
      "text",
      "transcript",
      "statement_links",
      "new_url",
      "existing_summary",
      "summary_links",
      "invalid_links",
      "logger",
      "characters",
      "text2",
      "statements",
      "attempt",
      "paragraph_links",
      "r",
      "resp2",
      "url",
      "transcript_links",
      "summary",
      "llm_response",
      "urls_lookup",
      "urls"
    ],
    "functions": [
      "unreplace_url",
      "decorator",
      "load_json_response",
      "newfn",
      "replace_url",
      "check_markdown_links",
      "retry",
      "_statement_to_text",
      "get_transcript",
      "_gen_string",
      "call_llm_with_munged_urls",
      "save_summary",
      "strip_markdown_links",
      "check_length"
    ],
    "classes": [
      "LinkError"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/summaries/generation/bill_debate.py",
    "variables": [
      "metadata",
      "BILL_READING_INSTRUCTIONS_PARTY_SCHEMA",
      "BILL_SUMMARY_FROM_SPEECHES",
      "sponsor_party",
      "major_speeches",
      "bill",
      "debate_states",
      "party_summary",
      "BILL_READING_INSTRUCTIONS_PARTY",
      "summary_text",
      "summary_parts",
      "logger",
      "statements",
      "party_transcript",
      "debates_avail",
      "tasks",
      "major_speeches_by_party",
      "json_resp",
      "identifier",
      "summary",
      "summ"
    ],
    "functions": [
      "update_reading_summaries",
      "create_reading_summary",
      "_get_party_summary"
    ],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/api/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/api/urls.py",
    "variables": [
      "urlpatterns"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/api/views.py",
    "variables": [
      "hansard_list",
      "wrap",
      "v",
      "hansard",
      "doc"
    ],
    "functions": [
      "_serialize_statement",
      "get"
    ],
    "classes": [
      "LegacyAPIHansardListView",
      "LegacyAPIHansardView"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/elections/models.py",
    "variables": [
      "match",
      "members",
      "winner",
      "candidates",
      "election",
      "logger",
      "votepercent",
      "objects",
      "riding_votetotals",
      "fullname",
      "minifirst",
      "verbose_name_plural",
      "votetotal",
      "date",
      "candidacies",
      "riding",
      "member",
      "party",
      "riding_candidacies",
      "elected",
      "ordering",
      "byelection",
      "candidate"
    ],
    "functions": [
      "create_from_name",
      "create_member",
      "calculate_vote_percentages",
      "label_winners",
      "create_members",
      "__str__"
    ],
    "classes": [
      "Meta",
      "CandidacyManager",
      "Candidacy",
      "Election"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/elections/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/elections/admin.py",
    "variables": [
      "list_filter",
      "search_fields",
      "list_display"
    ],
    "functions": [],
    "classes": [
      "CandidacyOptions"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/elections/views.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/elections/migrations/__init__.py",
    "variables": [],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/web-ui/src/legacy-migration/elections/migrations/0002_remove_candidacy_occupation.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/web-ui/src/legacy-migration/elections/migrations/0001_initial.py",
    "variables": [
      "dependencies",
      "operations"
    ],
    "functions": [],
    "classes": [
      "Migration"
    ]
  },
  {
    "file": "services/user-service/app/main.py",
    "variables": [
      "app",
      "start_time",
      "response",
      "process_time"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/database/connection.py",
    "variables": [
      "logger",
      "AsyncSessionLocal",
      "engine"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/config/settings.py",
    "variables": [
      "case_sensitive",
      "settings",
      "env_file"
    ],
    "functions": [],
    "classes": [
      "Config",
      "Settings"
    ]
  },
  {
    "file": "services/user-service/app/auth/mfa_handler.py",
    "variables": [
      "message",
      "provisioning_uri",
      "otp",
      "secret",
      "totp",
      "client"
    ],
    "functions": [
      "generate_otp",
      "generate_totp_secret",
      "verify_totp"
    ],
    "classes": [
      "MFAHandler"
    ]
  },
  {
    "file": "services/user-service/app/auth/jwt_handler.py",
    "variables": [
      "user",
      "refresh_token",
      "to_encode",
      "user_id",
      "expire",
      "user_data",
      "access_token",
      "token",
      "payload",
      "security"
    ],
    "functions": [
      "verify_token",
      "create_user_tokens",
      "refresh_access_token",
      "create_refresh_token",
      "create_access_token"
    ],
    "classes": [
      "JWTAuthDependency",
      "JWTHandler"
    ]
  },
  {
    "file": "services/user-service/app/auth/oauth_handler.py",
    "variables": [
      "emails",
      "emails_response",
      "response",
      "headers",
      "primary_email",
      "data",
      "user_data"
    ],
    "functions": [
      "get_oauth_login_url"
    ],
    "classes": [
      "OAuthHandler"
    ]
  },
  {
    "file": "services/user-service/app/auth/simple_auth.py",
    "variables": [
      "mock_user_response"
    ],
    "functions": [
      "require_role"
    ],
    "classes": []
  },
  {
    "file": "services/user-service/app/models/user.py",
    "variables": [
      "date_of_birth",
      "ADMIN",
      "SUSPENDED",
      "two_factor_secret",
      "first_name",
      "NORMAL",
      "DEACTIVATED",
      "email_verified_at",
      "gender",
      "saved_bills",
      "deleted_at",
      "ACTIVE",
      "postal_code",
      "status",
      "account_deletions",
      "INTERNAL",
      "PENDING",
      "TEST",
      "phone_verified_at",
      "REPRESENTATIVE",
      "phone",
      "password_hash",
      "CONSUMER",
      "profile_pictures",
      "id",
      "MODERATOR",
      "Base",
      "two_factor_enabled",
      "ENTERPRISE",
      "preferences",
      "last_name",
      "role",
      "postal_code_history",
      "account_type",
      "representative_issues",
      "email",
      "avatar_url",
      "last_login_at",
      "account_deletion_reason",
      "created_at",
      "age",
      "updated_at",
      "__tablename__",
      "bill_votes",
      "profile_picture"
    ],
    "functions": [
      "is_verified",
      "is_active",
      "full_name",
      "__repr__"
    ],
    "classes": [
      "UserRole",
      "User",
      "AccountType",
      "UserStatus"
    ]
  },
  {
    "file": "services/user-service/app/models/otp.py",
    "variables": [
      "attempts",
      "used",
      "phone",
      "id",
      "otp_type",
      "created_at",
      "Base",
      "used_at",
      "otp",
      "expires_at",
      "__tablename__"
    ],
    "functions": [
      "is_valid",
      "__repr__",
      "is_expired"
    ],
    "classes": [
      "OTP"
    ]
  },
  {
    "file": "services/user-service/app/models/user_engagement.py",
    "variables": [
      "bill_id",
      "vote_type",
      "user",
      "bill_summary",
      "processed_at",
      "old_postal_code",
      "file_size",
      "reason",
      "issue_description",
      "uploaded_at",
      "image_data",
      "changed_at",
      "status",
      "notes",
      "issue_category",
      "image_type",
      "is_active",
      "saved_at",
      "id",
      "user_id",
      "Base",
      "is_saved",
      "issue_title",
      "bill_title",
      "vote_reason",
      "requested_at",
      "representative_response",
      "resolved_at",
      "priority",
      "deletion_reason",
      "created_at",
      "new_postal_code",
      "feedback",
      "updated_at",
      "__tablename__",
      "representative_id"
    ],
    "functions": [],
    "classes": [
      "UserProfilePicture",
      "UserAccountDeletion",
      "BillVoteCast",
      "SavedBill",
      "RepresentativeIssue",
      "UserPostalCodeHistory"
    ]
  },
  {
    "file": "services/user-service/app/models/user_session.py",
    "variables": [
      "token_type",
      "refresh_token",
      "id",
      "user_id",
      "created_at",
      "Base",
      "revoked_at",
      "ip_address",
      "last_used_at",
      "session_token",
      "user_agent",
      "device_type",
      "is_active",
      "expires_at",
      "__tablename__"
    ],
    "functions": [
      "is_valid",
      "__repr__",
      "is_expired"
    ],
    "classes": [
      "UserSession"
    ]
  },
  {
    "file": "services/user-service/app/schemas/user_schemas.py",
    "variables": [
      "from_attributes"
    ],
    "functions": [
      "validate_passwords",
      "__init__"
    ],
    "classes": [
      "UserProfileUpdate",
      "AccountDeletionRequest",
      "UserUpdate",
      "Config",
      "UserAnalytics",
      "UserRoleUpdate",
      "PasswordChangeRequest",
      "UserCreate",
      "UserRead",
      "UserStatusUpdate"
    ]
  },
  {
    "file": "services/user-service/app/api/schemas.py",
    "variables": [
      "from_attributes"
    ],
    "functions": [
      "validate_password"
    ],
    "classes": [
      "AuthResponse",
      "ResetPasswordRequest",
      "HealthResponse",
      "UserStatusUpdate",
      "OTPResponse",
      "OAuthLoginRequest",
      "PasswordResetResponse",
      "OTPRequest",
      "OTPVerifyRequest",
      "Config",
      "UserListResponse",
      "LoginRequest",
      "UserUpdate",
      "UserRoleUpdate",
      "UserBase",
      "LogoutResponse",
      "UserResponse",
      "ForgotPasswordRequest",
      "UserCreate"
    ]
  },
  {
    "file": "services/user-service/app/api/v1/auth.py",
    "variables": [
      "mock_user",
      "result",
      "is_valid",
      "new_access_token",
      "oauth_user_info",
      "tokens",
      "router",
      "user_response",
      "security"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/api/v1/profile_simple.py",
    "variables": [
      "router"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/api/v1/users.py",
    "variables": [
      "total_pages",
      "mock_user",
      "mock_users",
      "user_responses",
      "total",
      "router",
      "search_lower"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/api/v1/health.py",
    "variables": [
      "router"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/api/v1/profile.py",
    "variables": [
      "base64_data",
      "analytics",
      "data_uri",
      "old_postal_code",
      "content",
      "image_type",
      "router"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/api/v1/auth_simple.py",
    "variables": [
      "router"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/api/v1/engagement.py",
    "variables": [
      "analytics",
      "router"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "services/user-service/app/services/push_notification_service.py",
    "variables": [
      "fcm_token",
      "result",
      "results",
      "response",
      "success",
      "logger",
      "subscription",
      "player_id",
      "push_service",
      "payload"
    ],
    "functions": [
      "__init__"
    ],
    "classes": [
      "FirebaseCloudMessaging",
      "MultiPushService",
      "WebPushService",
      "OneSignalService"
    ]
  },
  {
    "file": "services/user-service/app/services/notification_orchestrator.py",
    "variables": [
      "user_results",
      "title",
      "message",
      "results",
      "channels",
      "notification_orchestrator",
      "success",
      "logger",
      "user_email",
      "data"
    ],
    "functions": [
      "__init__"
    ],
    "classes": [
      "NotificationOrchestrator"
    ]
  },
  {
    "file": "services/user-service/app/services/sms_service.py",
    "variables": [
      "message",
      "response",
      "logger",
      "sms_service",
      "data"
    ],
    "functions": [
      "__init__"
    ],
    "classes": [
      "TwilioSMSService",
      "PlivoSMSService",
      "VonageSMSService",
      "MultiSMSService",
      "MockSMSService"
    ]
  },
  {
    "file": "services/user-service/app/services/apprise_service.py",
    "variables": [
      "message",
      "twilio_url",
      "whatsapp_url",
      "subject",
      "resend_url",
      "discord_url",
      "services",
      "onesignal_url",
      "results",
      "email_apobj",
      "logger",
      "sms_url",
      "body",
      "email_url",
      "telegram_url",
      "sms_apobj",
      "title",
      "result",
      "fcm_url",
      "channels",
      "apprise_service",
      "slack_url"
    ],
    "functions": [
      "send_notification",
      "send_email",
      "send_sms",
      "get_configured_services",
      "add_service",
      "test_service",
      "_setup_default_services",
      "send_welcome",
      "send_otp",
      "send_parliamentary_alert",
      "__init__"
    ],
    "classes": [
      "AppriseService"
    ]
  },
  {
    "file": "services/user-service/app/services/email_service.py",
    "variables": [
      "email_service",
      "response",
      "logger",
      "subject",
      "html_content",
      "reset_url",
      "text"
    ],
    "functions": [
      "_html_to_text",
      "__init__"
    ],
    "classes": [
      "ResendEmailService"
    ]
  },
  {
    "file": "services/user-service/app/services/own_mail_server.py",
    "variables": [
      "context",
      "text_part",
      "logger",
      "part",
      "msg",
      "subject",
      "html_content",
      "html_part",
      "own_mail_server"
    ],
    "functions": [
      "__init__"
    ],
    "classes": [
      "OwnMailServer"
    ]
  },
  {
    "file": "services/user-service/app/services/notifico_service.py",
    "variables": [
      "notifico_service",
      "result",
      "results",
      "channels",
      "response",
      "logger",
      "data",
      "payload"
    ],
    "functions": [
      "__init__"
    ],
    "classes": [
      "NotificoService"
    ]
  },
  {
    "file": "services/user-service/app/services/push_service.py",
    "variables": [
      "logger",
      "payload",
      "push_service",
      "payload_json"
    ],
    "functions": [
      "__init__",
      "get_vapid_public_key"
    ],
    "classes": [
      "MockPushService",
      "WebPushService"
    ]
  },
  {
    "file": "services/user-service/alembic/env.py",
    "variables": [
      "target_metadata",
      "url",
      "config",
      "connectable"
    ],
    "functions": [
      "run_migrations_offline",
      "do_run_migrations",
      "run_migrations_online"
    ],
    "classes": []
  },
  {
    "file": "services/user-service/alembic/versions/001_initial_user_schema.py",
    "variables": [
      "revision",
      "down_revision",
      "branch_labels",
      "depends_on"
    ],
    "functions": [
      "downgrade",
      "upgrade"
    ],
    "classes": []
  },
  {
    "file": "scripts/verify_feature_checklist_ids.py",
    "variables": [
      "FEATURES",
      "ROOT",
      "parts",
      "title",
      "text",
      "missing"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "scripts/organize_repo.py",
    "variables": [
      "ROOT",
      "all_files",
      "txt",
      "dest",
      "candidates",
      "referenced",
      "refs",
      "manifest",
      "legacy_candidates",
      "LEGACY",
      "APPLY",
      "core",
      "keep_roots"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "scripts/ten_pass_merge.py",
    "variables": [
      "ROOT",
      "lines",
      "missing",
      "PASS_COUNT",
      "summary_file",
      "summary_md",
      "basename",
      "referenced",
      "feature_name",
      "content",
      "val_docs",
      "PLAN_DIR",
      "required_fields",
      "coverage",
      "validator",
      "VAL_DIR",
      "existing",
      "LINEAGE_FILE",
      "sot_content",
      "ARTIFACTS_DIR",
      "sot_file",
      "result",
      "summary",
      "commit_msg",
      "blocks",
      "merge_count",
      "FEATURES_FILE"
    ],
    "functions": [
      "run_pass",
      "generate_summary",
      "main",
      "add_merge_note",
      "log",
      "validate_data_lineage",
      "validate_cross_references",
      "union_merge_file",
      "validate_feature_mappings",
      "__init__",
      "commit_pass"
    ],
    "classes": [
      "MergeValidator"
    ]
  },
  {
    "file": "scripts/generate_lineage.py",
    "variables": [
      "rp",
      "ROOT",
      "VAL",
      "ep",
      "data",
      "cp",
      "PLAN",
      "path",
      "API",
      "P",
      "ui_c",
      "sp",
      "OUT_MD",
      "OUT_JSON",
      "DB",
      "db_c",
      "xp",
      "tp",
      "UI"
    ],
    "functions": [
      "toks",
      "match"
    ],
    "classes": []
  },
  {
    "file": "scripts/focused_scanner.py",
    "variables": [
      "variables",
      "result",
      "total_funcs",
      "python_files",
      "results",
      "tree",
      "total_vars",
      "total_classes",
      "classes",
      "content",
      "focus_dirs",
      "functions"
    ],
    "functions": [
      "scan_python_file",
      "main"
    ],
    "classes": []
  },
  {
    "file": "scripts/ensure_feature_stubs.py",
    "variables": [
      "FEATURES",
      "ROOT",
      "txt",
      "parts",
      "fields",
      "out",
      "changed",
      "new",
      "missing"
    ],
    "functions": [],
    "classes": []
  },
  {
    "file": "scripts/var_func_map.py",
    "variables": [
      "func_pattern",
      "suffix",
      "tree",
      "match",
      "var_pattern",
      "column_pattern",
      "label",
      "key_pattern",
      "dot_content",
      "classes",
      "path",
      "imports",
      "source_patterns",
      "content",
      "mapper",
      "import_pattern",
      "graph",
      "variables",
      "all_files",
      "keys",
      "tables",
      "dot_file",
      "table_pattern",
      "result",
      "json_file",
      "arrow_funcs",
      "columns",
      "color",
      "class_pattern",
      "arrow_pattern",
      "functions"
    ],
    "functions": [
      "generate_dot",
      "save_json",
      "scan_file",
      "main",
      "scan_yaml_yml_file",
      "scan_python_file",
      "scan_sql_file",
      "scan_js_ts_file",
      "build_edges",
      "__init__",
      "build_graph"
    ],
    "classes": [
      "CodeMapper"
    ]
  },
  {
    "file": "scripts/python_scanner.py",
    "variables": [
      "variables",
      "result",
      "python_files",
      "results",
      "tree",
      "classes",
      "content",
      "functions"
    ],
    "functions": [
      "scan_python_file",
      "main"
    ],
    "classes": []
  }
]