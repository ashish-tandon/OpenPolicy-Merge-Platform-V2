{
  "total_passes": 20,
  "passes": [
    {
      "pass_number": 1,
      "start_time": 1755968568.7877939,
      "end_time": 1755968628.7877982,
      "duration": 60,
      "loops": [
        {
          "loop": "A",
          "pass": 1,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 1,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 1,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 1,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 1,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 1,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "alignment_scores": {
        "architecture": {
          "score": 50.0
        },
        "features": {
          "score": 0.0
        },
        "data_flow": {
          "score": 80.6
        },
        "routing": {
          "score": 1.3
        },
        "quality": {
          "score": 100.0
        },
        "operations": {
          "score": 0.0
        }
      }
    },
    {
      "pass_number": 2,
      "start_time": 1755969168.787804,
      "end_time": 1755969228.787804,
      "duration": 60,
      "loops": [
        {
          "loop": "A",
          "pass": 2,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 2,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 2,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 2,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 2,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 2,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "alignment_scores": {
        "architecture": {
          "score": 50.0
        },
        "features": {
          "score": 0.0
        },
        "data_flow": {
          "score": 80.6
        },
        "routing": {
          "score": 1.3
        },
        "quality": {
          "score": 100.0
        },
        "operations": {
          "score": 0.0
        }
      }
    },
    {
      "pass_number": 3,
      "start_time": 1755969768.787806,
      "end_time": 1755969828.787806,
      "duration": 60,
      "loops": [
        {
          "loop": "A",
          "pass": 3,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 3,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 3,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 3,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 3,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 3,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "alignment_scores": {
        "architecture": {
          "score": 50.0
        },
        "features": {
          "score": 0.0
        },
        "data_flow": {
          "score": 80.6
        },
        "routing": {
          "score": 1.3
        },
        "quality": {
          "score": 100.0
        },
        "operations": {
          "score": 0.0
        }
      }
    },
    {
      "pass_number": 4,
      "start_time": 1755971542.5806684,
      "loops": [
        {
          "loop": "A",
          "pass": 4,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 4,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 4,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 4,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 4,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 4,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755971558.1354363,
      "duration": 15.554767847061157,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 5,
      "start_time": 1755971558.1360912,
      "loops": [
        {
          "loop": "A",
          "pass": 5,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 5,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 5,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 5,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 5,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 5,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755971573.7464786,
      "duration": 15.610387325286865,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 6,
      "start_time": 1755971573.7469523,
      "loops": [
        {
          "loop": "A",
          "pass": 6,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 6,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 6,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 6,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 6,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 6,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755971589.3258362,
      "duration": 15.57888388633728,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 7,
      "start_time": 1755971589.3263566,
      "loops": [
        {
          "loop": "A",
          "pass": 7,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 7,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 7,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 7,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 7,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 7,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755971604.7237082,
      "duration": 15.397351503372192,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 8,
      "start_time": 1755971604.7241735,
      "loops": [
        {
          "loop": "A",
          "pass": 8,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 8,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 8,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 8,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 8,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 8,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755971620.1276457,
      "duration": 15.403472185134888,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 9,
      "start_time": 1755971620.1282067,
      "loops": [
        {
          "loop": "A",
          "pass": 9,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 9,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 9,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 9,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 9,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 9,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755971635.6218994,
      "duration": 15.493692636489868,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 10,
      "start_time": 1755971635.6224346,
      "loops": [
        {
          "loop": "A",
          "pass": 10,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 10,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 10,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 10,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 10,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 10,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755971651.3114266,
      "duration": 15.688992023468018,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 11,
      "start_time": 1755972168.809472,
      "loops": [
        {
          "loop": "A",
          "pass": 11,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 11,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 11,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 11,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 11,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 11,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972184.665642,
      "duration": 15.856169939041138,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 12,
      "start_time": 1755972184.6661658,
      "loops": [
        {
          "loop": "A",
          "pass": 12,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 12,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 12,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 12,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 12,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 12,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972200.6534672,
      "duration": 15.987301349639893,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 13,
      "start_time": 1755972200.6539319,
      "loops": [
        {
          "loop": "A",
          "pass": 13,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 13,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 13,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 13,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 13,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 13,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972216.3100674,
      "duration": 15.656135559082031,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 14,
      "start_time": 1755972216.3111298,
      "loops": [
        {
          "loop": "A",
          "pass": 14,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 14,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 14,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 14,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 14,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 14,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972231.9011447,
      "duration": 15.590014934539795,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 15,
      "start_time": 1755972231.9016273,
      "loops": [
        {
          "loop": "A",
          "pass": 15,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 15,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 15,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 15,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 15,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 15,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972247.3917332,
      "duration": 15.490105867385864,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 16,
      "start_time": 1755972247.392249,
      "loops": [
        {
          "loop": "A",
          "pass": 16,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 16,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 16,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 16,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 16,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 16,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972262.7403736,
      "duration": 15.348124504089355,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 17,
      "start_time": 1755972262.7408483,
      "loops": [
        {
          "loop": "A",
          "pass": 17,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 17,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 17,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 17,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 17,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 17,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972278.31977,
      "duration": 15.578921794891357,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 18,
      "start_time": 1755972278.320249,
      "loops": [
        {
          "loop": "A",
          "pass": 18,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 18,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 18,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 18,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 18,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 18,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972293.816949,
      "duration": 15.496699810028076,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 19,
      "start_time": 1755972293.8174865,
      "loops": [
        {
          "loop": "A",
          "pass": 19,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 19,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 19,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 19,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 19,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 19,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972309.4131134,
      "duration": 15.595626831054688,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    },
    {
      "pass_number": 20,
      "start_time": 1755972309.4136536,
      "loops": [
        {
          "loop": "A",
          "pass": 20,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/var_func_map.py",
              "success": true
            }
          ]
        },
        {
          "loop": "B",
          "pass": 20,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/env_audit.py",
              "success": true
            },
            {
              "script": "scripts/bug_audit.py",
              "success": true
            },
            {
              "script": "scripts/data_journey.py",
              "success": true
            }
          ]
        },
        {
          "loop": "C",
          "pass": 20,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/flow_design.py",
              "success": true
            }
          ]
        },
        {
          "loop": "D",
          "pass": 20,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/arch_synthesis.py",
              "success": true
            }
          ]
        },
        {
          "loop": "E",
          "pass": 20,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/routing_realignment.py",
              "success": true
            },
            {
              "script": "scripts/exec_plan.py",
              "success": true
            }
          ]
        },
        {
          "loop": "F",
          "pass": 20,
          "success": true,
          "scripts_run": [
            {
              "script": "scripts/source_of_truth.py",
              "success": true
            }
          ]
        }
      ],
      "end_time": 1755972325.1515021,
      "duration": 15.73784852027893,
      "alignment_scores": {
        "architecture": {
          "score": 50.0,
          "gaps": [
            {
              "area": "api_layer",
              "gap": "Need GraphQL federation",
              "priority": "high"
            },
            {
              "area": "services",
              "gap": "Need service decomposition",
              "priority": "high"
            }
          ],
          "risks": [
            {
              "risk": "Service decomposition complexity",
              "impact": "high",
              "mitigation": "Incremental extraction with feature flags"
            },
            {
              "risk": "Data migration errors",
              "impact": "high",
              "mitigation": "Comprehensive backup and rollback procedures"
            },
            {
              "risk": "Performance degradation during transition",
              "impact": "medium",
              "mitigation": "Load testing and gradual rollout"
            },
            {
              "risk": "Team skill gaps",
              "impact": "medium",
              "mitigation": "Training and documentation"
            }
          ],
          "opportunities": [
            {
              "opportunity": "Improved scalability",
              "benefit": "Handle 10x traffic",
              "effort": "medium"
            },
            {
              "opportunity": "Better developer experience",
              "benefit": "Faster feature development",
              "effort": "low"
            },
            {
              "opportunity": "Real-time capabilities",
              "benefit": "Live parliamentary updates",
              "effort": "medium"
            },
            {
              "opportunity": "Mobile platform",
              "benefit": "Reach more citizens",
              "effort": "high"
            }
          ],
          "phase": "Unknown"
        },
        "features": {
          "score": 0,
          "total_legacy_features": 0,
          "matched_features": 0,
          "unmatched_features": 0,
          "gaps": []
        },
        "data_flow": {
          "score": 80.55555555555556,
          "complete_journeys": 0,
          "total_data_points": 0,
          "gaps": []
        },
        "routing": {
          "score": 1.276595744680851,
          "total_api_routes": 235,
          "total_ui_components": 339,
          "mappings": 32,
          "orphan_routes": 232,
          "orphan_components": 27,
          "gaps": [
            "/",
            "/healthz",
            "/version",
            "/metrics",
            "/suggestions"
          ]
        },
        "quality": {
          "score": 100,
          "total_bugs": 0,
          "critical_bugs": 0,
          "high_bugs": 0,
          "test_coverage": "TBD",
          "gaps": []
        },
        "operations": {
          "score": 0.0,
          "healthy_services": 0,
          "total_services": 5,
          "docker_available": false,
          "gaps": [
            "Docker not available",
            "Service unhealthy: API Gateway",
            "Service unhealthy: User Service",
            "Service unhealthy: OpenMetadata",
            "Service unhealthy: Elasticsearch",
            "Service unhealthy: Frontend"
          ]
        }
      }
    }
  ],
  "final_alignment": {
    "architecture": {
      "score": 50.0,
      "gaps": [
        {
          "area": "api_layer",
          "gap": "Need GraphQL federation",
          "priority": "high"
        },
        {
          "area": "services",
          "gap": "Need service decomposition",
          "priority": "high"
        }
      ],
      "risks": [
        {
          "risk": "Service decomposition complexity",
          "impact": "high",
          "mitigation": "Incremental extraction with feature flags"
        },
        {
          "risk": "Data migration errors",
          "impact": "high",
          "mitigation": "Comprehensive backup and rollback procedures"
        },
        {
          "risk": "Performance degradation during transition",
          "impact": "medium",
          "mitigation": "Load testing and gradual rollout"
        },
        {
          "risk": "Team skill gaps",
          "impact": "medium",
          "mitigation": "Training and documentation"
        }
      ],
      "opportunities": [
        {
          "opportunity": "Improved scalability",
          "benefit": "Handle 10x traffic",
          "effort": "medium"
        },
        {
          "opportunity": "Better developer experience",
          "benefit": "Faster feature development",
          "effort": "low"
        },
        {
          "opportunity": "Real-time capabilities",
          "benefit": "Live parliamentary updates",
          "effort": "medium"
        },
        {
          "opportunity": "Mobile platform",
          "benefit": "Reach more citizens",
          "effort": "high"
        }
      ],
      "phase": "Unknown"
    },
    "features": {
      "score": 0,
      "total_legacy_features": 0,
      "matched_features": 0,
      "unmatched_features": 0,
      "gaps": []
    },
    "data_flow": {
      "score": 80.55555555555556,
      "complete_journeys": 0,
      "total_data_points": 0,
      "gaps": []
    },
    "routing": {
      "score": 1.276595744680851,
      "total_api_routes": 235,
      "total_ui_components": 339,
      "mappings": 32,
      "orphan_routes": 232,
      "orphan_components": 27,
      "gaps": [
        "/",
        "/healthz",
        "/version",
        "/metrics",
        "/suggestions"
      ]
    },
    "quality": {
      "score": 100,
      "total_bugs": 0,
      "critical_bugs": 0,
      "high_bugs": 0,
      "test_coverage": "TBD",
      "gaps": []
    },
    "operations": {
      "score": 0.0,
      "healthy_services": 0,
      "total_services": 5,
      "docker_available": false,
      "gaps": [
        "Docker not available",
        "Service unhealthy: API Gateway",
        "Service unhealthy: User Service",
        "Service unhealthy: OpenMetadata",
        "Service unhealthy: Elasticsearch",
        "Service unhealthy: Frontend"
      ]
    }
  }
}