[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=85
    --durations=10
    --maxfail=5

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, external dependencies)
    e2e: End-to-end tests (slowest, full system)
    slow: Tests that take longer than 5 seconds
    fast: Tests that complete quickly
    auth: Authentication and authorization tests
    database: Database-related tests
    websocket: WebSocket functionality tests
    api: API endpoint tests
    security: Security and validation tests
    performance: Performance and load tests
    smoke: Basic functionality tests
    regression: Regression tests for known issues

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */alembic/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test output formatting
[tool:pytest.ini_options]
minversion = "7.0"
addopts = 
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --color=yes
    --durations=10
    --maxfail=5
    --reruns=2
    --reruns-delay=1

# Async test configuration
asyncio_mode = auto

# Test timeouts
timeout = 30

# Parallel execution (if supported)
# addopts = -n auto

# Output configuration
console_output_style = progress
