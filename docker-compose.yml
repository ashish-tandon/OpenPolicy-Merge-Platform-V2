services:
  db:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: openpolicy
      POSTGRES_USER: openpolicy
      POSTGRES_DB: openpolicy
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports: ["5432:5432"]
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openpolicy -d openpolicy"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_trgm
      -c max_connections=100
      -c shared_buffers=256MB

  api-gateway:
    build: 
      context: ./services/api-gateway
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./services/api-gateway:/app
      - /app/__pycache__
    environment:
      - DATABASE_URL=postgresql+psycopg://openpolicy:openpolicy@db:5432/openpolicy
      - ENV=local
      - LOG_LEVEL=DEBUG
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  etl:
    build: 
      context: ./services/etl
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./services/etl:/app
      - ./data:/data
      - /app/__pycache__
    environment:
      - DATABASE_URL=postgresql+psycopg://openpolicy:openpolicy@db:5432/openpolicy
      - ENV=local
      - LOG_LEVEL=INFO
    profiles:
      - etl

  user-service:
    build: 
      context: ./services/user-service
      dockerfile: Dockerfile
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8082:8081"
    volumes:
      - ./services/user-service:/app
      - /app/__pycache__
    environment:
      - USER_DATABASE_URL=postgresql+psycopg://openpolicy:openpolicy@db:5432/openpolicy_users
      - REDIS_URL=redis://redis:6379/1
      - ENV=local
      - LOG_LEVEL=DEBUG
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  admin-ui:
    image: nginx:alpine
    ports:
      - "3000:80"
    volumes:
      - ./services/admin-ui/dist:/usr/share/nginx/html
      - ./services/admin-ui/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api-gateway
    profiles:
      - frontend

  web-ui:
    image: nginx:alpine
    ports:
      - "3001:80"
    volumes:
      - ./services/web-ui/.next:/usr/share/nginx/html
      - ./services/web-ui/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api-gateway
    profiles:
      - frontend

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: openpolicy-network
